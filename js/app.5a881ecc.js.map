{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/dataLoad.js","webpack:///./src/scripts/dataFormat.js","webpack:///./src/scripts/pathCalc.js","webpack:///./src/scripts/distributionView.js","webpack:///./src/scripts/viewControl.js","webpack:///./src/scripts/filterComponent.js","webpack:///./src/scripts/selectedPaths.js","webpack:///./src/scripts/buttonComponents.js","webpack:///./src/scripts/renderPathView.js","webpack:///./src/scripts/sidebarComponent.js","webpack:///./src/scripts/toolbarComponent.js","webpack:///./src/scripts/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","loadData","_x","_x2","_x3","_loadData","this","arguments","_callee","readFunction","fileString","type","regeneratorRuntime","wrap","_context","prev","next","sent","String","abrupt","stop","calculateScales","calculatedAtt","colorKeeper","keys","map","max","d3","rows","upperCI95","min","lowerCI95","realVal","field","yScale","range","domain","clamp","satScale","colorScale","catColor","scaleCat","fields","filter","f","stateColors","sc","state","color","scales","scaleName","matchLeaves","labels","leaves","leafChar","calculatedScales","mappedLeafLabels","x","leaf","label","leafCharIndex","node","V2","attr","chosenOne","indexOf","forEach","k","scaleOb","states","clade","attributes","matchEdges","edges","edgeLen","edge","attrKeys","index","edgeLength","res","estimate","undefined","row","normPaths","paths","att","root","nodeLabels","scale","rootAttr","console","error","maxBranch","xScale","leafIndex","prevStep","assign","step","edgeMove","move","formatAttributeData","pathData","filterArray","path","speciesLabel","species","winState","attrLabel","st","allPaths","edgeArray","leafArray","source","target","le","getPath","pathKeeper","ed","reverse","drawBranchPointDistribution","svg","branchBar","append","classed","text","nodeLengthArray","nodeDuplicateCheck","eMove","bPointScale","pointGroups","selectAll","join","renderDistibutions","mainDiv","moveMetric","attrHide","filterMaster","attribute","newNormed","distributionView_toConsumableArray","keysToHide","medBranchLength","normBins","Array","fill","base","top","binI","internalNodes","leafNodes","flatMap","rootNodes","log","sortedBins","mapNorm","bin","fData","leafAttr","leafData","histogram","thresholds","ticks","bins","maxO","v","minO","xO","histogramO","branches","rootData","colors","chosen","average","stDev","stUp","stDown","test","stat","branchScale","binnedWrap","style","predictedWrap","contRoot","newy","sort","a","b","height","concat","on","tool","transition","duration","html","pageX","pageY","branchGroup","continDist","list","y","select","remove","lineGen","curve","y0","y1","dat","each","nodes","distrib","rangeRect","discreteDist","combEdge","discreteBinWrap","stateGroups","predictedWidth","lineGenD","observedWrap","contOb","contBars","xvalues","discOb","discBars","dRects","xPoint","padding","updateMainView","main","getLatestData","document","getElementById","disabled","drawPathsAndAttributes","initialViewLoad","pathGroups","from","Set","group","groupDistributions","removeFilter","filterId","dataFilters","filterType","filterIndex","testData","filterComponent_toConsumableArray","dataMaster","fun","filterFunction","attributeType","newTestData","selectedOption","predictedFilter","observedFilter","addFilterTag","fromState","toState","newFilterMaster","addFilter","attType","filFunction","oldData","newData","extra","filterOb","before-data","ex","toggleFilters","filterButton","filterDiv","normedPaths","presentFilters","noShow","wrapper","labelGroups","toggle","shownToggs","togg","circle","toggleCircle","newKeys","hideKeys","newFilMaster","renderAttToggles","selectWrapper","attButton","stateChange","attProps","options","optionArray","optKeys","button1","button2","submit","classList","discreteFilter","filId","treeLinks","treeNode","nodeList","missingLinks","missingNodes","continRanges","ranges","brushBars","wrapperRect","xBrush","extent","selection","handle","invert","brushGroup","selections","_groups","__brush","lastFilter","continuousFilter","stateFilter","searchDiv","form","input","queryArray","split","toLowerCase","filterToolbar","button","span","xSpan","queryFilter","formater","datum","nodeId","nodeFilter","selectedNode","predicted","observed","numb","filterPred","filterObs","win","selectorDiv","selectId","dropDownWrapper","selectedPaths","comparisonKeeper","pathSelected","selectedPath","otherPaths","selectedDiv","selectedPaths_toConsumableArray","commonNodes","selectedSpecies","treeNodes","attrFilter","selectedToolTest","selectedTool","empty","sortByDistanceDiv","sortByDistanceButton","sortButton","attrSortWrap","radioDiv","radio","svgTest","branchFrequency","reduce","acc","curr","selectWrap","circleScale","values","selectedGroups","pathBars","addRemoveBubble","speciesTitle","string","charAt","toUpperCase","timelines","nodeGroups","distance","hovers","nearest","nodearray","attributeWrapper","attData","attributeGroups","renderAttributes","drawContAtt","drawDiscreteAtt","sorted","high","leafOther","highLeaves","low","lowLeaves","same","commonNodeStart","children","nodeIndex","thresh","subset","chil","parentBase","scaledParentMove","parentScale","level","getCommonNodes","childNodeWrap","childNodes","pathArray","line","commonHover","renderSelectedTopology","attWrap","ch","attDataComb","offset","last","mappedDis","dis","spec","maxProb","maxP","notMax","other","findMaxState","attGroups","wrapRect","speciesGrp","attributeHeight","lineGenC","innerStatePaths","disGroup","sp","branchGrpDis","bCirc","otherCirc","conGroup","branchGrpCon","MeanRect","confiBars","longestBranch","startBranch","renderSelectedView","commonNode","chosenPath","rankedPaths","pathIndex","sortedData","sortOtherPaths","pathRemove","renderComparison","buttonGroupTest","buttonGroup","usedColors","groupColor","newColor","find","compareButtonTest","compareButton","comparisonCombined","newAtt","com","atts","added","standard","variance","first","second","filteredComp","selectedTest","attWraps","mean","e","Math","sqrt","meanStandard","sigma2","upCon95","lowCon95","exit","attWrapsEnter","enter","merge","innerWrap","missing","areaG","confGroups","conf","NaN","_this","axisGroupTest","axisGroup","maxDiff","newScale","startBins","difArray","_loop","diffs","diff","abs","obsDistWrap","newLeaves","binData","xAxis","distGroups","groupLength","dropDown","div","dropText","dropId","dropdiv","dropContent","nodeTooltipFlag","collapsed","pathWrapTest","pathWrap","pathAdd","notIt","renderPaths","attKeys","attrMove","predictedAttrGrps","attribWrap","sizeAndMove","selectedState","leafStateFilter","innerTimeline","innerPaths","change","continuousAtt","continuousPaths","attributeNodesCont","innerBars","drawGroups","stateBins","splitOnArray","newBins","newBinData","pa","firstGroupSvg","firstGroup","secondGroup","g","newM","groupLabels","stateLabel","innerGroup","innerWrapRect","wrappers","shiftWraps","xAxisShift","shiftCircles","leafWraps","totalVal","totalMean","newVal","groupMean","dotVals","distcircles","w","groupBy","totalArray","leafWrapsD","rects","groupedData","width","ratio","drawLeaves","bars","discreteAtt","innerTimelineDis","statePath","disct","attributeNodesDisc","stateDots","endStateDot","stateBars","probability","chosenIn","valueAdd","buildTreeStructure","getNested","V1","updateBrush","treeBrush","sidebar","toolbarDiv","treeFilter","brushId","attributType","sidebarComponent_toConsumableArray","_ref","mark","renderTreeButtons","treeButton","renderTree","treeViewButton","selectedNodes","no","id","collapseSub","_children","uncollapse","dimensions","margin","right","bottom","left","treemap","size","addingEdgeLength","nestedData","treenodes","groupedBool","lengthBool","sidebarTest","treeSvg","gTest","updateTree","treeData","getLeaves","stepDown","ids","branchPoint","array","collapseTree","attrDraw","assignPosition","position","positionArray","child","branchCount","findDepth","descendants","parent","notleaves","circ","branchNodes","triangle","uncollapseSub","raise","toolbarControl","toolbar","pathView","viewButton","togglePathView","scrunchButton","toggleScrunch","discreteViewButton","discretePredictedGroups","dropOptions","savedSelected","then","edgeSource","leafChar2","matchedLeaves","matchedEdges","unique","self","entries","en","t0","t1","t2","t3","t4","awesomeness","island","SVL","ecomorph","PCIII_padwidth_vs_tail"],"mappings":"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","file":"js/app.5a881ecc.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/Evo-Bio-Design-Study/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([140,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as d3 from 'd3';\n\nexport async function loadData(readFunction, fileString, type){\n    let data = await readFunction(fileString);\n    data.type = String(type);\n    return data;\n}\n\n\n","import * as d3 from \"d3\";\n\n\nexport function calculateScales(calculatedAtt, colorKeeper){\n    return Object.keys(calculatedAtt).map((d, i)=> {\n       \n        if(calculatedAtt[d].type == 'continuous'){\n            let max = d3.max(calculatedAtt[d].rows.map(m=> m.upperCI95));\n            let min = d3.min(calculatedAtt[d].rows.map(m=> m.lowerCI95));\n            let mean = d3.mean(calculatedAtt[d].rows.map(m=> m.realVal));\n            \n            return {\n                'field': d, \n                'type':'continuous',\n                'max': max, \n                'min':  min,\n                'yScale': d3.scaleLinear().range([0, 43]).domain([min, max]).clamp(true),\n                'satScale': d3.scaleLinear().range([0, .9]).domain([min, max]),\n                'colorScale': d3.scaleLinear().range([colorKeeper[i][0], '#f23929']).domain([min, max]),\n                'catColor': colorKeeper[i][0],\n            };\n        }else{\n            let scaleCat = calculatedAtt[d].fields.filter(f=> f!= 'nodeLabels');\n            return { \n                'field': d,\n                'type':'discrete',\n                'stateColors': scaleCat.map((sc, i)=> {\n                    return {'state': sc, 'color': colorKeeper[i][0]};\n                }),\n                'catColor': colorKeeper[i][0],\n                'scales': scaleCat.map(sc=> {\n                let scaleName = sc;\n               \n                let max = 1;\n                let min = 0;\n                return {\n                    'field': d, \n                    'scaleName': scaleName,\n                    'max': max, \n                    'min':  min,\n                    'yScale': d3.scaleLinear().range([45, 0]).domain([min, max]),\n                };\n                \n            }) };\n        }\n    });\n}\n\nexport function matchLeaves(labels, leaves, leafChar, calculatedScales){\n\n        ////MATCHING LABELSS TO THE STUFF/////\n    let  mappedLeafLabels = labels.rows.map(m=> {\n        let label = m.x;\n        return label;\n    });\n\n    return leaves.map((leaf, i)=> {\n      \n        leaf.label = mappedLeafLabels[i];\n\n        //let leafCharIndex = leafChar.rows.map(m=> m[\"\"]);\n      \n        let leafCharIndex = leafChar.rows[0][\"\"] ? leafChar.rows.map(m=> m[\"\"]) : leafChar.rows.map(m=> m[\"species\"]);\n  \n        leaf.node = leaf.V2;\n        let keys = calculatedScales.map(m=> m.field);\n        let attr = {};\n         \n        let chosenOne = leafChar.rows[leafCharIndex.indexOf(leaf.label)];\n \n        keys.forEach((k)=> {\n             let scaleOb = calculatedScales.filter(f=> f.field == k)[0];\n            \n             if(scaleOb.type === 'discrete'){\n                 let thisScale = scaleOb.scales.filter(f=> f.scaleName == chosenOne[k])[0].yScale;\n                 let states = scaleOb.scales.map(m=> m.scaleName).map(state=> {\n                     let value = (state === chosenOne[k])? 1 : 0;\n                    // return {'state': state,  scaleVal: thisScale(value), realVal: value};\n                     return {'state': state, realVal: value};\n                 });\n                 //let states = {'state': leafChar.rows[i][k],  scaleVal: thisScale(1), realVal: 1}\n                 attr[k] = {'states': states, 'label': k, 'type': scaleOb.type, leaf: true};\n             }else if(scaleOb.type === 'continuous'){\n                 let scale = scaleOb.yScale;\n                 //attr[k] = {'scaleVal': scale(chosenOne[k]), 'scaledHigh': 0, 'scaledLow': 0, 'realVal': chosenOne[k], 'type': scaleOb.type, leaf: true};\n                 attr[k] = {'realVal': chosenOne[k], 'type': scaleOb.type, leaf: true};\n \n             }else{\n                 attr[k] = 'error in leaf matching';\n             }\n         });\n\n         leaf.clade = chosenOne.clade;\n         leaf.attributes = attr;\n         leaf.leaf = true;\n     \n         return leaf;\n     });\n}\n\nexport function matchEdges(edges, edgeLen, calculatedAtt, calculatedScales){\n    return edges.rows.map((edge, i)=> {\n        let attrKeys = Object.keys(calculatedAtt);\n        let index = calculatedAtt[attrKeys[0]].rows.map(m=> m['nodeLabels']).indexOf(edge.V2);\n        edge.edgeLength = edgeLen.rows[i].x;\n        edge.node = edge.V2;\n        if(index > -1){ \n            attrKeys.forEach(attr=> {\n                if(calculatedAtt[attr].type == 'continuous'){\n                    let scale = calculatedScales.filter(f=> f.field == attr)[0].yScale;\n                    let res = calculatedAtt[attr].rows[index];\n                   // res.scaleVal = scale(res.estimate);\n                   // res.scaledLow = scale(res.lowerCI95);\n                    //res.scaledHigh = scale(res.upperCI95);\n                    res.realVal = res.estimate;\n                    res.type = 'continuous';\n                    edge.attributes = (edge.attributes != undefined)? edge.attributes : {};\n                    edge.attributes[attr] = res;\n                }else{\n                    let scales = calculatedScales.filter(f=> f.field == attr)[0].scales;\n                    let row = calculatedAtt[attr].rows[index];\n                    let states = scales.map(s=> {\n                       // return {'state': s.scaleName,  scaleVal: s.yScale(row[s.scaleName]), realVal: row[s.scaleName]};\n                        return {'state': s.scaleName, realVal: row[s.scaleName]};\n                    });\n                    edge.attributes = (edge.attributes != undefined)? edge.attributes : {};\n                    edge.attributes[attr] = {'states':states, 'type': 'discrete'};\n                }\n            });\n        }\n        return edge;\n    });\n\n}\n\nexport function normPaths(paths, calculatedAtt, calculatedScales){\n    paths.forEach((p, i)=> {\n        p[0].attributes = {};\n        Object.keys(calculatedAtt).map(att=> { \n            if(calculatedAtt[att].type == 'continuous'){\n                let root = calculatedAtt[att].rows.filter(f=> (f.nodeLabels == p[0].node) || (f.nodeLabels == ('node ' + p[0].node)))[0];\n                p[0].attributes[att] = {};\n                \n                let scale = calculatedScales.filter(f=> f.field == att)[0].yScale;\n            \n                p[0].attributes[att].realVal = root.estimate;\n                p[0].attributes[att].upperCI95 = root.upperCI95;\n                p[0].attributes[att].lowerCI95 = root.lowerCI95;\n                p[0].attributes[att].scale = scale;\n                p[0].attributes[att].type = 'continuous';\n            }else if(calculatedAtt[att].type == 'discrete'){\n                let root = calculatedAtt[att].rows.filter(f=> f.nodeLabels == p[0].node)[0];\n                let scales = calculatedScales.filter(f=> f.field == att)[0].scales;\n                let rootAttr = scales.map(s=> {\n                    //return {'state': s.scaleName,  scaleVal: s.yScale(root[s.scaleName]), realVal: root[s.scaleName]};\n                    return {'state': s.scaleName, realVal: root[s.scaleName]};\n                });\n                p[0].attributes[att] = {'states':rootAttr, 'type': 'discrete'};\n               \n            }else{\n                console.error('type not found');\n            }\n        });\n    });\n    \n    let maxBranch = d3.max(paths.map(r=> r.length));\n\n    //SCALES for X, Y /////\n    let xScale = d3.scaleLinear().range([0, 1000]).clamp(true);\n \n    let normedPaths = paths.map((p, i)=> {\n        p.xScale = xScale.domain([0, maxBranch - 1]);\n     \n        let leafIndex = p.length - 1;\n        let lengths = p.map(l=> l.edgeLength);\n        let prevStep = 0;\n        return p.map((m, j)=> {\n            let node = Object.assign({}, m);\n            //INTEGRATE THE DISTNACES HERE WHEN THEY WORK\n            let step = node.edgeLength + prevStep;\n            node.edgeMove = (j < leafIndex) ? step : 1;\n            prevStep = prevStep + node.edgeLength;\n         \n            node.move = (j < leafIndex) ? p.xScale(j) : p.xScale(maxBranch - 1);\n        \n            return node;\n        });\n    });\n\n    return normedPaths;\n}\n\nexport function filterKeeper(){\n\n    this.filterArray = new Array();\n    this.attributeFilter = false;\n\n    this.addFilter = function(filter){\n        this.filterArray.push(filter);\n        return this.filterArray;\n    };\n    this.removeFilter = function(index){\n        this.filterArray = this.filterArray.filter((f, i)=> i != index);\n        return this.filterArray;\n    };\n}\n\nexport function formatAttributeData(pathData, scales, filterArray){\n\n    let keys = (filterArray == null)? Object.keys(pathData[0][0].attributes): filterArray;\n   \n    let newData = pathData.map(path=> {\n        return keys.map((key)=> {\n            return path.map((m)=> {\n                let speciesLabel = path[path.length - 1].label;\n                if(m.attributes[key].type === 'continuous'){\n                    m.attributes[key].species = speciesLabel;\n                    m.attributes[key].color = scales.filter(f=> f.field === key)[0].catColor;\n                    m.attributes[key].move = m.move;\n                    m.attributes[key].node = m.node;\n                    m.attributes[key].edgeMove = m.edgeMove;\n                    m.attributes[key].label = key;\n                    m.attributes[key].yScale = scales.filter(s=> s.field === key)[0].yScale;\n                    m.attributes[key].satScale = scales.filter(s=> s.field === key)[0].satScale;\n                    m.attributes[key].colorScale = scales.filter(s=> s.field === key)[0].colorScale;\n                    return m.attributes[key];\n                }else if(m.attributes[key].type === 'discrete'){\n                    if(m.leaf){\n                        let state = m.attributes[key];\n                        state.species = speciesLabel;\n                        state.winState = m.attributes[key].states.filter(f=> f.realVal === 1)[0].state;\n                        state.color = scales.filter(f=> f.field === key)[0].stateColors.filter(f=> f.state === state.winState)[0].color;\n                        state.move = m.move;\n                        state.node = m.node;\n                        state.edgeMove = m.edgeMove;\n                        state.attrLabel = key;\n                        return state;\n                    }else{\n                        let states = m.attributes[key].states ? m.attributes[key].states : m.attributes[key];//.filter(f => f.state != undefined);\n                        return states.map((st, j)=> {\n                            st.color = scales.filter(f=> f.field === key)[0].stateColors.filter(f=> f.state === st.state)[0].color;\n                            st.move = m.move;\n                            st.node = m.node;\n                            st.edgeMove = m.edgeMove;\n                            st.attrLabel = key;\n                            st.species = speciesLabel;\n                            return st;\n                        });\n                    }\n             \n                }else{\n                    console.error('attribute type not found');\n                }\n            });\n        });\n    });\n    return newData;\n}","/**\n * \n * @param {array of all graph edges} edgeArray \n * @param {array of leaf nodes in graph} leafArray \n * @param {string for property} source\n * @param {string for property} target  \n */\nexport function allPaths(edgeArray, leafArray, source, target){\n    return leafArray.map(le=> getPath(edgeArray, le, [le], source, target));\n}\n\nexport function getNested(node, edgeArray){\n    node.children = edgeArray.filter(f=> String(f.V1) === String(node.node));\n    node.name = String(node.node);\n    if(node.children.length > 0){\n        node.children.forEach(c=> getNested(c, edgeArray));\n    }else{\n        return node;\n    }\n    return node;\n}\n\nexport function calculateMovingAverage(data, i) {\n\n    if (movingAverage === 0) {\n        return data[i][yValue];\n    }\n\n    var count = Math.min(movingAverage, i + 1),\n        first = i + 1 - count;\n\n    var sum = 0;\n    for (var index = first; index <= i; ++index) {\n        var x = data[index][yValue];\n        sum += x;\n    }\n\n    return sum / count;\n};\n\nexport function calculateMovingStandardDeviation(data, i, avg) {\n\n    if (movingAverage === 0) {\n        return 0;\n    }\n\n    var count = Math.min(movingAverage, i + 1),\n        first = i + 1 - count;\n\n    var sum = 0;\n    for (var index = first; index <= i; ++index) {\n        var x = data[index][yValue];\n        var dx = x - avg;\n        sum += (dx * dx);\n    }\n\n    var variance = sum / count;\n    return Math.sqrt(variance);\n};\n\n/**\n * \n * @param {array of all graph edges} edgeArray \n * @param {one row of the leaf array} leaf \n * @param {array that holds the constructed path} pathKeeper \n * @param {string for source header} source (V1)\n * @param {string for target header} target (V2)\n */\nexport function getPath(edgeArray, leaf, pathKeeper, source, target){\n    let path = edgeArray.filter(ed=> {\n        return ed[target] === leaf[source];\n    });\n    if(path.length > 0){\n        pathKeeper.push(path[0]);\n        return getPath(edgeArray, path[0], pathKeeper, source, target);\n    }else{\n        pathKeeper.push({'root': true, 'node': leaf[source], 'edgeLength': 0.0});\n        return pathKeeper.reverse();\n    }\n}\n/**\n * \n * @param {*} pathArray \n * @param {*} nodes \n * @param {*} arrayOfArray \n * @param {*} nameArray \n * @param {*} depth \n */\nexport function pullPath(pathArray, nodes, arrayOfArray, nameArray, depth){\n    nodes.forEach((node, i)=> {\n        node.depth = depth;\n        node.id = depth + '.' + i;\n        if(notEmpty(node.children)){\n            pathArray.push(node);\n            pullPath([...pathArray], node.children, arrayOfArray, nameArray, depth+1);\n        }else{\n            nameArray.push(node.node_data['node name']);\n            node.flag = true;\n            arrayOfArray.push([...pathArray, node]);\n        }\n    });\n    return arrayOfArray;\n}\n\nfunction notEmpty(childArray){\n    if(childArray == undefined){\n        return false;\n    }else if(childArray.length == 0){\n        return false;\n    }else{\n        return true;\n    }\n}\n","import '../styles/index.scss';\nimport {formatAttributeData} from './dataFormat';\nimport * as d3 from \"d3\";\nimport {filterMaster} from './filterComponent';\nimport {dataMaster} from './index';\n\nexport function drawBranchPointDistribution(data, svg){\n\n    let branchBar = svg.append('g').classed('branch-bar', true).attr('transform', 'translate(10, 10)');\n    branchBar.append('rect').classed('point-dis-rect', true).attr('height', 25).attr('x', -10).attr('y', -10).attr('fill', '#fff');\n\n    branchBar.append('line').attr('y1', 2).attr('y2', 2).attr('x1', '100').attr('x2', 890).attr('stroke', 'gray').attr('stroke-width', .25)\n    branchBar.append('text').text('Root').attr('transform', 'translate(70, 7)');\n    let leafLabel = branchBar.append('g').classed('leaf-label', true).attr('transform', 'translate(950, 7)');\n    leafLabel.append('text').text('Leaves');\n\n    let nodeLengthArray = [];\n    let nodeDuplicateCheck = []\n\n    data.map(path=> {\n        path.filter(n=> n.leaf != true).map(node=> {\n            if(nodeDuplicateCheck.indexOf(node.node) == -1){\n                nodeDuplicateCheck.push(node.node);\n                nodeLengthArray.push({'node': node.node, 'eMove': node.edgeMove });\n            }\n        })\n    });\n\n    let bPointScale = d3.scaleLinear().domain([0, 1]).range([0, 795]);\n    let pointGroups = branchBar.selectAll('g.branch-points').data(nodeLengthArray).join('g').attr('class', (d, i)=> d.node).classed('branch-points', true);\n    pointGroups.attr('transform', (d, i) => 'translate('+(105 + bPointScale(d.eMove))+', 0)');\n    pointGroups.append('circle').attr('r', 5).attr('fill', \"rgba(123, 141, 153, 0.5)\");\n\n    return branchBar;\n}\n\nexport function groupDistributions(pathData, mainDiv, scales, moveMetric){\n\n   \n\n    let clades = Array.from(new Set(pathData.map(path=> path.filter(f=> f.leaf === true)[0].clade === \"\" ? \"Anolis\" : \"Norops\")));\n \n    let pathGroups = clades.map(clade => {\n        let group = pathData.filter(path => {\n         path[path.length - 1].clade === \"Norops\" ? path[path.length - 1].clade = \"Norops\" : path[path.length - 1].clade = \"Anolis\" ; \n         return path[path.length - 1].clade === clade});\n        return {'label': clade, 'paths': group }\n    });\n \n    let groupDivs = mainDiv.selectAll('.group-div').data(pathGroups).join('div').classed('group-div', true);\n\n    groupDivs.each((d, i, n)=> {\n        let group = d3.select(n[i]);\n        group.style('text-align', 'center');\n        group.append('text').text(d.label);\n        group.append('text').text(\" Shown:\" + d.paths.length);\n        renderDistibutions(d.paths, d3.select(n[i]), scales, moveMetric);\n    });\n\n    \n}\n\nexport function renderDistibutions(pathData, mainDiv, scales, moveMetric){\n    \n    let observedWidth = 200;\n    let predictedWidth = 800;\n    let height = 90;\n    let margin = 20;\n\n    let attrHide = filterMaster.filter(f=> f.type === 'hide-attribute').map(m=> m.attribute);\n    let keys = Object.keys(pathData[0][0].attributes).filter(f=> attrHide.indexOf(f) === -1);\n    let newNormed = [...pathData];\n    let keysToHide = attrHide.length > 0 ? scales.filter(f=> attrHide.indexOf(f.field) === -1).map(m=> m.field) : null;\n\n    formatAttributeData(newNormed, scales, keysToHide);\n\n    let maxBranch = d3.max(newNormed.map(p=> p.length)) - 1;\n    let medBranchLength = d3.median(newNormed.map(p=> p.length));\n/*\n    let normBins = new Array(medBranchLength).fill().map((m, i)=> {\n        let step = 1 / medBranchLength;\n        let base = (i * step);\n        let top = ((i + 1)* step);\n        return {'base': base, 'top': top, 'binI': i }\n    });*/\n\n    let normBins = new Array(medBranchLength).fill().map((m, i)=> {\n  \n            let step = 1 / medBranchLength;\n            let base = (i * step);\n            let top = ((i + 1)* step);\n            return {'base': base, 'top': top, 'binI': i }\n        \n       \n    });\n\n    let internalNodes = newNormed.map(path => path.filter(node=> node.leaf != true));\n    //let internalNodes = newNormed.map(path => path.filter(node=> node.leaf != true && node.root != true));\n    let leafNodes = newNormed.flatMap(path => path.filter(node=> node.leaf === true));\n    let rootNodes = newNormed.flatMap(path => path.filter(node=> node.root === true));\n\n    normBins.map((n, i)=> {\n        let edges = internalNodes.flatMap(path => path.filter(node=> {\n          \n                return node.edgeMove > n.base && node.edgeMove <= n.top;\n            \n        } ));\n        n.data = edges;\n        return n;\n    });\n\n    console.log('newnormed', newNormed, normBins, rootNodes)\n\n    let sortedBins = keys.map(key=> {\n        let scale = scales.filter(f=> f.field === key)[0];\n        let mapNorm = normBins.map(bin => {\n\n            if(bin.data.length > 0){\n                bin.fData = bin.data.map(d=> {\n                    return d.attributes[key];\n                })\n            }else{\n                bin.fData = [];\n            }\n            return {'data': bin.fData, 'range': [bin.base, bin.top], 'index': bin.binI, 'key': key };\n        });\n        console.log(rootNodes.map(m=> m.attributes[key])[0])\n        let leafAttr = leafNodes.map(m=> m.attributes[key]);\n        let leafData = {'data': leafAttr}\n   \n        if(scale.type === 'continuous'){\n         \n           // let max = d3.max(mapNorm.flatMap(m=> m.data).map(v=> v.realVal));\n           // let min = d3.min(mapNorm.flatMap(m=> m.data).map(v=> v.realVal));\n           \n            let x = d3.scaleLinear().domain([scale.min, scale.max]).range([0, height]);\n    \n            let histogram = d3.histogram()\n            .value(function(d) { return d.realVal; })  \n            .domain(x.domain())  \n            .thresholds(x.ticks(20)); \n  \n            mapNorm.forEach(n=> {\n                n.type = scale.type;\n                n.bins = histogram(n.data);\n                n.domain = [scale.max, scale.min];\n                return n;\n            });\n\n            //Histogram for observed////\n            let maxO = d3.max(leafAttr.flatMap(v=> v.realVal));\n            let minO = d3.min(leafAttr.flatMap(v=> v.realVal));\n            let xO = d3.scaleLinear().domain([minO, maxO]).range([0, height])\n\n            let histogramO = d3.histogram()\n            .value(function(d) { return d.realVal; })  \n            .domain(xO.domain())  \n            .thresholds(xO.ticks(20)); \n\n            leafData.bins = histogramO(leafAttr);\n\n            let newK = {'key': key, 'branches': [...mapNorm], 'type': scale.type, 'leafData': leafData, 'rootData': rootNodes.map(m=> m.attributes[key])[0]}\n            return newK;\n\n        }else{\n\n            let states = leafAttr[0].states;\n            mapNorm.bins = null\n            leafData.bins = states.map(s=> leafAttr.filter(f=> f.winState === s.state));\n            let x = d3.scaleLinear().domain([0, 1]).range([0, height]);\n            \n            mapNorm.map(n=> {\n                n.type = scale.type;\n                let colors = scale.stateColors;\n                n.bins = states.map(state=> {\n                    let color = colors.filter(f=> f.state === state.state);\n                  \n                    let chosen = n.data.flatMap(m=> m.states.filter(f=> f.state === state.state)).map(v=> v.realVal);\n                    let average = d3.mean(chosen);\n                    let stDev = d3.deviation(chosen);\n                    return {'state': state.state, 'average': average, 'stDev': stDev, 'stUp': average + stDev, 'stDown': average - stDev, 'color': color[0].color, 'range': n.range }\n                });\n                \n                return n;\n            });\n            let test = states.map(stat=> {\n                let key = stat.state;\n                return mapNorm.flatMap(m=> {\n                    return m.bins.filter(f=> f.state === key);\n                });\n            });\n            let newK = {'key': key, 'branches': [...mapNorm], 'type': scale.type, 'leafData': leafData, 'states': test, 'rootData': rootNodes.map(m=> m.attributes[key])[0]}\n            return newK;\n        }\n    });\n\n    ///////RENDERING//////////\n    \n    let branchScale = d3.scaleLinear().domain([0, medBranchLength]).range([0, 760]);\n\n    //let dataCount = mainDiv.append('div').classed('species-count', true);\n    //dataCount.append('text').text(\"Shown: \"+ pathData.length + \" /\"+ dataMaster[0].length);\n\n    let svg = mainDiv.append('svg');\n    svg.attr('id', 'main-summary-view');\n    svg.attr('height', (keys.length * (height + 25)));\n\n    let branchBar = drawBranchPointDistribution(newNormed, svg);\n    let pointGroups = branchBar.selectAll('g.branch-points');\n  \n    let wrap = svg.append('g').classed('summary-wrapper', true);\n    wrap.attr('transform', 'translate(10, 50)');\n\n    let binnedWrap = wrap.selectAll('.attr-wrap').data(sortedBins).join('g').attr('class', d=> d.key + ' attr-wrap');\n    binnedWrap.attr('transform', (d, i)=>  'translate(0,'+(i * (height + 5))+')');\n    \n    let label = binnedWrap.append('text').text(d=> d.key).attr('y', 40).attr('x', 80).style('text-anchor', 'end');\n\n    let predictedWrap = binnedWrap.append('g').classed('predicted', true);\n    predictedWrap.attr('transform', 'translate(25, 0)')\n\n    let root = predictedWrap.selectAll('g.root').data(d=> {\n        return [d.rootData]}).join('g').classed('root', true);\n    \n        root.attr('transform', `translate(60,0)`);\n\n    let contRoot = root.filter(f=> f.type === \"continuous\");\n    \n    contRoot.append('rect').attr('height', 90).attr('width', 12).attr('fill', '#fff').style('stroke-width', '0.5px').style('stroke', 'black')//.attr('x', 70);\n\n    let rootRange = contRoot.append('rect')\n        .attr('width', 12)\n        .attr('height', d=> {\n            let newy = d.yScale;\n            newy.range([80, 0]);\n            return newy(d.lowerCI95) - newy(d.upperCI95)\n        }).attr('transform', (d, i) => {\n            let newy = d.yScale;\n            newy.range([80, 0]);\n            return 'translate(0,'+newy(d.upperCI95)+')'\n        }).style('opacity', 0.5).attr('fill', \"rgba(133, 193, 233)\");\n\n        let rootAv = contRoot.append('rect').attr('width', 12).attr('height', 3);\n    \n        rootAv.attr('transform', (d, i) => {\n                let newy = d.yScale;\n                newy.range([height, 0]);\n                let mean = d.realVal;\n                return 'translate(0,'+newy(mean)+')';\n      \n        }).attr('fill', '#004573');\n\n        let disRoot = root.filter(f=> f.type === \"discrete\");\n\n        let disRects = disRoot.selectAll('rect.dist').data(d=> {\n            let sorted = d.states.sort((a, b)=> a.realVal - b.realVal);\n            return sorted;\n        }).join('rect').classed('dist', true).attr('width', 12).attr('height', (d)=>{\n            let scale = d3.scaleLinear().domain([0, 1.0]).range([0, 80]).clamp(true);\n            d.height = scale(d.realVal);\n            return scale(d.realVal);\n        })\n        .attr('transform', (d, i, n) => {\n            let move = d3.selectAll(n).filter((f, j)=> j < i).data().map(m=> m.height);\n            return `translate(0, ${2 + d3.sum(move) * 1.2})`})\n        .attr('fill', d=> d.color).style('opacity', 0.9)\n\n        disRects.on('mouseover', (d, i, n)=> {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(200)\n              .style(\"opacity\", .9);\n            let f = d3.format(\".3f\");\n            tool.html(d.state + \": \" + f(d.realVal))\n              .style(\"left\", (d3.event.pageX + 10) + \"px\")\n              .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            })\n          .on(\"mouseout\", function(d) {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(500)\n              .style(\"opacity\", 0);\n            });\n        \n\n    let pathGroup = predictedWrap.append('g').classed('path-wrapper', true);\n\n    //let branchGroup = predictedWrap.selectAll('g.branch-bin').data(d=> d.branches).join('g').classed('branch-bin', true);\n\n    let branchGroup = predictedWrap.selectAll('g.branch-bin').data(d=> {\n        return d.branches}).join('g').classed('branch-bin', true);\n    branchGroup.attr('transform', (d, i)=> 'translate('+(100 + branchScale(i))+', 0)');\n\n    let continDist = branchGroup.filter(f=> f.type === 'continuous');\n\n    continDist.on('mouseover', (d, i, node)=> {\n        let list = d.data.map(m=> m.nodeLabels);\n        let selected = pointGroups.filter(p=> list.indexOf(p.node) > -1).classed('selected', true);\n        let treeNode  = d3.select('#sidebar').selectAll('.node');\n        let selectedBranch = treeNode.filter(f=> list.indexOf(f.data.node) > 0).classed('selected-branch', true);\n        let y = d3.scaleLinear().domain(d.domain).range([0, height])\n        let axis = d3.select(node[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(5));\n    }).on('mouseout', (d, i, node)=> {\n        d3.selectAll(\".branch-points.selected\").classed('selected', false);\n        d3.selectAll('.selected-branch').classed('selected-branch', false);\n        d3.select(node[i]).select('.y-axis').remove();\n    });\n\n    var lineGen = d3.area()\n    .curve(d3.curveCardinal)\n    .x((d, i, n)=> {\n        let y = d3.scaleLinear().domain([0, n.length - 1]).range([0, height]).clamp(true);\n        return y(i); \n    })\n    .y0(d=> {\n        return 0;\n    })\n    .y1(d=> {\n        let dat = Object.keys(d).length - 1\n        let x = d3.scaleLinear().domain([0, 50]).range([0, 80]).clamp(true);\n        return x(dat); \n    });\n\n    continDist.each((d, i, nodes)=> {\n        let distrib = d3.select(nodes[i]).selectAll('g').data([d.bins]).join('g').classed('distribution', true);\n        distrib.attr('transform', 'translate(11, '+height+') rotate(-90)');\n        let path = distrib.append('path').attr('d', lineGen);\n        path.attr(\"fill\", \"rgba(133, 193, 233, .4)\")\n        .style('stroke', \"rgba(133, 193, 233, .9)\");\n    });\n\n    let contRect = continDist.append('rect').attr('height', height).attr('width', 10).style('fill', 'none').style('stroke', 'gray');\n\n    let rangeRect = continDist.selectAll('rect.range').data(d=> {\n        let newData = d.data.map(m=> {\n            m.range = d.range;\n            return m;\n        })\n        return newData}).join('rect').classed('range', true);\n\n    rangeRect.attr('width', 10);\n    rangeRect.attr('height', (d, i)=> {\n        if(d.yScale != undefined){\n            let newy = d.yScale;\n            newy.range([80, 0]);\n            return newy(d.lowerCI95) - newy(d.upperCI95)\n        }else{\n            return 0;\n        }\n    }).attr('transform', (d, i) => {\n        let newy = d.yScale;\n        newy.range([80, 0]);\n        return 'translate(0,'+newy(d.upperCI95)+')'\n    });\n\n    rangeRect.attr('fill', \"rgba(133, 193, 233, .05)\");\n\n    let avRect = continDist.append('rect').attr('width', 10).attr('height', (d, i)=> {\n        if(d.data[0] != undefined){\n            return 3;\n        }else{\n            return 0;\n        }\n    });\n\n    avRect.attr('transform', (d, i) => {\n        if(d.data[0] != undefined){\n            let newy = d.data[0].yScale;\n            newy.range([height, 0]);\n            let mean = d3.mean(d.data.map(m=> m.realVal));\n            return 'translate(0,'+newy(mean)+')';\n        }else{\n            return 'translate(0,0)';\n        }\n    }).attr('fill', '#004573');\n\n    let discreteDist = branchGroup.filter(f=> f.type === 'discrete');\n    let discreteLine = discreteDist.append('line').attr('x0', 2).attr('x1', 2).attr('y0', 0).attr('y1', height).attr('stroke', 'gray').attr('stroke-width', 0.5);\n    let hoverRect = discreteDist.append('rect').attr('height', height).attr('width', 10).attr('opacity', 0);\n    discreteDist.on('mouseover', (d, i, n)=> {\n        let y = d3.scaleLinear().domain([1, 0]).range([0, height]);\n        d3.select(n[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(3));\n        let selected = pointGroups.filter(f=> f.eMove >= d.range[0] && f.eMove < d.range[1]).classed('selected', true);\n        let treeNode  = d3.select('#sidebar').selectAll('.node');\n      \n        treeNode.filter(node=> node.data.combEdge >= d.range[0] && node.data.combEdge < d.range[1]).classed('selected-branch', true);\n\n    }).on('mouseout', (d, i, n)=> {\n        d3.select(n[i]).select('.y-axis').remove();\n        d3.selectAll(\".branch-points.selected\").classed('selected', false);\n        d3.selectAll('.selected-branch').classed('selected-branch', false);\n    })\n\n    let discreteBinWrap = predictedWrap.filter(f=> f.type === 'discrete');\n    let stateGroups = discreteBinWrap.selectAll('.path-wrapper').selectAll('g.state').data(d=> d.states).join('g').classed('state', true);\n    discreteBinWrap.append('line').attr('x1', 100).attr('x2', 900).attr('y1', 48).attr('y2', 48).attr('stroke-width', 0.3).attr('stroke', 'black')\n    stateGroups.append('path').attr('d', (p, i)=> {\n        var lineGenD = d3.area()\n        .curve(d3.curveCardinal)\n        .x((d, i)=> {\n            let y = d3.scaleLinear().domain([0, 9]).range([0, predictedWidth + 100]);\n            return y(i); \n        })\n        .y0(d=> {\n            let x = d3.scaleLinear().domain([0, 1]).range([80, 0]).clamp(true);\n            return x(d.stDown);\n        })\n        .y1(d=> {\n            let x = d3.scaleLinear().domain([0, 1]).range([80, 0]).clamp(true);\n            return x(d.stUp); \n        });\n        return lineGenD(p);\n\n    }).attr('transform', 'translate(100, 10)').attr('fill', (d, i)=> {\n        return d[0] ? d[0].color : '#fff';\n    }).attr('opacity', 0.3);\n\n    stateGroups.append('path').attr('d', (p, i)=> {\n        var lineGen = d3.line()\n        .curve(d3.curveCardinal)\n        .x((d, i)=> {\n            let y = d3.scaleLinear().domain([0, 9]).range([0, predictedWidth + 100]);\n            return y(i); \n        })\n        .y(d=> {\n            let x = d3.scaleLinear().domain([0, 1]).range([80, 0]).clamp(true);\n            return x(d.average); \n        });\n        return lineGen(p);\n\n    }).attr('transform', 'translate(100, 10)').attr('fill', 'none').attr('stroke', (d, i)=> {\n        return d[0] ? d[0].color : '#fff';\n    });\n\n    ////OBSERVED CONTIUOUS/////\n\n    let observedWrap = binnedWrap.append('g').classed('observed', true);\n    observedWrap.attr('transform', 'translate('+ (predictedWidth + 150) +', 0)')\n\n    let contOb = observedWrap.filter(f=> f.type === 'continuous');\n\n    let contBars = contOb.selectAll('g.ob-bars').data(d=> {\n        return d.leafData.bins}).join('g').classed('ob-bars', true);\n\n    let cRects = contBars.append('rect').attr('width', (d, i, n)=> {\n        let width = observedWidth / n.length;\n        return width;\n    }).attr('height', (d, i)=> {\n        let y = d3.scaleLinear().domain([0, Object.keys(d).length]).range([(height - margin), 0])\n        return y(Object.keys(d).length - 2)\n    }).attr('fill', 'rgba(133, 193, 233, .5)');\n\n    contBars.attr('transform', (d, i, n)=> {\n        let movex = observedWidth / n.length;\n        let y = d3.scaleLinear().domain([0, Object.keys(d).length]).range([(height - margin), 0])\n        let movey = height - y(Object.keys(d).length - 2);\n        return 'translate('+(movex * i)+', '+movey+')'});\n\n    contOb.each((d, i, nodes)=> {\n        let xvalues = d.leafData.data.map(m=> m.realVal);\n        let x = d3.scaleLinear().domain([d3.min(xvalues), d3.max(xvalues)]).range([0, observedWidth])\n        let y = d3.scaleLinear().domain([0, d3.max(d.leafData.bins.map(b=> Object.keys(b).length)) - 2]).range([(height - margin), 0]);\n        d3.select(nodes[i]).append('g').classed('x-axis', true).call(d3.axisBottom(x)).attr('transform', 'translate(0, '+height+')');\n        d3.select(nodes[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(4)).attr('transform', 'translate(0, '+margin+')');\n    });\n    \n////Observed Discrete////\n    let discOb =  observedWrap.filter(f=> f.type === 'discrete');\n    let discBars = discOb.selectAll('g.ob-bars').data(d=> {\n        return d.leafData.bins}).join('g').classed('ob-bars', true);\n    let dRects = discBars.append('rect').attr('width', (d, i, n)=> {\n        let width = observedWidth / n.length;\n        return width;\n    }).attr('height', (d, i, n)=> {\n        let y = d3.scaleLinear().domain([0, 100]).range([(height -margin), 0])\n        return y(d.length)\n    }).attr('fill', (d, i) => {\n        return d[0] != undefined ? d[0].color : '#fff';\n    }).attr('opacity', 0.3);\n\n    discBars.attr('transform', (d, i, n)=> {\n        let movex = observedWidth / n.length;\n        let y = d3.scaleLinear().domain([0, 100]).range([(height - margin), 0])\n        let movey = (height) - y(d.length);\n        return 'translate('+(movex * i)+', '+movey+')'});\n\n    dRects.on('mouseover', (d, i, n)=> {\n        let state = d3.select('g.'+d[0].label).selectAll('g.state');\n        state.filter(f=> f[0].state === d[0].winState).attr('opacity', 0.8);\n        state.filter(f=> f[0].state != d[0].winState).attr('opacity', 0.1);\n        d3.select(n[i]).attr('opacity', 0.9);\n    }).on('mouseout', (d, i, n)=> {\n        d3.select(n[i]).attr('opacity', 0.3);\n        let state = d3.select('g.'+d[0].label).selectAll('g.state').attr('opacity', 0.6);\n    })\n\n    discOb.each((d, i, nodes)=> {\n            let labels = d.leafData.bins.map(b=> {\n                return b[0] != undefined ? b[0].winState : '';\n                })\n            let xPoint = d3.scalePoint().domain(labels).range([0, observedWidth]).padding(.6)\n            let y = d3.scaleLinear().domain([0, 100]).range([(height - margin), 0]);\n            d3.select(nodes[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(5)).attr('transform', 'translate(0, '+margin+')');\n            d3.select(nodes[i]).append('g').classed('x-axis', true).call(d3.axisBottom(xPoint)).attr('transform', 'translate(0, '+height+')');\n    });\n\n\n}\n","import * as d3 from \"d3\";\nimport { renderDistibutions, groupDistributions } from './distributionView';\nimport {drawPathsAndAttributes} from './renderPathView';\nimport { getLatestData } from \"./filterComponent\";\n\nexport let groupedView = false;\n\nexport function updateMainView(scales, moveMetric){\n\n    let main = d3.select('#main');\n    let data = getLatestData();\n\n    main.selectAll('*').remove();\n\n    if(d3.select('#view-toggle').text() === 'View Paths'){\n        renderDistibutions(data, main, scales, moveMetric);\n        document.getElementById(\"scrunch\").disabled = true;\n    }else{\n        drawPathsAndAttributes(data, main, scales, moveMetric);\n        document.getElementById(\"scrunch\").disabled = false;\n    }\n\n}\n\nexport function initialViewLoad(scales, moveMetric){\n\n    let main = d3.select('#main');\n    let data = getLatestData();\n\n    main.selectAll('*').remove();\n\n    if(data.length > 50){\n        //renderDistibutions(data, main, scales, moveMetric);\n        groupDistributions(data, main, scales, moveMetric);\n        d3.select('#view-toggle').text('View Paths');\n        document.getElementById(\"scrunch\").disabled = true;\n    }else{\n        drawPathsAndAttributes(data, main, scales, moveMetric);\n        d3.select('#view-toggle').text('View Summary');\n        document.getElementById(\"scrunch\").disabled = false;\n    }\n\n}","import '../styles/index.scss';\n\nimport * as d3 from \"d3\";\nimport {dataMaster} from './index';\nimport { updateMainView } from './viewControl';\n\nexport let filterMaster = [];\n\nexport function removeFilter(filterId, scales){\n    let dataFilters = filterMaster.filter(f=> f.filterType === 'data-filter');\n    let filterIndex = dataFilters.map(f=> f.filterId).indexOf(filterId);\n\n    if(filterIndex != dataFilters.length - 1){\n   \n        let baseData = filterIndex === 0? dataMaster[0] : dataFilters[filterIndex - 1].data;\n    \n        let testData = [...baseData];\n\n        let filterToolbar = d3.select(\"#toolbar\");\n\n        let badges = filterToolbar.selectAll('.filter-tag').remove();\n  \n        for(let i = filterIndex + 1; i < dataFilters.length; i ++){\n       \n            let fun = dataFilters[i].filterFunction;\n            if(dataFilters[i].attributeType === 'continuous'){\n                let newTestData = fun(testData, dataFilters[i].selectedOption, dataFilters[i].predictedFilter, dataFilters[i].observedFilter);\n                dataFilters[i].data = [...newTestData];\n                dataFilters[i].filterId = 'c-'+ i;\n                //// Re adding in buttons ////\n                addFilterTag(dataFilters[i], scales);\n                testData = newTestData;\n            }else{//discrete\n                let newTestData = fun(testData, dataFilters[i].selectedOption, dataFilters[i].fromState, dataFilters[i].toState);\n                dataFilters[i].data = [...newTestData];\n                dataFilters[i].filterId = 'd-'+ i;\n                //// Re adding in buttons ////\n                addFilterTag(dataFilters[i], scales);\n                testData = newTestData;\n            }\n        }\n    }\n    let newFilterMaster = filterMaster.filter(f=> f.filterId != filterId);\n\n    filterMaster = newFilterMaster;\n}\n\nexport function addFilter(filterType, attType, filterId, filFunction, oldData, newData, extra){\n    let filterOb = {'filterType': filterType, 'attributeType': attType, 'filterId': filterId, 'filterFunction':filFunction, 'before-data': oldData, 'data': newData}\n    if(extra != null){\n        extra.forEach(ex=> {\n            filterOb[ex[0]] = ex[1];\n        });\n    }\n    filterMaster.push(filterOb);\n    return filterOb;\n}\n\nexport function getLatestData(){\n    let data = filterMaster.length > 0 ? filterMaster[filterMaster.length - 1].data : dataMaster[0];\n    return data;\n}\n\n///NEED TO BREAK THESE OUT INTO SEPARATE FILTERS\nexport function toggleFilters(filterButton, main, moveMetric, scales){\n\n    let filterDiv = d3.select('#filter-tab');\n    let data = getLatestData();\n\n    if(filterDiv.classed('hidden')){\n        filterButton.text('Hide Filters');\n        filterDiv.classed('hidden', false);\n        main.style('padding-top', '200px');\n\n        renderAttToggles(filterDiv, data, main, scales, 'edgeLength');\n        stateFilter(filterDiv, filterButton, data, main, moveMetric, scales);\n        queryFilter(filterDiv, filterButton, data, main, moveMetric, scales);\n\n    }else{\n        filterButton.text('Show Filters');\n        filterDiv.selectAll('*').remove();\n        filterDiv.classed('hidden', true);\n        main.style('padding-top', '0px');\n    }\n}\n\nfunction addFilterTag(data, scales){\n\n    let filterToolbar = d3.select('#toolbar');\n\n    if(data.attributeType === 'continuous'){\n\n        let formater = d3.format(\".2s\");\n        let button = filterToolbar.append('button').classed('btn btn-info filter-tag', true);\n        d3.select(button).datum(data);\n        let span = button.append('span').classed('badge badge-light', true);\n        span.text(data.data.length);\n        let label = button.append('h6').text(data.selectedOption + \"  Predicted: \"+ formater(data.predictedFilter[0]) + \"-\" + formater(data.predictedFilter[1]) + \" Observed: \" + formater(data.observedFilter[0]) + \"-\" + formater(data.observedFilter[1]));\n        let xSpan = label.append('i').classed('close fas fa-times', true);\n        xSpan.on('click', ()=> {\n            let filterLine = filterMaster.filter(f=> f.filterType === 'data-filter').filter(f=> data.attribute != f.attribute);\n            ////YOU NEED TO CHANGE THIS TO REMOVE FILTER FUNCTION\n            removeFilter(data.filterId, scales);\n            updateMainView(scales, 'edgeLength')\n            d3.selectAll('.link-not-there').classed('link-not-there', false);\n            d3.selectAll('.node-not-there').classed('node-not-there', false);\n            button.remove();\n        });\n\n    }else if(data.attributeType === 'discrete'){\n     \n        let button = filterToolbar.append('button').classed('btn btn-info filter-tag', true);\n        let span = button.append('span').classed('badge badge-light', true);\n        span.text(data.data.length);\n        button.append('h6').text(data.state[0]);\n        button.append('i').classed('fas fa-arrow-right', true);\n        button.append('h6').text(data.state[1] + '  ');\n       \n        let xSpan = button.append('i').classed('close fas fa-times', true);\n        xSpan.on('click', ()=> {\n            removeFilter(data.filterId, scales);\n            updateMainView(scales, 'edgeLength')\n            d3.selectAll('.link-not-there').classed('link-not-there', false);\n            d3.selectAll('.node-not-there').classed('node-not-there', false);\n            button.remove();\n        });\n\n    }else if(data.attributeType === 'branch'){\n        let button = filterToolbar.append('button').classed('btn btn-info filter-tag', true);\n        let span = button.append('span').classed('badge badge-light', true);\n        span.text(data.data.length);\n        button.append('h6').text(' At Branch: ' + data.nodeId);\n       \n        let xSpan = button.append('i').classed('close fas fa-times', true);\n        xSpan.on('click', ()=> {\n            removeFilter(data.filterId, scales);\n            updateMainView(scales, 'edgeLength')\n            d3.selectAll('.link-not-there').classed('link-not-there', false);\n            d3.selectAll('.node-not-there').classed('node-not-there', false);\n            button.remove();\n        });\n\n    }\n    \n}\nfunction stateFilter(filterDiv, filterButton, normedPaths, main, moveMetric, scales){\n    let keys = ['Select a Trait'].concat(Object.keys(normedPaths[0][0].attributes));\n        let selectWrapper = filterDiv.append('div').classed('filter-wrap', true);\n        selectWrapper.style('width', '200px');\n        selectWrapper.append('h6').text('State Transition:');\n        let attButton = stateChange(selectWrapper, keys, 'attr-select', '');\n\n        let attProps = selectWrapper.append('div').classed('attribute-properties', true);\n\n        attButton.on(\"change\", function(d) {\n            var selectedOption = d3.select(this).property(\"value\");\n            let options = scales.filter(f=> f.field === selectedOption)[0];\n            attProps.selectAll('*').remove();\n\n            if(options.type === \"discrete\"){\n                let optionArray = ['Any'];\n                let optKeys = options.scales.map(s=> s.scaleName);\n                optionArray = optionArray.concat(optKeys);\n                let button1 = stateChange(attProps, optionArray, 'predicted-state', 'From');\n                let button2 = stateChange(attProps, optionArray, 'observed-state', 'To');\n                let submit = attProps.append('button').classed('btn btn-outline-success', true);\n                submit.text('Filter');\n\n                submit.on('click', ()=> {\n                    let fromState = button1.node().classList[0];\n                    let toState = button2.node().classList[0];\n\n                      ////GOING TO ADD FILTERING HERE//// NEED TO BREAK INTO ITS OWN THING/////\n                      \n                    let lastFilter = filterMaster.filter(f=> f['filterType'] === 'data-filter');\n              \n                    //let data = lastFilter.length > 0 ? lastFilter[lastFilter.length - 1].data : dataMaster[0];\n                    let data = getLatestData();\n              \n                    let test = discreteFilter(data, selectedOption, fromState, toState);\n\n                    let filId = 'd-'+filterMaster.filter(f=> f.attributeType === 'discrete').length;\n                    let filterOb = addFilter('data-filter', 'discrete', filId, discreteFilter, [...data], [...test], [['state', [fromState, toState]], ['selectedOption', selectedOption]]);\n\n                    updateMainView(scales, moveMetric);\n\n                    ////Class Tree Links////\n                    let treeLinks  = d3.select('#sidebar').selectAll('.link');\n                    let treeNode  = d3.select('#sidebar').selectAll('.node');\n\n                    let nodeList = test.flatMap(path=> path.map(node => node.node));\n\n                    d3.selectAll('.link-not-there').classed('link-not-there', false);\n                    d3.selectAll('.node-not-there').classed('node-not-there', false);\n\n                    let missingLinks = treeLinks.filter(f=> nodeList.indexOf(f.data.node) === -1);\n                    missingLinks.classed('link-not-there', true);\n\n                    let missingNodes = treeNode.filter(f=> nodeList.indexOf(f.data.node) === -1);\n                    missingNodes.classed('node-not-there', true);\n\n                    ///END NODE DIMMING///////\n\n                    /////ADD THE FILTER TO THE TOOLBAR////\n                    addFilterTag(filterOb, scales);\n\n                    ////HIDE THE FILTER BAR/////\n                    filterButton.text('Show Filters');\n                    filterDiv.selectAll('*').remove();\n                    filterDiv.classed('hidden', true);\n                    main.style('padding-top', '0px');\n                });\n            }else{\n                \n                let yScale = d3.scaleLinear().domain([options.min, options.max]).range([60, 0]);\n               \n                let continRanges = attProps.append('svg');\n                continRanges.attr('width', 200).attr('height', 100);\n                let data = [{'label':'Ancestors', 'type': 'predicted'}, {'label':'Leaves', 'type': 'observed'}];\n                let ranges = continRanges.selectAll('.range').data(data).join('g').classed('range', true);\n\n                ranges.attr('transform', (d, i)=> 'translate('+((i*125)+',20)'));\n\n                let brushBars = ranges.append('g');\n                brushBars.attr('transform', 'translate(10, 10)');\n\n                let labels = ranges.append('text').text((d)=> d.label+ ': ');\n                labels.attr('x', 0).attr('y', 0);\n                let wrapperRect = brushBars.append('rect').attr('width', 20).attr('height', 50);\n                wrapperRect.attr('x', 10);\n\n                brushBars.append(\"g\")\n                .attr(\"class\", \"axis axis--y\")\n                .attr(\"transform\", \"translate(10,0)\")\n                .call(d3.axisLeft(yScale).ticks(3));\n                \n                let brushMoved = function(){\n                    var s = d3.event.selection;\n                    if (s == null) {\n                      handle.attr(\"display\", \"none\");\n                    \n                    } else {\n                      var sx = s.map(yScale.invert);\n                    }\n                };\n                let xBrush = d3.brushY().extent([[10,0], [30, 60]]).on(\"end\", brushMoved);\n                let brushGroup = brushBars.append('g').call(xBrush);\n                brushGroup.call(xBrush.move, [0, 60]);\n\n                let submit = attProps.append('button').classed('btn btn-outline-success', true);\n                submit.text('Filter');\n\n                submit.on('click', ()=> {\n\n                    let selections = brushGroup._groups[0].map(m=> m.__brush.selection.map(s=> s[1]));\n                    let predictedFilter = selections[0].map(yScale.invert).sort();\n                    let observedFilter = selections[1].map(yScale.invert).sort();\n                    let lastFilter = filterMaster.filter(f=> f['filterType'] === 'data-filter');\n\n                    let data = lastFilter.length > 0 ? lastFilter[lastFilter.length - 1].data : dataMaster[0];\n\n                    let test = continuousFilter(data, selectedOption, predictedFilter, observedFilter);\n\n                    let filId = 'c-'+filterMaster.filter(f=> f.attributeType === 'continuous').length;\n                    let filterOb = addFilter('data-filter', 'continuous', filId, continuousFilter, [...data], [...test], [['selectedOption', selectedOption], ['predictedFilter', predictedFilter], ['observedFilter', observedFilter]]);\n\n                    updateMainView(scales, moveMetric);\n\n                    /////ADD THE FILTER TO THE TOOLBAR/////\n                    addFilterTag(filterOb, scales);\n\n                    ///DIMMING THE FILTERED OUT NODES//////\n\n                    ////Class Tree Links////\n                    let treeLinks  = d3.select('#sidebar').selectAll('.link');\n                    let treeNode  = d3.select('#sidebar').selectAll('.node');\n\n                    let nodeList = test.flatMap(path=> path.map(node => node.node));\n\n                    d3.selectAll('.link-not-there').classed('link-not-there', false);\n                    d3.selectAll('.node-not-there').classed('node-not-there', false);\n\n                    let missingLinks = treeLinks.filter(f=> nodeList.indexOf(f.data.node) === -1);\n                    missingLinks.classed('link-not-there', true);\n\n                    let missingNodes = treeNode.filter(f=> nodeList.indexOf(f.data.node) === -1);\n                    missingNodes.classed('node-not-there', true);\n\n                    ///END NODE DIMMING///////\n\n                    ////HIDE THE FILTER BAR/////\n                    filterButton.text('Show Filters');\n                    filterDiv.selectAll('*').remove();\n                    filterDiv.classed('hidden', true);\n                    main.style('padding-top', '0px');\n                });\n            }\n         });\n}\nexport function nodeFilter(selectedNode, scales){\n   \n    let data = getLatestData();\n    let dataFilters = filterMaster.filter(f=> f.filterType === 'data-filter');\n \n    let test = data.filter(path => {\n        return path.map(node => node.node).indexOf(selectedNode) > -1;\n    });\n\n    let filId = 'b-'+filterMaster.filter(f=> f.attributeType === 'branch').length;\n    //let filterOb = addFilter('data-filter', 'discrete', filId, discreteFilter, [...data], [...test], [['state', [fromState, toState]], ['selectedOption', selectedOption]]);\n\n    let filterOb = addFilter('data-filter', 'branch', filId, nodeFilter, [...data], [...test], [['nodeId', selectedNode]])\n    addFilterTag(filterOb, scales);\n    updateMainView(scales, 'edgeLength');\n\n   ////Class Tree Links////\n   let treeLinks  = d3.select('#sidebar').selectAll('.link');\n   let treeNode  = d3.select('#sidebar').selectAll('.node');\n\n   let nodeList = test.flatMap(path=> path.map(node => node.node));\n\n   d3.selectAll('.link-not-there').classed('link-not-there', false);\n   d3.selectAll('.node-not-there').classed('node-not-there', false);\n\n   let missingLinks = treeLinks.filter(f=> nodeList.indexOf(f.data.node) === -1);\n   missingLinks.classed('link-not-there', true);\n\n   let missingNodes = treeNode.filter(f=> nodeList.indexOf(f.data.node) === -1);\n   missingNodes.classed('node-not-there', true);    \n  \n}\n\nexport function leafStateFilter(selectedState, scales){\n   \n    let data = getLatestData();\n    let dataFilters = filterMaster.filter(f=> f.filterType === 'data-filter');\n \n    let test = data.filter(path => {\n        return path[path.length - 1].attributes[selectedState.label].winState === selectedState.winState;\n    });\n\n    let filId = 'l-'+filterMaster.filter(f=> f.attributeType === 'leaf').length;\n    //let filterOb = addFilter('data-filter', 'discrete', filId, discreteFilter, [...data], [...test], [['state', [fromState, toState]], ['selectedOption', selectedOption]]);\n\n    let filterOb = addFilter('data-filter', 'leaf', filId, nodeFilter, [...data], [...test], [['leafState', [selectedState.label, selectedState.winState]]])\n    addFilterTag(filterOb, scales);\n    updateMainView(scales, 'edgeLength');\n\n   ////Class Tree Links////\n   let treeLinks  = d3.select('#sidebar').selectAll('.link');\n   let treeNode  = d3.select('#sidebar').selectAll('.node');\n\n   let nodeList = test.flatMap(path=> path.map(node => node.node));\n\n   d3.selectAll('.link-not-there').classed('link-not-there', false);\n   d3.selectAll('.node-not-there').classed('node-not-there', false);\n\n   let missingLinks = treeLinks.filter(f=> nodeList.indexOf(f.data.node) === -1);\n   missingLinks.classed('link-not-there', true);\n\n   let missingNodes = treeNode.filter(f=> nodeList.indexOf(f.data.node) === -1);\n   missingNodes.classed('node-not-there', true);    \n  \n}\n\n\nfunction continuousFilter(data, selectedOption, predicted, observed){\n\n    return data.filter(path=> {\n        let filterArray = path.map(node=> {\n            let numb = node.attributes[selectedOption].realVal;\n            if(node.leaf == true){\n                return numb > observed[0] && numb < observed[1];\n            }else{\n                return numb > predicted[0] && numb < predicted[1];\n            }\n        });\n        return filterArray.indexOf(false) === -1;\n    });\n}\nfunction discreteFilter(data, selectedOption, fromState, toState){\n    if(selectedOption != undefined){\n        return data.filter(path=> {\n            let filterPred = path.filter(f=> f.leaf != true).map(node=> {\n                let states = node.attributes[selectedOption].states;\n                if(fromState === 'Any'){\n                    return true;\n                }else{\n                    return states.filter(st=> st.state === fromState).length > 0 && states.filter(st=> st.state === fromState)[0].realVal > 0.75;\n                }\n            });\n            let filterObs = path.filter(f=> f.leaf === true).map(node=> {\n            let win = node.attributes[selectedOption].winState;\n            if(toState === 'Any'){\n                return true;\n            }else{\n                return win === toState;\n            }\n            });\n            return filterPred.indexOf(true) > -1 && filterObs.indexOf(true) > -1;\n        });\n    }\n}\nfunction queryFilter(filterDiv, filterButton, normedPaths, main, moveMetric, scales){\n\n    let searchDiv = filterDiv.append('div').classed('search-bar-div', true);\n        searchDiv.append('h6').text('Query Filter:');\n        let form = searchDiv.append('form').classed('form-inline', true);\n        let input = form.append('input').classed('form-control mr-sm-2', true);\n        input.attr('type', 'search').attr('placeholder', 'Search by Species').attr('aria-label', 'Search');\n        let searchButton = form.append('button').classed('btn btn-outline-success my-2 my-sm-0', true).attr('type', 'button').append('i').classed(\"fas fa-search\", true);\n        searchButton.on('click', ()=> {\n\n            let queryArray = input.node().value.split(' ').map(m=> m.toLowerCase());\n\n            let test = normedPaths.filter(path=> {\n                let species = path.filter(node=> node.leaf === true)[0].label;\n                return queryArray.indexOf(species) > -1;\n            });\n\n             ////DRAW THE PATHS\n         \n            updateMainView(scales, moveMetric);\n\n            let filterToolbar = d3.select(\"#toolbar\");\n            let button = filterToolbar.append('button').classed('btn btn-info', true);\n            let span = button.append('span').classed('badge badge-light', true);\n            span.text(test.length);\n            button.append('h6').text('Query Filter');\n            let xSpan = button.append('i').classed('close fas fa-times', true);\n            xSpan.on('click', ()=> {\n                updateMainView(scales, moveMetric);\n                button.remove();\n            });\n            d3.select('#main-path-view').style('height', ()=>{\n                return ((test.length * 60) + (Object.keys(test[0][0].attributes).length * 100) + 'px');\n            });\n\n            ////HIDE THE FILTER BAR/////\n            filterButton.text('Show Filters');\n            filterDiv.selectAll('*').remove();\n            filterDiv.classed('hidden', true);\n            main.style('padding-top', '0px');\n        });\n\n}\nfunction renderAttToggles(filterDiv, normedPaths, main, scales, moveMetric){\n\n    ////NEED TO GET RID OF TOGGLE SVG\n    let keys = Object.keys(normedPaths[0][0].attributes);\n    let presentFilters = filterMaster.filter(f=> f.type === 'hide-attribute');\n    let noShow = presentFilters.length > 0 ? presentFilters.map(m=> m.attribute) : [];\n\n    let wrapper = filterDiv.append('div').classed('filter-wrap', true);\n    wrapper.style('width', '150px');\n   \n    let svg = wrapper.append('svg').classed('attr-toggle-svg', true);\n\n   let title = svg.append('text').text('Attributes: ');\n    title.attr('x', 20).attr('y', 10);\n    \n    let labelWrap = svg.append('g').attr('transform', 'translate(20, 25)');\n    let labelGroups = labelWrap.selectAll('g').data(keys).join('g'); \n    \n    labelGroups.attr('transform', (d, i)=> 'translate(0,'+(i* 25)+')');\n\n    let toggle = labelGroups.append('circle').attr('cx', 0).attr('cy', 0);\n    toggle.classed('toggle', true);\n    let shownToggs = toggle.filter(t=> noShow.indexOf(t) === -1);\n   \n    shownToggs.classed('shown', true);\n    shownToggs.style('fill', (d, i)=>{\n        return scales.filter(f=> f.field === d)[0].catColor;\n    });\n\n    toggle.on('click', function(d, i){\n        let togg = d3.select(this);\n        toggleCircle(togg, scales);\n   \n        filterMaster.push({'type':'hide-attribute', 'attribute':d, 'before-data': [...normedPaths]});\n\n        let newKeys = d3.selectAll('.shown');\n        let hideKeys = scales.filter(sc=> newKeys.data().indexOf(sc.field) === -1);\n        let newFilMaster = filterMaster.filter(f=> f.type != 'hide-attribute');\n        hideKeys.forEach(key=> {\n            newFilMaster.push({'type':'hide-attribute', 'attribute':key.field, 'before-data': [...normedPaths], 'data': [...normedPaths]});\n        });\n        filterMaster = newFilMaster;\n        updateMainView(scales, moveMetric)\n    });\n    let labelText = labelGroups.append('text').text(d=> d).style('font-size', 10);\n    labelText.attr('transform', 'translate(10, 4)');  \n    \n}\nfunction stateChange(selectorDiv, keys, selectId, label){\n\n    let dropDownWrapper = selectorDiv.append('div').classed('selector', true);\n    let header = dropDownWrapper.append('h6').text(label);\n    \t// create the drop down menu of cities\n\tlet selectOp = dropDownWrapper\n    .append(\"select\")\n    .attr(\"id\", selectId).attr('class', 'Any');\n    \n    let options = selectOp.selectAll(\"option\")\n    .data(keys).join(\"option\");\n\n    options.text(d=> d).attr(\"value\", d=> d);\n\n    d3.select(\"#\"+selectId).on(\"change\", function(d) {\n       var selectedOption = d3.select(this).property(\"value\");\n       d3.select(this).attr('class', selectedOption);\n    });\n\n    return d3.select('#'+ selectId);\n}\nfunction toggleCircle(circle, scales){\n    if(circle.classed('shown')){\n        circle.classed('shown', false);\n        circle.style('fill', '#fff');\n    }else{\n        circle.classed('shown', true);\n        circle.style('fill', (d, i)=> scales.filter(f=> f.field === d)[0].catColor);\n    }\n}","import * as d3 from \"d3\";\nimport { branchPaths, renderPaths, renderAttributes, drawContAtt, drawDiscreteAtt, drawPathsAndAttributes } from './renderPathView';\nimport { formatAttributeData } from './dataFormat';\nimport { filterMaster } from './filterComponent';\nimport { dataMaster, collapsed, colorKeeper } from './index';\nimport { renderDistibutions } from \"./distributionView\";\n\nexport let selectedPaths = [];\nexport let comparisonKeeper = [];\n\nexport function pathSelected(selectedPath, otherPaths, scales, moveMetric) {\n\n    let selectedDiv = d3.select('div#selected');\n    let main = d3.select('div#main');\n    if (selectedPath === null) {\n\n        selectedPaths = [];\n\n        d3.select('div#selected').selectAll('*').remove();\n        selectedDiv.style('height', 0);\n        d3.select('div#main').style('padding-top', '0px');\n        let main = d3.select('div#main');\n        drawPathsAndAttributes([...otherPaths], main, scales, moveMetric, false);\n\n    } else {\n      \n        selectedPaths = selectedPaths.concat(selectedPath);\n        let commonNodes = renderSelectedView([...selectedPaths], [...otherPaths], selectedDiv, scales, moveMetric);\n        let sortedPaths = sortOtherPaths([...selectedPaths], [...otherPaths], [...commonNodes]);\n        \n        /// LOWER ATTRIBUTE VISUALIZATION ///\n        let pathGroups = drawPathsAndAttributes(sortedPaths.map(s => s.data), main, scales, moveMetric, false);\n\n        main.style('padding-top', '250px');\n    }\n}\nfunction getCommonNodes(paths){\n    let maxBranch = d3.max(paths.map(p => p.length));\n    let longestBranch = paths.filter(path => path.length === maxBranch)[0];\n    let startBranch = longestBranch.filter(f=> f.leaf != true);\n    let commonNodeStart = startBranch;\n    //FIND THE COMMON BRANCHES BETWEEN ALL OF THE SELECTED///\n    paths.map(path => {\n        commonNodeStart = [...path].filter(f => {\n            return (commonNodeStart.map(m => m.node).indexOf(f.node) > -1) & f.leaf != true });\n    });\n\n    let children = paths.map(path => {\n        path = (path[0].leaf === true) ? path.reverse() : path;\n        let nodeIndex = path.map(p => p.node);\n        let thresh = nodeIndex.indexOf(commonNodeStart[commonNodeStart.length - 1].node);\n        let subset = path.filter((f, i) => i > thresh);\n        return subset;\n    });\n\n    commonNodeStart[commonNodeStart.length - 1].children = children.map((path, i) => {\n        let max = d3.max(path.map(p => p.edgeMove)) - commonNodeStart[commonNodeStart.length - 1].edgeMove;\n        return path.map((chil, j, n) => {\n            chil.parentBase = commonNodeStart[commonNodeStart.length - 1].edgeMove;\n            chil.move = chil.edgeMove - commonNodeStart[commonNodeStart.length - 1].edgeMove;\n            chil.base = (j === 0) ? 0 : n[j - 1].edgeMove - commonNodeStart[commonNodeStart.length - 1].edgeMove;\n            let parentScale = d3.scaleLinear().domain([0, 1]).range([0, 1000])\n            let scaledParentMove = parentScale(commonNodeStart[commonNodeStart.length - 1].edgeMove);\n            chil.xScale = d3.scaleLinear().domain([0, max]).range([0, (1000 - scaledParentMove)]);\n            chil.level = i;\n            return chil;\n        });\n    });\n\n    return commonNodeStart;\n}\nexport function sortOtherPaths(pathData, otherPaths, commonNode) {\n\n    if(pathData.length > 1){\n\n        if(commonNode != null){\n\n            let chosenPath = commonNode.reverse().map(m => m.node);\n            let rankedPaths = otherPaths.map(path => {\n                let step = 0;\n                let test = path.reverse().map((node, i) => {\n                    if (chosenPath.indexOf(node.node));\n                    return { 'indexOf': chosenPath.indexOf(node.node), 'pathIndex': i, 'node': node, 'chosen': chosenPath[chosenPath.indexOf(node.node)] };\n                }).filter(f => f.indexOf > -1);\n                let distance = (test[0].indexOf + test[0].pathIndex);\n                return { 'data': path.reverse(), 'distance': distance };\n            });\n            let sortedData = rankedPaths.sort(function(a, b) { return a.distance - b.distance; });\n        \n            return sortedData;\n        }\n        console.error('multiple paths without common node');\n    }else{\n\n        let chosenPath = pathData[0].reverse().map(m => m.node);\n    \n        let rankedPaths = otherPaths.map(path => {\n            let step = 0;\n            let test = path.reverse().map((node, i) => {\n                if (chosenPath.indexOf(node.node));\n                return { 'indexOf': chosenPath.indexOf(node.node), 'pathIndex': i, 'node': node, 'chosen': chosenPath[chosenPath.indexOf(node.node)] };\n            }).filter(f => f.indexOf > -1);\n            let distance = (test[0].indexOf + test[0].pathIndex);\n            return { 'data': path.reverse(), 'distance': distance };\n        });\n        let sortedData = rankedPaths.sort(function(a, b) { return a.distance - b.distance; });\n        return sortedData;\n    }\n\n}\nfunction renderSelectedTopology(commonNodeStart, svg, scales, branchFrequency, moveMetric){\n\n        let selectWrap = svg.append('g').classed('select-wrap', true);\n        selectWrap.attr('transform', 'translate(0, 20)')\n\n        ///Scales for circles ///\n        let circleScale = d3.scaleLog().range([6, 14]).domain([1, d3.max(Object.values(branchFrequency))]);\n\n        let selectedGroups = selectWrap.selectAll('.paths').data([commonNodeStart]).join('g').classed('paths', true);\n\n        let pathBars = selectedGroups.append('rect').classed('path-rect', true);\n        pathBars.attr('y', -8);\n        pathBars.attr('height', (35 + (25 * commonNodeStart[commonNodeStart.length - 1].children.length)));\n\n        //////////\n        ///Selecting species\n        /////////\n        addRemoveBubble(selectedGroups, scales, moveMetric)\n\n        /////////\n        let timelines = selectedGroups.append('g').classed('time-line', true);\n        timelines.attr('transform', (d, i) => 'translate(145, 0)');\n\n        let lines = timelines.append('line')\n            .attr('x1', 0)\n            .attr('x2', (d, i) => {\n                let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n                return x(d[d.length - 1].edgeMove)\n            })\n            .attr('y1', 15)\n            .attr('y2', 15);\n\n        let nodeGroups = timelines.selectAll('.node').data((d) => d).join('g').classed('node', true);\n\n        nodeGroups.attr('transform', (d) => {\n            let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n            let distance = x(d.edgeMove);\n            return 'translate(' + distance + ', 10)';\n        });\n\n        nodeGroups.classed('common-node', true);\n\n        let childNodeWrap = nodeGroups.filter(c => c.children != undefined).selectAll('g.child').data(d => d.children).join('g').classed('child', true);\n\n        let childNodes = childNodeWrap.selectAll('g.node').data(d => d).join('g').classed('node', true)\n        childNodes.attr('transform', (d, i, n) => {\n            return 'translate(' + d.xScale(d.move) + ', ' + (d.level * 20) + ')';\n        });\n\n        childNodeWrap.append('path').attr('d', (d, i, n) => {\n            let pathArray = [{ 'x': 0, 'y': 0 }, { 'x': 0, 'y': i }];\n            d.map(m => {\n                pathArray.push({ 'x': m.xScale(m.move), 'y': m.level })\n            });\n            let line = d3.line()\n                .curve(d3.curveMonotoneY)\n                .x(function(d) {\n                    return d.x;\n                })\n                .y(d => (d.y * 20))\n            return line(pathArray);\n        }).attr('stoke-width', '2px').attr('fill', 'none').attr('stroke', 'gray');\n\n        childNodeWrap.on('mouseover', (d, i)=> {\n            let specArray = d.map(m=> m.species);\n            let hovers = nodeGroups.filter(n => n.node === d.node);\n            let commonHover = [...commonNodeStart].map(c=> c.node).concat(d.map(n=> n.node));\n            let treeNode = d3.select('#sidebar').selectAll('.node');\n            let treeLinks  = d3.select('#sidebar').selectAll('.link');\n            treeNode.filter(f => commonHover.indexOf(f.data.node) > -1).classed('hover', true);\n            treeLinks.filter(f => commonHover.indexOf(f.data.node) > -1).classed('hover', true);\n            return hovers.classed('hover-branch', true);\n        }).on('mouseout', (d, i)=> {\n            d3.selectAll('.hover').classed('hover', false);\n        });\n\n        let circle = nodeGroups.append('circle').attr('cx', 0).attr('cy', 0).attr('r', d => {\n            return circleScale(branchFrequency[d.node]);\n        }).attr('class', (d, i) => 'node-' + d.node);\n\n        let childCirc = childNodes.append('circle').attr('r', 7).attr('fill', 'red').attr('y', 5);\n\n        childCirc.on('mouseover', function(d, i) {\n            let hovers = nodeGroups.filter(n => n.node === d.node);\n            let treeNode = d3.select('#sidebar').selectAll('.node');\n            let selectedBranch = treeNode.filter(f => f.data.node === d.node).classed('selected-branch', true);\n            return hovers.classed('hover-branch', true);\n        }).on('mouseout', function(d, i) {\n            let hovers = nodeGroups.filter(n => n.node === d.node);\n            d3.selectAll('.selected-branch').classed('selected-branch', false);\n            return hovers.classed('hover-branch', false);\n        });\n\n        childNodes.filter(f => f.leaf === true).append('text').text(d => d.label).attr('x', 9).attr('y', 4);\n        //selectWrap.attr('transform', 'translate('+(50+(20 *commonNodeStart[commonNodeStart.length - 1].children.length))+')')\n       \n\n}\nexport function addRemoveBubble(group, scales, moveMetric){\n\n    let pathRemove = group.append('g').classed('x-icon', true);\n    pathRemove.attr('transform', 'translate(15, 10)');\n    pathRemove.append('circle').attr('r', 7).attr('fill', '#fff');\n    pathRemove.append('text').text('x').attr('transform', 'translate(-5, 5)');\n    pathRemove.style('cursor', 'pointer');\n    pathRemove.on('click', (d, i, n) => {\n        d3.selectAll('.high').classed('high', false);\n        d3.selectAll('.low').classed('low', false);\n        treeNodes.select('.selected').classed('selected', false);\n        pathSelected(null, dataMaster[0], scales, moveMetric);\n    });\n\n}\nexport function renderComparison(group, otherPaths, selectedDiv, scales){\n \n    let buttonGroupTest = selectedDiv.select('.button-wrap');\n    let buttonGroup = buttonGroupTest.empty() ? selectedDiv.append('div').classed('button-wrap', true) : buttonGroupTest;\n\n\n    \n    buttonGroup.style('display','inline-block').style('width', '900px').style('height', '50px');\n    let main = d3.select('div#main');\n    main.style('padding-top', '300px');\n\n    if(group != null){\n        let usedColors = comparisonKeeper.map(m=> m.groupColor);\n        let newColor = colorKeeper.find(c => usedColors.indexOf(c[0]) === -1);\n        group.groupColor = newColor[0];\n        comparisonKeeper.push(group);\n    }\n\n    if(comparisonKeeper.length > 1){\n        let compareButtonTest = d3.select('#toolbar').select('#compare-button');\n        let compareButton = compareButtonTest.empty() ? d3.select('#toolbar').append('button').text('Normal Mode').attr('id', 'compare-button').classed('btn btn-info', true) : compareButtonTest;\n        compareButton.on('click', ()=> {\n            compareButton.text() === \"Normal Mode\" ? compareButton.text('Compare Mode') : compareButton.text('Normal Mode');\n            renderComparison(null, otherPaths, selectedDiv, scales);\n        });\n    }\n\n    let comparisonCombined = scales.map((sc, i)=> {\n        let newAtt = {'field': sc.field, 'type': sc.type, 'data': []}\n        comparisonKeeper.map((com, i)=> {\n            let atts = formatAttributeData(com.data, scales, [sc.field]);\n           \n            let added = atts.flatMap(att=> {\n                return att.map(a => {\n                    return a.map(m=> {\n                        let standard = m.leaf === true ? 0 : (m.upperCI95 - m.realVal) / 2;\n                        m.variance = standard * standard;\n                        return m;\n                    });\n                })\n            })\n\n            newAtt.data.push({'group': {'first': com.first, 'second': com.second, 'color': com.groupColor}, 'data': sc.type === 'continuous' ? added : atts.flatMap(a=> a)});\n        })\n        return newAtt;\n    });\n\n    let button = buttonGroup.selectAll('button').data(comparisonKeeper).join('button').classed('btn btn-info', true).style('background', d=> d.groupColor);\n    button.selectAll('span').data(t=> [t]).join('span').text(t=> {\n        return t.first ? `${t.first[1]} / ${t.second[1]}` : t.state;\n    }).append('span').text(t=> t.data.length).classed(\"badge badge-light\", true)\n    \n    let xOut = button.selectAll('i').data(d=> [d]).join('i').classed('close fas fa-times', true).style('padding-left', '10px');\n    xOut.on('click', (d, i)=> {\n        let filteredComp = comparisonKeeper.filter(f=> f.groupColor != d.groupColor);\n        comparisonKeeper = filteredComp;\n        if(comparisonKeeper.length > 0){\n            renderComparison(null, otherPaths, selectedDiv, scales);\n        }else{\n            selectedDiv.selectAll('*').remove();\n            selectedDiv.style('height', '0px');\n            main.style('padding-top', '0px');\n        }\n    });\n\n    let selectedTest = selectedDiv.select('.comparison-svg');\n    let selectedTool = selectedTest.empty() ? selectedDiv.append('svg').classed('comparison-svg', true) : selectedTest;\n    selectedDiv.style('height', '300px').style('width', '100%');\n    selectedTool.style('height', '300px');\n\n    let attWraps = selectedTool.selectAll('.att-wrapper').data(comparisonCombined.filter(f=> f.type === 'continuous').map((com)=>{\n       \n        let max = d3.max(com.data.flatMap(d=> d.data.flatMap(m=> m.map(f=> f.upperCI95)))) + .2;\n        let min = d3.min(com.data.flatMap(d=> d.data.flatMap(m=> m.map(f=> f.lowerCI95)))) - .2;\n        \n        com.data.map(c=> {\n            let binLength = 6;\n            //let max = scales.filter(f=> f.field === com.field)[0].max;\n           // let min = scales.filter(f=> f.field === com.field)[0].min;\n            let normBins = new Array(binLength).fill().map((m, i)=> {\n                let step = 1 / binLength;\n                let base = (i * step);\n                let top = ((i+ 1)* step);\n                return {'base': base, 'top': top, 'binI': i, 'max': max, 'min':min }\n            });\n\n            let internalNodes = c.data.map(path => path.filter(node=> node.leaf != true));\n            let leafNodes = c.data.flatMap(path => path.filter(node=> node.leaf === true));\n\n            c.bins = normBins.map((n, i, nodes)=> {\n                let edges = internalNodes.flatMap(path => path.filter(node=> {\n                    return node.edgeMove >= n.base && node.edgeMove <= n.top;\n                } ));\n                n.data = edges;\n                let mean = d3.mean(edges.map(e=> e.realVal));\n                n.mean = mean === undefined ? normBins[i-1].mean : mean;\n                let standard = Math.sqrt(d3.mean(edges.map(e=> e.variance)));\n                n.meanStandard = edges.length === 0 ? 0 : standard;\n                let sigma2 = standard * 2;\n                n.upCon95 = mean === undefined ? normBins[i-1].upCon95 : mean + sigma2;\n                n.lowCon95 = mean === undefined ? normBins[i-1].lowCon95 : mean - sigma2;\n                return n;\n            });\n            c.leaves = leafNodes;\n           \n            return c;\n        })\n        \n        return com;\n    }));\n    attWraps.exit().remove();\n    let attWrapsEnter = attWraps.enter().append('g').classed('att-wrapper', true);\n\n    let attLabels = attWrapsEnter.append('text').text(d=> d.field).style('text-anchor', 'end')\n                    .style('font-size', '11px').attr('transform', 'translate(120, 35)');\n\n    attWraps = attWrapsEnter.merge(attWraps);\n    attWraps.attr('transform', (d, i)=> 'translate(0,'+(10+(i * 70))+')');\n\n    let innerWrap = attWraps.selectAll('g.inner-group').data(d=> [d]).join('g').classed('inner-group', true);\n    innerWrap.attr('transform', 'translate(150, 0)');\n    let wrapRect = innerWrap.selectAll('rect.outline-rect').data(d=> [d]).join('rect').classed('outline-rect', true)\n                    .attr('width', 800).attr('height', 60).attr('fill', '#fff').attr('stroke', 'gray');\n    \n    if(d3.select('#compare-button').empty() || d3.select('#compare-button').text() === \"Normal Mode\"){\n            let lineGen = d3.line()\n            .x((d, i)=> {\n                let x = d3.scaleLinear().domain([0, 5]).range([0, 800]);\n                return x(i);\n            })\n            .y(d=> {\n            let y = d3.scaleLinear().domain([d.min, d.max])\n                y.range([60, 1]);\n                return y(d.mean);\n    });\n\n    let pathGroups = innerWrap.selectAll('g.path-groups').data(d=> d.data).join('g').classed('path-groups', true);\n    pathGroups.selectAll('*').remove();\n    let paths = pathGroups.append('path').attr('d', d=> { \n        let scale = d.bins[0].data[0].yScale\n        d.bins = d.bins.map((b, i, n)=> {\n            if(b.mean === undefined){\n                b.mean = d.bins[i-1].mean;\n                d.missing = true;\n            }\n           \n            b.yScale = d3.scaleLinear().domain([b.min, b.max]).range([60, 1])\n            return b;\n        });\n        return lineGen(d.bins);\n    }).classed('path', true);\n\n    var areaG = d3.area()\n    .curve(d3.curveCardinal)\n    .x((d, i)=> {\n        let x = d3.scaleLinear().domain([0, 5]).range([0, 800]);\n        return x(i);\n    })\n    .y0(d=> {\n        let y = d.yScale;\n        y.range([60, 1]);\n     \n        return y(d.lowCon95);\n    })\n    .y1(d=> {\n        let y = d.yScale;\n        y.range([60, 1]);\n     \n        return y(d.upCon95); \n    });\n\n    let confGroups = innerWrap.selectAll('g.conf-groups').data(d=> d.data).join('g').classed('conf-groups', true);\n    confGroups.selectAll('*').remove();\n    let conf = confGroups.append('path').attr('d', d=> { \n        d.bins = d.bins.map((b, i, n)=> {\n            if(b.upCon95 === NaN){\n                b.upCon95 = d.bins[i-1].upCon95;\n                d.missing = true;\n            }\n            if(b.lowCon95 === NaN){\n                b.lowCon95 = d.bins[i-1].lowCon95;\n                d.missing = true;\n            }\n\n            return b;\n        });\n        return areaG(d.bins);\n    }).classed('path', true);\n\n    paths.style('fill', 'none');\n    paths.style('stroke', d=> d.group.color);\n    paths.style('stroke-width', '2px');\n\n    conf.style('fill', d=> d.group.color);\n    conf.style('opacity', 0.15);\n\n    let yAxisG = innerWrap.append('g').classed('y-axis', true);\n\n    innerWrap.on('mousemove', function(d, i) {\n     \n        let scale = d3.scaleLinear().domain([d.data[0].bins[0].min, d.data[0].bins[0].max]).range([1, 60]);\n        let axisGroupTest = d3.select(this).select('.y-axis');\n        let axisGroup = axisGroupTest.empty() ? d3.select(this).append('g').classed('y-axis', true) : axisGroupTest;\n        \n        if(d3.select('#compare-button').empty() || d3.select('#compare-button').text()==='Normal Mode'){\n            axisGroup.attr('transform', (d, i)=> 'translate('+(d3.mouse(this)[0] - 10)+',0)')\n           // let scale = d3.scaleLinear().domain([])\n            axisGroup.call(d3.axisLeft(scale).ticks(5));\n        }else{\n            let pathD = d3.select(this).select('.path-groups').selectAll('path');\n            let maxDiff = pathD.data().map(d=> d[0].maxDiff)[0];\n            \n            axisGroup.attr('transform', (d, i)=> 'translate('+(d3.mouse(this)[0] - 10)+',0)');\n            let newScale = d3.scaleLinear().domain([maxDiff, 0]).range([0, 60]);\n            axisGroup.call(d3.axisLeft(newScale).ticks(5));\n        }\n\n    \n    }).on('mouseleave', function(){\n        let axisGroup = d3.select(this).select('.y-axis');\n        axisGroup.remove();\n    });\n    \n}else{\n\n    innerWrap.selectAll('.path-groups').remove();\n    innerWrap.selectAll('g.conf-groups').remove();\n    let pathGroups = innerWrap.selectAll('g.path-groups').data(d=> {\n        let startBins = d.data[0].bins;\n        let difArray = [];\n        for(let i = 1; i < d.data.length; i ++){\n            let diffs = []\n            d.data[i].bins.map((b, j)=>{\n                if(b.mean === undefined){\n                    b.mean = d.data[i].bins[j-1].mean;\n                }\n                if(startBins[j].mean === undefined){\n                    startBins[j].mean = startBins[j-1].mean;\n                }\n                let maxDiff = d.data[0].bins[0].max - d.data[0].bins[0].min;\n                diffs.push({'diff':Math.abs(startBins[j].mean - b.mean), 'maxDiff': maxDiff});\n            });\n            difArray.push(diffs);\n        }\n        return difArray;\n    }).join('g').classed('path-groups', true);\n\n    let lineGen = d3.line()\n        .x((d, i)=> {\n            let x = d3.scaleLinear().domain([0, 5]).range([0, 800]);\n            return x(i);\n        })\n        .y(d=> {\n            let y = d3.scaleLinear().domain([0, d.maxDiff]).clamp(true);\n            y.range([60, 0]);\n            return y(d.diff);\n        });\n\n    let paths = pathGroups.append('path').attr('d', d=> { \n        return lineGen(d);\n    });\n\n    paths.style('fill', 'none');\n    paths.style('stroke', 'black');\n    paths.style('stroke-width', '2px');\n}\n\n/////////////////////////\nlet obsDistWrap = attWraps.selectAll('.observed-dist-wrap').data(d=> {\n  \n        let max = d3.max(d.data.flatMap(f=> f.leaves.map(m=> m.realVal)));\n        let min = d3.min(d.data.flatMap(f=> f.leaves.map(m=> m.realVal)));\n\n        let x = d3.scaleLinear().domain([min, max]).range([0, 200]);\n    \n        let histogram = d3.histogram()\n        .value(function(d) { return d.realVal; })  \n        .domain(x.domain())  \n        .thresholds(x.ticks(10)); \n        \n        let leafData = d.data.map(m=> {\n            let newLeaves = [...m.leaves].map(leaf => {\n                leaf.x = x;\n                leaf.group = m.group;\n                return leaf;\n            });\n            return {'binData':histogram(m.leaves), 'data': newLeaves, 'group': m.group, 'xScale': x};\n        });\n        return [{'data':leafData, 'xScale': x}];\n    }).join('g').classed('observed-dist-wrap', true);\n\n    obsDistWrap.attr('transform', 'translate(970, 0)');\n  \n    let xAxis = obsDistWrap.selectAll('g.axis-x').data(d=> [d]).join('g').classed('axis-x', true);\n    xAxis.attr('transform', 'translate(0, 50)')\n    xAxis.each((d, i, nodes)=> {\n        d3.select(nodes[i]).call(d3.axisBottom(d.xScale).ticks(5))\n    });\n\n    let distGroups = obsDistWrap.selectAll('.observed-group').data(d=> {\n        return d.data.map((m, i, n)=> {\n            m.index = i;\n            m.groupLength = n.length;\n            return m;\n        });\n    }).join('g').classed('observed-group', true);\n\n    let lines = distGroups.selectAll('.line').data(d => {\n            let mean = d3.mean(d.data.map(r=> r.realVal))\n            let vals = {'mean': mean, 'group':d.group, 'x':d.xScale}\n            return [vals];\n    }).join('rect').classed('line', true).attr('transform', (d, i)=> 'translate('+(d.x(d.mean)-1.5)+',0)')\n    .attr('height', 50).attr('width', 3).attr('fill', d=> d.group.color).style('opacity', '0.4')\n\n    let circWrap = distGroups.selectAll('.circ-wrap').data((d, i)=> [d]).join('g').classed('circ-wrap', true).attr('transform', (d, i, n)=> {\n        let move = d3.scaleLinear().domain([0, d.groupLength]).range([0, 60]);\n        return 'translate(0,'+(move(d.index+0.5))+')'});\n\n    let distCirc = circWrap.selectAll('circle.disDots').data(d=> d.data).join('circle').attr('r', 3)\n    .attr('cx', (d, i) => {\n        return d.x(d.realVal);\n    }).attr('cy', (d, i, n)=> {\n        return 0;\n    }).attr('fill', d=> d.group.color);\n}\nexport function renderSelectedView(pathData, otherPaths, selectedDiv, scales, moveMetric) {\n\n    let attributeHeight = 50;\n\n    let selectedSpecies = pathData.flatMap(p => p.filter(f => f.leaf === true).map(n => n.node));\n    let treeNodes = d3.select('#sidebar').select('svg').selectAll('.node');\n    treeNodes.filter(node => selectedSpecies.indexOf(node.data.node) > -1).classed('selected', true);\n\n    ////FILTER MASTER TO HIDE ATTRIBUTES THAT ARE DESELECTED FROM FILTERBAR\n    let attrHide = filterMaster.filter(f => f.type === 'hide-attribute').length > 0 ? filterMaster.filter(f => f.type === 'hide-attribute').map(m => m.attribute) : [];\n    let attrFilter = attrHide.length > 0 ? scales.filter(sc => {\n        return attrHide.indexOf(sc.field) === -1;\n    }).map(m => m.field) : null;\n\n    ////IF THE SELECTED DIV IS THERE ALREADY USE THAT/////\n    let selectedToolTest = selectedDiv.select('.selected-toolbar');\n    let selectedTool = selectedToolTest.empty() ? selectedDiv.append('div').classed('selected-toolbar', true) : selectedToolTest;\n    selectedTool.selectAll('*').remove();\n\n    ///////////////////////\n    let sortByDistanceDiv = selectedTool.append('div').style('display', 'inline-block');\n    sortByDistanceDiv.append('text').text('Topology: ');\n    let sortByDistanceButton = sortByDistanceDiv.append('button').classed('btn btn-secondary btn-sm', true);\n    sortByDistanceButton.text('Sort Most to Least');\n    sortByDistanceButton.on('click', () => sortPaths(sortByDistanceButton));\n\n    /////////////Sorting by attribute///////////////\n    let attrKeys = scales.map(m => m.field);\n    let attrSortWrap = selectedTool.append('div').style('display', 'inline-block');\n    attrSortWrap.append('h6').text('Sort by: ').style('display', 'inline');\n\n    let radioDiv = attrSortWrap.selectAll('div.attr-radio').data(attrKeys).join('div').classed('attr-radio form-check form-check-inline', true);\n    let radio = radioDiv.append('input').attr('type', 'radio').property('name', 'attribute-radio-sort').property('value', d => d).attr('id', (d, i) => 'radio-' + i).classed(\"form-check-input\", true);\n    radioDiv.append('label').text(d => d).property('for', (d, i) => 'radio-' + i).classed(\"form-check-label\", true);\n\n    let svgTest = selectedDiv.select('svg.select-svg');\n    let svg = svgTest.empty() ? selectedDiv.append('svg').classed('select-svg', true) : svgTest;\n\n    svg.selectAll('*').remove();\n\n    let branchFrequency = pathData.flatMap(row => row.flatMap(f => f.node)).reduce(function(acc, curr) {\n        if (typeof acc[curr] == 'undefined') {\n            acc[curr] = 1;\n        } else {\n            acc[curr] += 1;\n        }\n        return acc;\n    }, {});\n\n    ///RENDERING SELECTED PATHS////\n    if (pathData.length === 1) {\n\n        /////////////////////////////////////////////////\n        let selectWrap = svg.append('g').classed('select-wrap', true);\n        selectWrap.attr('transform', (d, i) => 'translate(0,20)');\n\n        ///Scales for circles ///\n        let circleScale = d3.scaleLog().range([6, 14]).domain([1, d3.max(Object.values(branchFrequency))]);\n\n        let selectedGroups = selectWrap.selectAll('.paths').data(pathData).join('g').classed('paths', true);\n\n        let pathBars = selectedGroups.append('rect').classed('path-rect', true);\n        pathBars.attr('y', -8);\n\n        //////////\n        ///Selecting species\n        /////////\n        addRemoveBubble(selectedGroups, scales, moveMetric)\n\n        /////////\n        selectedGroups.on('mouseover', function(d, i) {\n            let treeNode = d3.select('#sidebar').selectAll('.node');\n            let treeLinks = d3.select('#sidebar').selectAll('.link');\n            treeNode.filter(f => {\n                return d.map(m => m.node).indexOf(f.data.node) > -1;\n            }).classed('hover', true);\n            treeLinks.filter(f => d.map(m => m.node).indexOf(f.data.node) > -1).classed('hover', true);\n            return d3.select(this).classed('hover', true);\n        }).on('mouseout', function(d, i) {\n            let treeNode = d3.select('#sidebar').selectAll('.node').classed('hover', false);\n            let treeLinks = d3.select('#sidebar').selectAll('.link').classed('hover', false);\n            return d3.select(this).classed('hover', false);\n        });\n\n        let speciesTitle = selectedGroups.append('text').text(d => {\n            let string = d.filter(f => f.leaf === true)[0].label;\n            return string.charAt(0).toUpperCase() + string.slice(1);\n        });\n\n        speciesTitle.attr('x', 25).attr('y', 15);\n\n        let timelines = selectedGroups.append('g').classed('time-line', true);\n        timelines.attr('transform', (d, i) => 'translate(150, 0)');\n\n        let lines = timelines.append('line')\n            .attr('x1', 0)\n            .attr('x2', 1000)\n            .attr('y1', 15)\n            .attr('y2', 15);\n\n        let nodeGroups = timelines.selectAll('.node').data((d) => d).join('g').classed('node', true);\n\n        nodeGroups.attr('transform', (d) => {\n            let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n            let distance = x(d.edgeMove);\n            return 'translate(' + distance + ', 10)';\n        });\n\n        let circle = nodeGroups.append('circle').attr('cx', 0).attr('cy', 0).attr('r', d => {\n            return circleScale(branchFrequency[d.node]);\n        }).attr('class', (d, i) => 'node-' + d.node);\n\n        circle.on('mouseover', function(d, i) {\n            let hovers = nodeGroups.filter(n => n.node === d.node);\n            let treeNode = d3.select('#sidebar').selectAll('.node');\n            let selectedBranch = treeNode.filter(f => f.data.node === d.node).classed('selected-branch', true);\n            return hovers.classed('hover-branch', true);\n        }).on('mouseout', function(d, i) {\n            let hovers = nodeGroups.filter(n => n.node === d.node);\n            d3.selectAll('.selected-branch').classed('selected-branch', false);\n            return hovers.classed('hover-branch', false);\n        });\n\n        let speciesNodeLabel = nodeGroups.filter(f => f.label != undefined).append('text').text(d => {\n            let string = d.label.charAt(0).toUpperCase() + d.label.slice(1);\n            return string;\n        }).attr('x', 10).attr('y', 5);\n\n        selectedGroups.attr('transform', (d, i) => 'translate(0,' + (i * 60) + ')');\n\n        let nodes = selectedGroups.select('.time-line').selectAll('.node');\n        nodes.on('mouseover', (d, i) => {\n\n            let nearest = otherPaths.filter(path => {\n                let nodearray = path.flatMap(f => f.node);\n                return nodearray.indexOf(d.node) > -1;\n            });\n\n            let nearestA = nearest[0];\n            let nearestB = nearest[1];\n           \n        });\n\n        //////PLAYING WITH FUNCTION TO CALULATE DISTANCES\n\n        /// LOWER ATTRIBUTE VISUALIZATION ///\n        let attributeWrapper = selectedGroups.append('g').classed('attribute-wrapper', true);\n        let attData = formatAttributeData(pathData, scales, attrFilter);\n        let attributeGroups = renderAttributes(attributeWrapper, attData, scales, null);\n\n        selectedGroups.attr('transform', (d, i) => 'translate(10,' + (i * ((attributeHeight + 5) * (Object.keys(d[1].attributes).length + 1))) + ')');\n\n        drawContAtt(attributeGroups);\n        drawDiscreteAtt(attributeGroups, scales, false, false);\n\n        //sizeAndMove(svg, attributeWrapper, pathData, (attrMove * attributeHeight));\n        //tranforming elements\n        svg.style('height', ((pathData.length + attributeGroups.data().map(m => m[0]).length) * 50) + 50 + 'px');\n        selectedDiv.style('height', ((pathData.length + attributeGroups.data().map(m => m[0]).length) * 50) + 50 + 'px');\n        attributeWrapper.attr('transform', (d) => 'translate(140, 25)');\n        d3.selectAll('.selected-path').classed('selected-path', false);\n\n        ////RADIO BUTTON THAT COLORS BASE DON ATTRIBUTE VALUE////\n        radio.on('click', (d, i) => {\n            let leaf = pathData.map(node => node.filter(d => d.leaf === true)[0])[0];\n            let sorted = [...otherPaths].sort(function(a, b) {\n                return a.filter(n => n.leaf === true)[0].attributes[d].realVal - b.filter(n => n.leaf === true)[0].attributes[d].realVal;\n            });\n    \n            let main = d3.select('div#main');\n            /// LOWER ATTRIBUTE VISUALIZATION ///\n            drawPathsAndAttributes(sorted.reverse(), main, scales, moveMetric);\n            main.style('padding-top', '250px');\n    \n            let paths = main.select('svg#main-path-view').selectAll('.paths');\n    \n            let high = paths.filter(path => {\n                let leafOther = path.filter(node => node.leaf === true)[0];\n                return leafOther.attributes[d].realVal > leaf.attributes[d].realVal;\n            });\n            high.classed('high', true);\n    \n            let highLeaves = high.data().map(path => path.filter(f => f.leaf === true)[0].node);\n    \n            treeNodes.filter(f => highLeaves.indexOf(f.data.node) > -1).classed('high', true);\n    \n            let low = paths.filter(path => {\n                let leafOther = path.filter(node => node.leaf === true)[0];\n                return leafOther.attributes[d].realVal < leaf.attributes[d].realVal;\n            });\n            low.classed('low', true);\n    \n            let lowLeaves = low.data().map(path => path.filter(f => f.leaf === true)[0].node);\n    \n            treeNodes.filter(f => lowLeaves.indexOf(f.data.node) > -1).classed('low', true);\n    \n            let same = paths.filter(path => {\n                let leafOther = path.filter(node => node.leaf === true)[0];\n                return leafOther.attributes[d].realVal === leaf.attributes[d].realVal;\n            });\n            same.classed('same', true);\n        });\n      \n        return pathData;\n\n    } else if(pathData.length > 1 && pathData.length < 5) {\n       \n        let commonNodeStart = getCommonNodes(pathData);\n        renderSelectedTopology(commonNodeStart, svg, scales, branchFrequency, moveMetric);\n\n        /////END PATH RENDER///////\n        let attWrap = svg.append('g').classed('attribute-wrapper', true);\n        let attributeData = commonNodeStart[commonNodeStart.length - 1].children.map(ch => {\n            return [...commonNodeStart].concat(ch);\n        });\n\n        let attData = formatAttributeData(pathData, scales, attrFilter);\n        let attDataComb = attData[0].map((att, i)=> {\n            let species = pathData[0].filter(f=> f.leaf === true)[0].label;\n            att[att.length - 1].offset = 0;\n            let attribute = {'label': att[att.length-1].label, 'type':att[att.length-1].type, 'data': [{'species': species, 'paths': att}]}\n            for(let index = 1; index < attData.length; index++ ){\n                let species = pathData[index].filter(f=> f.leaf === true)[0].label;\n                let last = attData[index][i].length - 1\n                attData[index][i][last].offset = (index * 8);\n                attribute.data.push({'species': species, 'paths': attData[index][i]})\n            }\n            return attribute;\n        });\n\n        function findMaxState(states, offset){\n            let maxP = d3.max(states.map(v=> v.realVal));\n            let notMax = states.filter(f=> f.realVal != maxP);\n            let winState = states[states.map(m=> m.realVal).indexOf(maxP)]\n            winState.other = notMax;\n            winState.offset = offset;\n    \n            return winState;\n        }\n\n       let mappedDis = attDataComb.map(dis=> {\n           dis.data = dis.data.map((spec, i)=> {\n               spec.paths = spec.paths.map(m=> {\n                if(dis.type === 'discrete'){\n                    let offset = 5 * i;\n                    let maxProb = m.states? {'realVal': 1.0, 'state': m.winState, 'color':m.color, 'edgeMove': m.edgeMove, 'offset':m.offset, 'leaf': true} : findMaxState(m, offset); \n                    return maxProb;\n                }else{\n                    return m;\n                }\n            });\n            return spec;\n           });\n           return dis;\n       });\n\n       let attGroups = attWrap.selectAll('g').data(mappedDis).join('g').classed('attr', true);\n       attGroups.attr('transform', (d, i) => 'translate(145,' + (i * (attributeHeight + 10)) + ')');\n\n       attGroups.append('text')\n        .text(d=> d.label)\n        .style('text-anchor', 'end')\n        .style('font-size', 11)\n        .attr('transform', 'translate(0,'+(attributeHeight/2)+')');\n\n       let wrapRect = attGroups.append('rect').attr('width', 1010);\n       wrapRect.attr('height', attributeHeight);\n       wrapRect.style('fill', '#fff');\n       wrapRect.style('stroke', 'gray');\n       wrapRect.style('opacity', 0.5);\n\n       attGroups.append('line').classed('half', true).attr('x1', 0).attr('y1', 22).attr('x2', 1010).attr('y2', 22);\n     \n       let speciesGrp = attGroups.selectAll('g').data(d=> {\n            d.data = d.data.map(m=> {\n                m.type = d.type;\n                return m;\n            });\n            return d.data;\n        }).join('g').classed('species', true);\n\n       let lineGenD = d3.line()\n       .x(d=> {\n           let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n           let distance = d.edgeMove;\n           return x(distance);\n        })\n       .y(d=> {\n           let y = d3.scaleLinear().domain([0, 1]).range([attributeHeight-2, 1]);\n           return y(d.realVal) + d.offset;\n       });\n\n       let lineGenC = d3.line()\n       .x(d=> {\n           let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n           let distance = d.edgeMove;\n           return x(distance);\n        })\n       .y(d=> {\n           let y = d.yScale;\n           y.range([attributeHeight-2, 1]);\n           return y(d.realVal) + 2;\n       });\n\n       let innerStatePaths = speciesGrp.append('path')\n       .attr(\"d\", d=> {\n            return (d.type === 'discrete') ? lineGenD(d.paths) : lineGenC(d.paths);\n        })\n       .attr(\"class\", (d, i)=> {\n            return d.species + \" inner-line\"})\n       .style('stroke-width', 0.7)\n       .style('fill', 'none')\n       .style('stroke', 'gray');\n\n       innerStatePaths.on('mouseover', (d, i, n)=> {\n           d3.select(n[i]).classed('selected', true);\n       }).on('mouseout', (d, i, n)=> {\n            d3.select(n[i]).classed('selected', false);\n       });\n\n       let disGroup = speciesGrp.filter(sp=> {\n        return sp.type === 'discrete';\n        });\n\n       let branchGrpDis = disGroup.selectAll('.branch').data(d=>d.paths).join('g').classed('branch', true);\n\n       branchGrpDis.attr('transform', (d)=> {\n        let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n            let distance = x(d.edgeMove);\n            return 'translate('+distance+', 0)';\n        });\n\n        let bCirc = branchGrpDis.append('circle').attr('r', 5).attr('cy', (d, i)=> {\n            let y = d3.scaleLinear().domain([0, 1]).range([attributeHeight - 5, 2]);\n            return y(d.realVal) + d.offset;\n        }).attr('cx', 5);\n\n        bCirc.attr('fill', (d, i)=> d.color);\n\n        let otherCirc = branchGrpDis.filter(f=> f.leaf != true).selectAll('.other').data(d=> d.other).join('circle').classed('other', true);\n        otherCirc.attr('r', 4).attr('cx', 5).attr('cy', (c, i)=> {\n            let y = d3.scaleLinear().domain([1, 0]);\n            y.range([0, (attributeHeight-5)]);\n                return y(c.realVal);\n            }).attr('fill', (c)=> c.color).style('opacity', 0.1);\n\n        otherCirc.on(\"mouseover\", function(d) {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(200)\n              .style(\"opacity\", .9);\n            let f = d3.format(\".3f\");\n            tool.html(d.state + \": \" + f(d.realVal))\n              .style(\"left\", (d3.event.pageX + 10) + \"px\")\n              .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            })\n          .on(\"mouseout\", function(d) {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(500)\n              .style(\"opacity\", 0);\n            });\n\n        bCirc.on(\"mouseover\", function(d) {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(200)\n              .style(\"opacity\", .9);\n            let f = d3.format(\".3f\");\n            tool.html(d.state + \": \" + f(d.realVal))\n              .style(\"left\", (d3.event.pageX + 10) + \"px\")\n              .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            })\n          .on(\"mouseout\", function(d) {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(500)\n              .style(\"opacity\", 0);\n            });\n        \n        /////AXIS ON HOVER////\n        branchGrpDis.on('mouseover', (d, i, n)=> {\n            let y = d3.scaleLinear().domain([1, 0]);\n            y.range([0, (attributeHeight-5)]);\n            svg.selectAll('path.inner-line.'+ d.species).attr('stroke', 'red');\n            svg.selectAll('path.inner-line.'+ d.species).classed('selected', true);\n            d3.select(n[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(3));\n            d3.select(n[i]).selectAll('.other').style('opacity', 0.7);\n        }).on('mouseout', (d, i, n)=> {\n            d3.select(n[i]).select('g.y-axis')\n            d3.select(n[i]).select('g.y-axis').remove();\n            d3.selectAll('path.inner-line.'+ d.species).attr('stroke', 'gray');\n            d3.selectAll('path.inner-line.'+ d.species).classed('selected', false);\n            d3.selectAll('.other').style('opacity', 0.1);\n        });\n\n        let conGroup = speciesGrp.filter(sp=> {\n            return sp.type === 'continuous';\n        });\n\n        let branchGrpCon = conGroup.selectAll('.branch').data(d=>d.paths).join('g').classed('branch', true);\n\n        branchGrpCon.attr('transform', (d)=> {\n         let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n             let distance = x(d.edgeMove);\n             return 'translate('+distance+', 0)';\n         });\n\n         /////AXIS ON HOVER////\n        branchGrpCon.on('mouseover', (d, i, n)=> {\n            let y = d.yScale;\n            y.range([0, (attributeHeight-5)]);\n            svg.selectAll('path.inner-line.'+ d.species).attr('stroke', 'red');\n            svg.selectAll('path.inner-line.'+ d.species).classed('selected', true);\n            d3.select(n[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(3));\n            d3.select(n[i]).selectAll('.other').style('opacity', 0.7);\n        }).on('mouseout', (d, i, n)=> {\n            d3.select(n[i]).select('g.y-axis')\n            d3.select(n[i]).select('g.y-axis').remove();\n            d3.selectAll('path.inner-line.'+ d.species).attr('stroke', 'gray');\n            d3.selectAll('path.inner-line.'+ d.species).classed('selected', false);\n            d3.selectAll('.other').style('opacity', 0.1);\n        });\n\n        let MeanRect = branchGrpCon.append('rect');\n   \n        MeanRect.attr('width', 10).attr('height', 3);\n        MeanRect.attr('y', (d, i) => {\n            let scale = scales.filter(s=> s.field === d.label)[0];\n            let y = d3.scaleLinear().domain([scale.min, scale.max]).range([attributeHeight, 0])\n            return y(d.realVal);\n        });\n\n        let confiBars = branchGrpCon.filter(f=> f.leaf != true).append('rect');\n        confiBars.attr('width', 10).attr('height', (d, i)=> {\n            let scale = scales.filter(s=> s.field === d.label)[0];\n            let y = d3.scaleLinear().domain([scale.min, scale.max]).range([attributeHeight, 0]);\n            return y(d.lowerCI95) - y(d.upperCI95);\n        });\n\n        confiBars.attr('y', (d, i)=> {\n            let scale = scales.filter(s=> s.field === d.label)[0];\n            let y = d3.scaleLinear().domain([scale.min, scale.max]).range([attributeHeight, 0]);\n            return y(d.upperCI95);\n        })\n        confiBars.style('opacity', 0.1);\n\n        //tranforming elements\n        svg.style('height', ((pathData.length + attGroups.data().map(m => m[0]).length) * 50) + 50 + 'px');\n        selectedDiv.style('height', ((pathData.length + attGroups.data().map(m => m[0]).length) * 50) + 50 + 'px');\n        attWrap.attr('transform', (d) => 'translate(0, 60)');\n        d3.selectAll('.selected-path').classed('selected-path', false);\n\n        return commonNodeStart;\n\n\n    }else{\n       \n        /////////\n        //getting common node\n        ///\n\n        let maxBranch = d3.max(pathData.map(p => p.length));\n        let longestBranch = pathData.filter(path => path.length === maxBranch)[0];\n        let startBranch = longestBranch.filter(f=> f.leaf != true);\n        let commonNodeStart = startBranch;\n        //FIND THE COMMON BRANCHES BETWEEN ALL OF THE SELECTED///\n        pathData.map(path => {\n            commonNodeStart = [...path].filter(f => {\n                return (commonNodeStart.map(m => m.node).indexOf(f.node) > -1) & f.leaf != true });\n        });\n\n        svg.remove();\n        let remove = selectedTool.append('g').classed('x-icon', true);\n        remove.attr('transform', 'translate(15, 10)');\n        remove.append('circle').attr('r', 7).attr('fill', '#fff');\n        remove.append('text').text('x').attr('transform', 'translate(-5, 5)');\n        remove.style('cursor', 'pointer');\n        remove.on('click', (d, i, n) => {\n            d3.selectAll('.high').classed('high', false);\n            d3.selectAll('.low').classed('low', false);\n            treeNodes.select('.selected').classed('selected', false);\n            pathSelected(null, dataMaster[0], scales, moveMetric);\n        });        \n\n        /////////\n        renderDistibutions(pathData, selectedDiv, scales, moveMetric);\n        selectedDiv.style('height', '550px');\n\n        d3.selectAll('.selected-path').classed('selected-path', false);\n\n        ////RADIO BUTTON THAT COLORS BASE DON ATTRIBUTE VALUE////\n        radio.on('click', (d, i) => {\n            let leaf = pathData.map(node => node.filter(d => d.leaf === true)[0])[0];\n            let sorted = [...otherPaths].sort(function(a, b) {\n                return a.filter(n => n.leaf === true)[0].attributes[d].realVal - b.filter(n => n.leaf === true)[0].attributes[d].realVal;\n            });\n    \n            let main = d3.select('div#main');\n            /// LOWER ATTRIBUTE VISUALIZATION ///\n            drawPathsAndAttributes(sorted.reverse(), main, scales, moveMetric);\n            main.style('padding-top', '250px');\n    \n            let paths = main.select('svg#main-path-view').selectAll('.paths');\n    \n            let high = paths.filter(path => {\n                let leafOther = path.filter(node => node.leaf === true)[0];\n                return leafOther.attributes[d].realVal > leaf.attributes[d].realVal;\n            });\n            high.classed('high', true);\n    \n            let highLeaves = high.data().map(path => path.filter(f => f.leaf === true)[0].node);\n    \n            treeNodes.filter(f => highLeaves.indexOf(f.data.node) > -1).classed('high', true);\n    \n            let low = paths.filter(path => {\n                let leafOther = path.filter(node => node.leaf === true)[0];\n                return leafOther.attributes[d].realVal < leaf.attributes[d].realVal;\n            });\n            low.classed('low', true);\n    \n            let lowLeaves = low.data().map(path => path.filter(f => f.leaf === true)[0].node);\n    \n            treeNodes.filter(f => lowLeaves.indexOf(f.data.node) > -1).classed('low', true);\n    \n            let same = paths.filter(path => {\n                let leafOther = path.filter(node => node.leaf === true)[0];\n                return leafOther.attributes[d].realVal === leaf.attributes[d].realVal;\n            });\n            same.classed('same', true);\n        });\n        //tranforming elements\n        svg.style('height', ((pathData.length + attributeGroups.data().map(m => m[0]).length) * 50) + 50 + 'px');\n        selectedDiv.style('height', ((pathData.length + attGroups.data().map(m => m[0]).length) * 50) + 50 + 'px');\n        attWrap.attr('transform', (d) => 'translate(140, 25)');\n        d3.selectAll('.selected-path').classed('selected-path', false);\n\n        return commonNodeStart;\n    }\n    \n}\n\nfunction sortPaths(sortButton) {\n    if (sortButton.text() === 'Sort Most to Least') {\n        sortButton.text('Sort Least to Most');\n    } else {\n        sortButton.text('Sort Most to Least');\n    }\n}","export function dropDown(div, optionArray, dropText, dropId){\n    let dropdiv = div.append('div').classed('dropdown', true);\n    dropdiv.style('display', 'inline-block')\n    let button = dropdiv.append('button').classed('btn dropbtn btn-secondary', true).text(dropText);\n    let dropContent = dropdiv.append('div').attr('id', dropId).classed('dropdown-content', true);\n    dropContent.append('a').text('text');\n    let options = dropContent.selectAll('a').data(optionArray).join('a').text(d=> d.field);\n\n    button.on('click', (d, i, n)=> {\n        if(dropContent.classed('show')){\n            dropContent.classed('show', false);\n        }else{\n            dropContent.classed('show', true);\n        }\n    });\n\n    return options;\n}","import '../styles/index.scss';\nimport * as d3 from \"d3\";\nimport { colorKeeper } from './index';\nimport {pathSelected, renderComparison} from './selectedPaths';\nimport {formatAttributeData} from './dataFormat';\nimport {filterMaster, nodeFilter, getLatestData, leafStateFilter} from './filterComponent';\nimport { drawBranchPointDistribution } from './distributionView';\nimport { dropDown } from './buttonComponents';\nimport { groupedView } from './viewControl';\n\nexport function drawPathsAndAttributes(pathData, main, calculatedScales, moveMetric){\n\n    let nodeTooltipFlag = true;\n\n    let collapsed = d3.select('#scrunch').attr('value');\n  \n    main.select('#main-path-view').selectAll('*').remove();\n\n    let pathGroups = renderPaths(pathData, main, calculatedScales, moveMetric);\n  \n      /// LOWER ATTRIBUTE VISUALIZATION ///\n    let attributeWrapper = pathGroups.append('g').classed('attribute-wrapper', true);\n    let attrHide = filterMaster.filter(f=> f.type === 'hide-attribute').map(m=> m.attribute);\n\n    let attKeys = attrHide.length > 0 ? calculatedScales.filter(f=> attrHide.indexOf(f.field) === -1).map(m=> m.field) : null;\n\n    let attData = formatAttributeData(pathData, calculatedScales, attKeys);\n\n    let attrMove = attKeys === null ? calculatedScales.length : attKeys.length;\n\n    let predictedAttrGrps = renderAttributes(attributeWrapper, attData, calculatedScales, null, collapsed);\n    let attributeHeight = (collapsed === 'true')? 22 : 45;\n    pathGroups.attr('transform', (d, i)=> 'translate(10,'+ (i * ((attributeHeight + 5)* (attrMove + 1))) +')');\n    \n    let cGroups = drawContAtt(predictedAttrGrps, moveMetric, collapsed);\n    let dGroups = drawDiscreteAtt(predictedAttrGrps, moveMetric, collapsed, false);\n    sizeAndMove(main.select('#main-path-view'), attributeWrapper, pathData, (attrMove * attributeHeight));\n\n    let leafStates = d3.selectAll('.discrete-leaf');\n    leafStates.on('click', (d, i)=> {\n        if(nodeTooltipFlag){\n            nodeTooltipFlag = false;\n            d3.select(\"#state-tooltip\").classed(\"hidden\", true);\n        }else{\n            nodeTooltipFlag = true;\n            d3.select(\"#state-tooltip\")\n            .style(\"left\", (d3.event.pageX) + \"px\")\n            .style(\"top\", (d3.event.pageY - 28) + \"px\")\n            .select(\"#value\")\n            .text(d.winState);\n            d3.select(\"#state-tooltip\").classed(\"hidden\", false);\n\n            d3.select(\"#filter-by-state\").on('click', ()=> {\n                \n                leafStateFilter(d, calculatedScales);\n                nodeTooltipFlag = false;\n                d3.select(\"#state-tooltip\").classed(\"hidden\", true);\n\n            });\n\n            d3.select(\"#select-by-state\").on('click', ()=> {\n                let data = getLatestData();\n                let test = data.filter(path => {\n                    return path[path.length - 1].attributes[d.label].winState === d.winState;\n                });\n\n                let notIt = data.filter(path => {\n                    return path[path.length - 1].attributes[d.label].winState != d.winState;\n                });\n            \n                nodeTooltipFlag = false;\n                d3.select(\"#state-tooltip\").classed(\"hidden\", true);\n\n                pathSelected(test, notIt, calculatedScales, moveMetric);\n\n            });\n\n        }});\n\n    return pathGroups;\n\n}\nexport function sizeAndMove(svg, attribWrap, data, attrMove){\n        //tranforming elements\n    svg.style('height', ((data.length * (attrMove + 52))) + 'px');\n    attribWrap.attr('transform', (d)=> 'translate(140, 25)');\n        ///////////////////////////////////\n}\nexport function renderPaths(pathData, main, scales, moveMetric){\n    \n    ////YOU SHOULD MOVE THESE APPENDING THINGS OUT OF HERE///////\n    /////Rendering ///////\n    let svgTest = main.select('#main-path-view');\n    let svg = svgTest.empty() ? main.append('svg').attr('id', 'main-path-view') : svgTest;\n    \n    let nodeTooltipFlag = false;\n\n    let pathWrapTest = svg.select('.path-wrapper');\n    let pathWrap = pathWrapTest.empty() ? svg.append('g').classed('path-wrapper', true) : pathWrapTest;\n    pathWrap.attr('transform', (d, i)=> 'translate(0,20)');\n\n      /////Counting frequency of nodes//////\n    let branchFrequency = pathData.flatMap(row=> row.flatMap(f=> f.node)).reduce(function (acc, curr) {\n        if (typeof acc[curr] == 'undefined') {\n          acc[curr] = 1;\n        } else {\n          acc[curr] += 1;\n        }\n        return acc;\n        }, {});\n\n     ///Scales for circles ///\n    \n    let circleScale = d3.scaleLog().range([6, 14]).domain([1, d3.max(Object.values(branchFrequency))]);\n    let pathGroups = pathWrap.selectAll('.paths').data(pathData).join('g').classed('paths', true);\n    let pathBars = pathGroups.append('rect').classed('path-rect', true);\n    pathBars.attr('y', -8);\n\n    //////////\n    ///Selecting species\n    /////////\n    let pathAdd = pathGroups.append('g').classed(\"fas fa-search-plus\", true);\n    pathAdd.attr('transform', 'translate(15, 10)');\n    pathAdd.append('circle').attr('r', 7).attr('fill', '#fff');\n    pathAdd.append('text').text('+').attr('transform', 'translate(-5, 5)');\n    pathAdd.style('cursor', 'pointer');\n\n    pathAdd.on('click', (d, i, n)=>{\n\n        let notIt = d3.selectAll(n).filter((f, j)=> j != i).classed('selected-path', false);\n     \n        if(d3.select(n[i]).classed('selected-path')){\n            d3.select(n[i]).classed('selected-path', false);\n            pathSelected(null, notIt.data(), scales, moveMetric);\n        }else{\n            d3.select(n[i]).classed('selected-path', true);\n            pathSelected([d], notIt.data(), scales, moveMetric);\n        }\n    });\n\n    /////////\n    pathGroups.on('mouseover', function(d, i){\n        let treeNode  = d3.select('#sidebar').selectAll('.node');\n        let treeLinks  = d3.select('#sidebar').selectAll('.link');\n        treeNode.filter(f=> {\n            return d.map(m=> m.node).indexOf(f.data.node) > -1;\n        }).classed('hover', true);\n        treeLinks.filter(f=> d.map(m=> m.node).indexOf(f.data.node) > -1).classed('hover', true);\n        return d3.select(this).classed('hover', true);\n    }).on('mouseout', function(d, i){\n        let treeNode  = d3.select('#sidebar').selectAll('.node').classed('hover', false);\n        let treeLinks  = d3.select('#sidebar').selectAll('.link').classed('hover', false);\n        return d3.select(this).classed('hover', false);\n    });\n\n    let speciesTitle = pathGroups.append('text').text(d=> {\n       let string = d.filter(f=> f.leaf === true)[0].label;\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    });\n\n    speciesTitle.attr('x', 25).attr('y', 15);\n\n    let timelines = pathGroups.append('g').classed('time-line', true);\n    timelines.attr('transform', (d, i)=> 'translate(150, 0)');\n\n    let lines = timelines.append('line')\n    .attr('x1', 0)\n    .attr('x2', 1000)\n    .attr('y1', 15)\n    .attr('y2', 15);\n\n    let nodeGroups = timelines.selectAll('.node').data((d)=> {\n        return d}).join('g').attr('class', (d, i, n)=> {\n            return d3.select(n[n.length - 1]).data()[0].label + \" node\";\n        });\n   \n    nodeGroups.attr('transform', (d)=> {\n        let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n        let distance = (moveMetric === 'move') ? d.move : x(d.edgeMove);\n        return 'translate('+ distance +', 10)';});\n\n    nodeGroups.on('click', (d, i, n)=> {\n        if(nodeTooltipFlag){\n            nodeTooltipFlag = false;\n            d3.select(\"#branch-tooltip\").classed(\"hidden\", true);\n        }else{\n            nodeTooltipFlag = true;\n            d3.select(\"#branch-tooltip\")\n            .style(\"left\", (d3.event.pageX) + \"px\")\n            .style(\"top\", (d3.event.pageY - 28) + \"px\")\n            .select(\"#value\")\n            .text(d.node);\n            d3.select(\"#branch-tooltip\").classed(\"hidden\", false);\n\n            d3.select(\"#filter-by-node\").on('click', ()=> {\n                nodeFilter(d.node, scales);\n                nodeTooltipFlag = false;\n                d3.select(\"#branch-tooltip\").classed(\"hidden\", true);\n            });\n\n            d3.select(\"#select-by-node\").on('click', ()=> {\n                let data = getLatestData();\n                let test = pathGroups.filter(path => {\n                    return path.map(node => node.node).indexOf(d.node) > -1;\n                });\n                let notIt = pathGroups.filter(path => {\n                    return path.map(node => node.node).indexOf(d.node) === -1;\n                });\n\n                nodeTooltipFlag = false;\n                d3.select(\"#branch-tooltip\").classed(\"hidden\", true);\n                pathSelected(test.data(), notIt.data(), scales, moveMetric);\n            });\n        }\n    });\n\n    let circle = nodeGroups.append('circle').attr('cx', 0).attr('cy', 0).attr('r', d=> {\n        return circleScale(branchFrequency[d.node]);\n    }).attr('class', (d, i)=> 'node-'+d.node);\n\n    circle.on('mouseover', function(d, i){\n        let hovers = nodeGroups.filter(n=> n.node === d.node);\n        let treeNode  = d3.select('#sidebar').selectAll('.node');\n        let selectedBranch = treeNode.filter(f=> f.data.node === d.node).classed('selected-branch', true);\n        return hovers.classed('hover-branch', true);\n    }).on('mouseout', function(d, i){\n        let hovers = nodeGroups.filter(n=> n.node === d.node);\n        d3.selectAll('.selected-branch').classed('selected-branch', false);\n        return hovers.classed('hover-branch', false);\n    });\n\n    let speciesNodeLabel = nodeGroups.filter(f=> f.label != undefined).append('text').text(d=> {\n        let string = d.label.charAt(0).toUpperCase() + d.label.slice(1);\n        return string;\n    }).attr('x', 10).attr('y', 5);\n\n    return pathGroups;\n}\nexport function renderAttributes(attributeWrapper, data, scales, filterArray, collapsed){\n    let attributeHeight = (collapsed === 'true')? 20 : 45;\n    let predictedAttrGrps = attributeWrapper.selectAll('g').data((d, i)=> data[i]).join('g');\n    predictedAttrGrps.classed('predicated-attr-groups', true);\n    predictedAttrGrps.attr('transform', (d, i) => 'translate(0, '+(i * (attributeHeight + 5))+')');\n\n    let attrLabel = predictedAttrGrps.append('text').text(d=> d[d.length - 1].label);\n    attrLabel.classed('attribute-label', true);\n    attrLabel.attr('transform', 'translate(-15, 20)');\n\n    return predictedAttrGrps;\n}\nfunction collapsedPathGen(data){\n    data.map((p, i)=>{\n        let step = i === 0 ? 0 : 1;\n        let test = (p.realVal > data[i-step].realVal) ? 1 : 18;\n        p.change = test;\n    })\n}\nasync function continuousPaths(innerTimeline, moveMetric, collapsed){\n\n    innerTimeline.data().forEach(path => {\n        collapsedPathGen(path, moveMetric);\n    });\n\n    //THIS IS THE PATH GENERATOR FOR THE CONTINUOUS VARIABLES\n    let height = (collapsed === 'true')? 20 : 45;\n    var lineGen = d3.line()\n    .x(d=> {\n        let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n        let distance = (moveMetric === 'move') ? d.move : x(d.edgeMove);\n        return distance; })\n    .y(d=> {\n        let y = d.yScale;\n        y.range([height, 0]);\n        if(collapsed === 'true'){\n            return d.change;\n        }else{\n            return y(d.realVal);\n        }\n    });\n\n    let innerPaths = innerTimeline.append('path')\n    .attr(\"d\", lineGen)\n    .attr(\"class\", \"inner-line\")\n    .style('stroke', (d)=> d[0].color);\n\n    return innerPaths;\n    ///////////////////////////////////////////////////////////\n}\nexport function drawContAtt(predictedAttrGrps, moveMetric, collapsed){\n\n    let continuousAtt = predictedAttrGrps.filter(d=> {\n        return (d[d.length - 1] != undefined) ? d[d.length - 1].type === 'continuous' : d.type === 'continuous';\n    });\n\n    let attributeHeight = (collapsed === 'true') ? 20 : 45;\n\n    let innerTimeline = continuousAtt.append('g').classed('attribute-time-line', true);\n    /////DO NOT DELETE THIS! YOU NEED TO SEP CONT AND DICRETE ATTR. THIS DRAWS LINE FOR THE CONT/////\n    let innerPaths = continuousPaths(innerTimeline, moveMetric, collapsed);\n ////////\n    let attribRectCont = innerTimeline.append('rect').classed('attribute-rect', true);\n    attribRectCont.attr('height', attributeHeight);\n    let attributeNodesCont = innerTimeline.selectAll('g').data(d=> d).join('g').classed('attribute-node', true);\n\n    let innerBars = attributeNodesCont.append('g').classed('inner-bars', true);\n\n    let innerRect = innerBars.append('rect').classed('attribute-inner-bar', true);\n    innerRect.attr('height', attributeHeight);\n    innerBars.attr('transform', (d)=> {\n        let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n        let distance = (moveMetric === 'move') ? d.move : x(d.edgeMove);\n        return 'translate('+ distance +', 0)';});\n      \n    let rangeRect = innerBars.append('rect').classed('range-rect', true);\n    rangeRect.attr('width', 20).attr('height', (d, i)=> {\n        let y = d.yScale;\n        y.range([attributeHeight, 0]);\n        let range = d.leaf ? 0 : y(d.lowerCI95) - y(d.upperCI95);\n        let barHeight = (collapsed === 'true') ? 20 : range;\n        return barHeight;\n    });\n    rangeRect.attr('transform', (d, i)=> {\n        let y = d.yScale;\n        y.range([attributeHeight, 0]);\n        let move = (d.leaf || (collapsed === 'true')) ? 0 : y(d.upperCI95);\n        return 'translate(0, '+ move +')';\n    });\n    rangeRect.style('fill', (d)=> {\n        return d.colorScale(d.realVal);\n    });\n    rangeRect.attr('opacity', (d)=> {\n        return d.satScale(d.realVal);\n    });\n    if(collapsed != 'true'){\n        innerBars.append('rect').attr('width', 20).attr('height', 5)\n        .attr('transform', (d, i)=> {\n            let y = d.yScale;\n            y.range([attributeHeight, 0]);\n            return 'translate(0, '+ y(d.realVal) +')';})\n        .attr('fill', d=> d.color).classed('val-bar', true);\n    }\n\n    /////AXIS ON HOVER////\n    innerBars.on('mouseover', (d, i, n)=> {\n        let y = d.yScale;\n        y.range([0, attributeHeight]);\n        d3.select(n[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(5));\n        let tool = d3.select('#tooltip');\n        tool.transition()\n          .duration(200)\n          .style(\"opacity\", .9);\n        let f = d3.format(\".3f\");\n        tool.html('mean: '+f(d.realVal) +\"</br>\"+\"</br>\"+ 'upperCI: '+ f(d.upperCI95) +\"</br>\"+\"</br>\"+ 'lowerCI: '+ f(d.lowerCI95))\n          .style(\"left\", (d3.event.pageX) + \"px\")\n          .style(\"top\", (d3.event.pageY - 28) + \"px\");\n        tool.style('height', 'auto');\n       \n    }).on('mouseout', (d, i, n)=> {\n        d3.select(n[i]).select('g.y-axis')\n        d3.select(n[i]).select('g.y-axis').remove();\n        let tool = d3.select('#tooltip');\n        tool.transition()\n          .duration(500)\n          .style(\"opacity\", 0);\n    });\n\n    return attributeNodesCont;\n   \n}\nexport function findMaxState(states, offset){\n    let maxP = d3.max(states.map(v=> v.realVal));\n    let notMax = states.filter(f=> f.realVal != maxP);\n    let winState = states[states.map(m=> m.realVal).indexOf(maxP)]\n    winState.other = notMax;\n    winState.offset = offset;\n    return winState;\n}\n    //BEGIN TEST\nfunction drawLeaves(attWraps, groupBy){\n    //THIS IS HARD CODED AND SHOULD NOT BE\n\n    let numSpecies = 100;\n    let height = 40;\n    //CONTINUOUS \n    let leafWraps = attWraps.filter(f=> f.type === 'continuous').selectAll('g.observe-wrap-first.continuous').data(d=> {\n            let totalVal = attWraps.data().filter(f=> f.label === d.label).map(m=> m.data);\n            let totalArray = totalVal.flatMap(p=> p.flatMap(f=> f.paths[f.paths.length - 1].realVal));\n            let max = d3.max(totalArray);\n            let min = d3.min(totalArray);\n            let totalMean = d3.mean(totalArray);\n        \n            let x = d3.scaleLinear().domain([min, max]).range([0, 200])\n            let newVal = d.data.map((m, i)=> {\n                m.index = i;\n                return {'value': m.paths[m.paths.length - 1].realVal, 'x': x, 'min': min, 'max': max, 'species':m.species };\n            });\n            let groupMean = d3.mean(newVal.map(v=> v.value));\n            return [{'dotVals':newVal, 'x': x, 'totalMean': totalMean, 'groupMean':groupMean}];\n        }).join('g').classed('observe-wrap-first continuous', true);\n        \n        leafWraps.attr('transform', 'translate(850, 0)');\n        \n        let xAxis = leafWraps.append('g').classed('axis-x', true);\n        xAxis.attr('transform', 'translate(0, '+(height - 15)+')');\n        xAxis.each((d, i, nodes)=> {\n            d3.select(nodes[i]).call(d3.axisBottom(d.x).ticks(5));\n        });\n        \n        let totalMeanLine = leafWraps.append('rect').classed('line', true).attr('transform', (d, i)=> 'translate('+(d.x(d.totalMean)-1.5)+',0)')\n        .attr('height', (height - 15)).attr('width', 3).attr('fill', 'red').style('opacity', '0.4');\n        \n        let groupMeanLine = leafWraps.append('rect').classed('line', true).attr('transform', (d, i)=> 'translate('+(d.x(d.groupMean)-1.5)+',0)')\n        .attr('height', (height - 15)).attr('width', 3).attr('fill', 'gray').style('opacity', '0.4');\n        \n        let distCircGroupOut = leafWraps.append('g').attr('transform', 'translate(0, 20)');\n        let distcirclesOut = distCircGroupOut.selectAll('circle').data(d=> d.dotVals).join('circle');\n        distcirclesOut.attr('r', 4).attr('cx', (d, i)=> d.x(d.value)).style('opacity', '0.3');\n\n        //DISCRETE//\n        let leafWrapsD = attWraps.filter(f=> f.type === 'discrete').selectAll('g.observe-wrap-first.discrete').data(d=> {\n          return [d];\n        }).join('g').classed('observe-wrap-first discrete', true);\n\n        let rects = leafWrapsD.filter(f=> {\n            return f.label != groupBy;\n        }).selectAll('rect').data(d=> {\n            let groupedData = d3.groups(d.data.map(m=> m.paths[m.paths.length - 1]), d=> d.state);\n            groupedData.sort((a, b)=> b[1].length - a[1].length)\n            return groupedData;\n        }).join('rect').attr('height', 15).attr('width', (d, i, n)=>{\n            let scale = d3.scaleLinear().domain([0, d3.sum(d3.selectAll(n).data().map(m=> m[1].length))])\n            .range([5, 170]);\n            d.width = scale(d[1].length);\n            return scale(d[1].length);\n        });\n\n        rects.attr('x', (d, i, n)=> {\n            if(i === 0){ return 0}\n            else {\n                d3.selectAll(n).filter((f, j)=> j< i);\n                let move = d3.sum(d3.selectAll(n).filter((f, j)=> j< i).data().map(m=> m.width));\n                return move;}\n        }).attr('y', 12)\n\n        rects.attr('fill', d=> d[1][0].color);\n\n        rects.on('mouseover', (d, i, n)=> {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(200)\n              .style(\"opacity\", .9);\n            \n            tool.html(d[0] + \"</br>\" + d[1].length)\n              .style(\"left\", (d3.event.pageX + 10) + \"px\")\n              .style(\"top\", (d3.event.pageY + 20) + \"px\");\n\n              d3.selectAll(n).filter((f, j)=> j != i).attr('opacity', 0.3);\n          \n        }).on('mouseout', (s, i, n)=> {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(500)\n              .style(\"opacity\", 0);\n\n              d3.selectAll(n).filter((f, j)=> j != i).attr('opacity', 1)\n        })\n\n        leafWrapsD.attr('transform', 'translate(850, 0)');\n\n        let ratio = leafWrapsD.filter(f=> f.label === groupBy)\n            .selectAll('text').data(d=> [d]).join('text').text(d=> {\n                let paths = d.data[d.data.length - 1].paths;\n                return `${paths[paths.length - 1].state}: ${d.data.length} / ${numSpecies}`\n            });\n        ratio.style('text-anchor', 'middle')\n        ratio.style('font-size', '12px')\n        ratio.attr('x', 90).attr('y', 25)\n        \n    }\nexport function drawGroups(stateBins, scales){\n    \n    let groupedBool = d3.select('#show-drop-div-group').attr('value', 'grouped');\n    \n    let height = 40;\n    let selectedTool = d3.select('#selected');\n    selectedTool.selectAll('*').remove();\n \n    let main = d3.select('#main');\n    main.style('padding-top', 0);\n\n    d3.select('#toolbar').append('text').text(stateBins[0].field)\n\n    let splitOnArray = [{'field':'None'}].concat(scales.filter(f=> (f.field != stateBins[0].field) && f.type === 'discrete'));\n    let dropOptions = dropDown(d3.select('#toolbar'), splitOnArray, 'Split On','show-drop-div-group');\n\n    ////THIS SPLITS THE DATA////\n    dropOptions.on('click', (d, i, n)=> {\n        d3.select('#toolbar').append('text').text(d.field);\n        \n        if(d.type === 'discrete'){\n            let newBins = stateBins.map(state=> {\n                let newBinData = d.scales.map(sc=> {\n                    let field = sc.field;\n                    let name = sc.scaleName;\n                    let newData = state.data.filter(pa=> {\n                        let leaf = pa.filter(le=> le.leaf === true)[0];\n                        return leaf.attributes[field].winState === name;\n                    });\n                    return {'field': field, 'state': name, 'data': newData }\n                });\n                state.data = newBinData;\n                return state;\n            });\n\n            //////RENDERING NEED TO SEPARATE OUT/////\n           \n           let main = d3.select('#main');\n           main.selectAll('*').remove();\n           main.style('padding-top', '40px');\n           let firstGroupDiv = main.selectAll('div.first-group').data(newBins).join('div').classed('first-group', true);\n           \n           let firstGroupSvg = firstGroupDiv.append('svg');\n           firstGroupSvg.attr('height', s=> (s.data.length*270));\n           let firstGroup = firstGroupSvg.append('g');\n          \n           let firstLabel = firstGroup.append('text').text(f=> f.state).attr('transform', 'translate(10, 10)');\n\n           let secondGroup = firstGroup.selectAll('g.second-group').data(g=> {\n               let newGroups = g.data.map((m)=>{\n                   let newM = {};\n                   newM.first = [g.field, g.state];\n                   newM.second = [m.field, m.state];\n                   newM.data = m.data\n                   newM.leaves = m.data.flatMap(path=> path.filter(f=> f.leaf === true));\n                   return newM\n               });\n               return newGroups}).join('g').classed('second-group', true);\n\n           secondGroup = secondGroup.filter(f=> f.data.length > 0);\n           secondGroup.attr('transform', (s, i)=> 'translate(30,'+(20 + (i * 270))+')');\n\n           secondGroup.each((s, i, n)=> {\n            let branchBar = drawBranchPointDistribution(s.data, d3.select(n[i]));\n            branchBar.select('rect').attr('x', -80).attr('fill','gray');\n            branchBar.selectAll('.branch-points').selectAll('circle').attr('fill', 'rgba(255, 255, 255, 0.3)');\n            \n            branchBar.select('.leaf-label').append('text').text((t, i) =>': '+ t.data.length).attr('transform', 'translate(45, 0)');\n            branchBar.selectAll('text').style('font-size', '11.5px').style('fill', '#fff');\n    \n            branchBar.select('line').attr('stroke', '#fff');\n\n            let groupLabels = d3.select(n[i]).append('g');\n\n            //groupLabels.\n            let pathAdd = groupLabels.append('g').classed(\"fas fa-search-plus\", true);\n            pathAdd.attr('transform', 'translate(-10, 15)');\n            pathAdd.append('circle').attr('r', 7).attr('fill', '#fff');\n            pathAdd.append('text').text('+').attr('transform', 'translate(-5, 3)').attr('fill', 'gray');\n        \n            pathAdd.style('cursor', 'pointer');\n\n            pathAdd.on('click', ()=> {\n                let other = d3.selectAll(n).filter((f,j)=> j != i);\n                renderComparison(s, other.data(), d3.select('#selected'), scales);\n            });\n\n            let stateLabel = groupLabels.append('text').text((s, i)=> s.second[1]);\n            stateLabel.attr('transform', (d, i)=> 'translate(3, 20)');\n            stateLabel.attr('fill', '#fff');\n           });\n\n           let innerGroup = secondGroup.filter(f=> f.data.length > 0).append('g').classed('inner-wrap', true);\n           innerGroup.attr('transform', (d,i)=> 'translate(110, 0)');\n\n       \n           let attWraps = innerGroup.selectAll('.att-wrapper').data((d)=> {\n               let atts = formatAttributeData(d.data, scales, null);\n             \n               let attDataComb = atts[0].map((att, i)=> {\n                  \n                   let species = d.data[0].filter(f=> f.leaf === true)[0].label;\n\n                   att[att.length - 1].offset = 0;\n                   let attribute = {'label': att[att.length-1].label, 'type':att[att.length-1].type, 'data': [{'species': species, 'paths': att}]}\n                   for(let index = 1; index < atts.length; index++ ){\n                       let species = d.data[index].filter(f=> f.leaf === true)[0].label;\n                       let last = atts[index][i].length - 1\n                       atts[index][i][last].offset = (index * 8);\n                       attribute.data.push({'species': species, 'paths': atts[index][i]});\n                   }\n                   \n                   return attribute;\n               });\n\n              let mappedDis = attDataComb.map(dis=> {\n                  dis.data = dis.data.map((spec, i)=> {\n                      spec.paths = spec.paths.map(m=> {\n                            if(dis.type === 'discrete'){\n                                let offset = 5 * i;\n                                let maxProb = m.states? {'realVal': 1.0, 'state': m.winState, 'color':m.color, 'edgeMove': m.edgeMove, 'offset':m.offset, 'leaf': true} : findMaxState(m, offset); \n                                return maxProb;\n                            }else{\n                                return m;\n                            }\n                        });\n                   return spec;\n                  });\n        \n                  dis.leaves = dis.data.flatMap(f=> f.paths.filter(p=> p.leaf === true));\n                  return dis;\n              });\n              return mappedDis;\n           }).join('g').classed('att-wrapper', true);\n\n           let innerWrapRect = attWraps.append('rect').attr('width', 800);\n\n            innerWrapRect.attr('height', height);\n            innerWrapRect.style('fill', '#fff');\n            innerWrapRect.style('stroke', 'gray');\n\n            attWraps.attr('transform', (d, i)=> 'translate(0,'+((i * (height+5))+ 30)+')');\n            wrappers.attr('transform', (d, i)=> 'translate(60,'+(i * (5 * (height+15))+ 50)+')');\n            svg.attr('height', (wrappers.data().length * (5 * (height+15))+ 50));\n\n            let labels = attWraps.append('text')\n            .text(d=> d.label)\n            .style('text-anchor', 'end')\n            .style('font-size', 11)\n            labels.attr('transform', 'translate(-5,'+(50/2)+')');\n\n////WORKING ON STATE SHIFT VIEW///////\n            let shiftWraps = attWraps.filter(f=> f.type === 'discrete').selectAll('g.shift-wrap').data(d=> {\n       \n                let test = d.data.flatMap(m=> m.paths.filter((f, i)=> {\n                    if(i===0) return (i === 0);\n                    if(i > 0) return (m.paths[i-1].state != f.state)\n                    if(i < m.paths.length - 1) return (m.paths[i+1].state != f.state);\n                }));\n             \n                return [test];\n            }).join('g').classed('shift-wrap', true);\n\n            shiftWraps.attr('transform', 'translate(850, 0)');\n\n            let xAxisShift = shiftWraps.append('g').classed('axis-x', true);\n            xAxisShift.attr('transform', 'translate(0, '+(height - 15)+')');\n            xAxisShift.each((d, i, nodes)=> {\n                let x = d3.scaleLinear().domain([0, 1]).range([0, 200]);\n                d3.select(nodes[i]).call(d3.axisBottom(x).ticks(5));\n            });\n\n            let circGroupShift = shiftWraps.append('g').attr('transform', 'translate(0, 20)');\n\n            let shiftCircles = circGroupShift.selectAll('circle.shift').data(d=> d).join('circle').classed('shift', true);\n            shiftCircles.attr('r', 4).attr('cx', (d, i)=> {\n                let x = d3.scaleLinear().domain([0,1]).range([0, 200]);\n                return x(d.edgeMove)\n            });\n            shiftCircles.attr('fill', d=> d.color).style('opacity', 0.4);\n\n//////DRAW OBSERVED DISTRIBUTIONS/////\n            let leafWraps = attWraps.filter(f=> f.type === 'continuous').selectAll('g.observe-wrap').data(d=> {\n                let totalVal = attWraps.data().filter(f=> f.label === d.label).flatMap(m=> m.leaves.map(l=> l.realVal));\n                let max = d3.max(totalVal);\n                let min = d3.min(totalVal);\n                let totalMean = d3.mean(totalVal);\n\n                let x = d3.scaleLinear().domain([min, max]).range([0, 200])\n                let newVal = d.leaves.map((m, i)=> {\n                    m.index = i;\n                    return {'value': m.realVal, 'x': x, 'min': min, 'max': max, 'species':m.species };\n                });\n                let groupMean = d3.mean(newVal.map(v=> v.value));\n                return [{'dotVals':newVal, 'x': x, 'totalMean': totalMean, 'groupMean':groupMean}];\n            }).join('g').classed('observe-wrap', true);\n\n            leafWraps.attr('transform', 'translate(850, 0)');\n\n            let xAxis = leafWraps.append('g').classed('axis-x', true);\n            xAxis.attr('transform', 'translate(0, '+(height - 15)+')');\n            xAxis.each((d, i, nodes)=> {\n                d3.select(nodes[i]).call(d3.axisBottom(d.x).ticks(5));\n            });\n\n            let totalMeanLine = leafWraps.append('rect').classed('line', true).attr('transform', (d, i)=> 'translate('+(d.x(d.totalMean)-1.5)+',0)')\n            .attr('height', (height - 15)).attr('width', 3).attr('fill', 'red').style('opacity', '0.4');\n\n            let groupMeanLine = leafWraps.append('rect').classed('line', true).attr('transform', (d, i)=> 'translate('+(d.x(d.groupMean)-1.5)+',0)')\n            .attr('height', (height - 15)).attr('width', 3).attr('fill', 'gray').style('opacity', '0.4');\n\n            let distCircGroup = leafWraps.append('g').attr('transform', 'translate(0, 20)');\n            let distcircles = distCircGroup.selectAll('circle').data(d=> d.dotVals).join('circle');\n            distcircles.attr('r', 4).attr('cx', (d, i)=> d.x(d.value)).style('opacity', '0.3');\n\n            distcircles.on('mouseover', (d, i, n)=> {\n\n                let tool = d3.select('#tooltip');\n                tool.transition()\n                  .duration(200)\n                  .style(\"opacity\", .9);\n                let f = d3.format(\".3f\");\n                tool.html(d.species)\n                  .style(\"left\", (d3.event.pageX + 10) + \"px\")\n                  .style(\"top\", (d3.event.pageY - 28) + \"px\");\n           \n                let leafNodes = d3.select('#sidebar').selectAll('.node--leaf').filter(f=> f.data.label === d.species);\n                leafNodes.classed('selected', true);\n\n            }).on('mouseout', (d, i, n)=> {\n                d3.select(n[i]).classed('selected', false);\n\n                distcircles.classed('selected', false).style('opacity', 0.3);\n                let tool = d3.select('#tooltip');\n                tool.transition()\n                  .duration(500)\n                  .style(\"opacity\", 0);\n\n                let leafNodes = d3.select('#sidebar').selectAll('.node--leaf').filter(f=> f.data.label === d.species);\n                leafNodes.classed('selected', false);\n            });\n\n\n            ////DRAW SPECIES GROUPS IN THE ATTRIBUTES\n\n            let speciesGrp = attWraps.selectAll('g.species').data(d=> {\n                d.data = d.data.map(m=> {\n                    m.type = d.type;\n                    return m;\n                });\n                return d.data;\n            }).join('g').classed('species', true);\n\n            let lineGenD = d3.line()\n                .x(d=> {\n                    let x = d3.scaleLinear().domain([0, 1]).range([0, 800]);\n                    let distance = d.edgeMove;\n                    return x(distance);\n                    })\n                .y(d=> {\n                    let y = d3.scaleLinear().domain([0, 1]).range([height-2, 1]);\n                    return y(d.realVal);\n                });\n\n            let lineGenC = d3.line()\n                .x(d=> {\n                    let x = d3.scaleLinear().domain([0, 1]).range([0, 800]);\n                    let distance = d.edgeMove;\n                    return x(distance);\n                })\n                .y(d=> {\n                    let y = d.yScale;\n                    y.range([height-2, 1]);\n                    return y(d.realVal) + 2;\n                });\n\n            let innerStatePaths = speciesGrp.append('path')\n            .attr(\"d\", d=> {\n                    return (d.type === 'discrete') ? lineGenD(d.paths) : lineGenC(d.paths);\n                })\n            .attr(\"class\", (d, i)=> {\n                    return d.species + \" inner-line\"})\n            .style('stroke-width', 0.7)\n            .style('fill', 'none')\n            .style('stroke', 'gray');\n\n            innerStatePaths.on('mouseover', (d, i, n)=> {\n               \n                d3.select(n[i]).classed('selected', true);\n                distcircles.filter(f=> f.species === d.species).classed('selected', true).style('opacity', 1);\n\n                let tool = d3.select('#tooltip');\n                tool.transition()\n                  .duration(200)\n                  .style(\"opacity\", .9);\n                let f = d3.format(\".3f\");\n                tool.html(d.species)\n                  .style(\"left\", (d3.event.pageX + 10) + \"px\")\n                  .style(\"top\", (d3.event.pageY - 28) + \"px\");\n\n                let leafNodes = d3.select('#sidebar').selectAll('.node--leaf').filter(f=> f.data.label === d.species);\n                leafNodes.classed('selected', true);\n                \n            }).on('mouseout', (d, i, n)=> {\n                d3.select(n[i]).classed('selected', false);\n\n                distcircles.classed('selected', false).style('opacity', 0.3);\n                let tool = d3.select('#tooltip');\n                tool.transition()\n                  .duration(500)\n                  .style(\"opacity\", 0);\n\n                let leafNodes = d3.select('#sidebar').selectAll('.node--leaf').filter(f=> f.data.label === d.species);\n                leafNodes.classed('selected', false);\n            });\n\n            let disGroup = speciesGrp.filter(sp=> {\n            return sp.type === 'discrete';\n            });\n\n            let branchGrpDis = disGroup.selectAll('.branch').data(d=>d.paths).join('g').classed('branch', true);\n\n            branchGrpDis.attr('transform', (d)=> {\n                let x = d3.scaleLinear().domain([0, 1]).range([0, 800]);\n                    let distance = x(d.edgeMove);\n                    return 'translate('+distance+', 0)';\n            });\n\n            let bCirc = branchGrpDis.append('circle').attr('r', 5).attr('cy', (d, i)=> {\n                let y = d3.scaleLinear().domain([0, 1]).range([height - 5, 2]);\n                return y(d.realVal);\n            }).attr('cx', 5);\n\n            bCirc.classed('win-state', true);\n\n            bCirc.attr('fill', (d, i, n)=> {\n                if(i === 0){\n                    return d.color;\n                }else if(i === n.length - 1){\n                    if(d.state === d3.select(n[i-1]).data()[0].state){\n                        return 'rgba(189, 195, 199, 0.3)';\n                    }else{\n                        d.shift = true;\n                        return d.color;\n                    }\n                }else{\n                    if(d.state === d3.select(n[i+1]).data()[0].state || d.state === d3.select(n[i-1]).data()[0].state){\n                        return 'rgba(189, 195, 199, 0.3)';\n                    }else{\n                        d.shift = true;\n                        return d.color;\n                    }\n                }\n            });\n\n\n    let otherCirc = branchGrpDis.filter(f=> f.leaf != true).selectAll('.other').data(d=> d.other).join('circle').classed('other', true);\n    \n    otherCirc.attr('r', 4).attr('cx', 5).attr('cy', (c, i)=> {\n         let y = d3.scaleLinear().domain([1, 0]);\n         y.range([0, (height-5)]);\n             return y(c.realVal);\n         }).attr('fill', 'rgba(189, 195, 199, 0.1)');\n\n    otherCirc.on(\"mouseover\", function(d) {\n         let tool = d3.select('#tooltip');\n         tool.transition()\n           .duration(200)\n           .style(\"opacity\", .9);\n         let f = d3.format(\".3f\");\n         tool.html(d.state + \": \" + f(d.realVal))\n           .style(\"left\", (d3.event.pageX + 10) + \"px\")\n           .style(\"top\", (d3.event.pageY - 28) + \"px\");\n         })\n       .on(\"mouseout\", function(d) {\n         let tool = d3.select('#tooltip');\n         tool.transition()\n           .duration(500)\n           .style(\"opacity\", 0);\n         });\n\n    bCirc.on(\"mouseover\", function(d) {\n         let tool = d3.select('#tooltip');\n         tool.transition()\n           .duration(200)\n           .style(\"opacity\", .9);\n         let f = d3.format(\".3f\");\n         tool.html(d.state + \": \" + f(d.realVal))\n           .style(\"left\", (d3.event.pageX + 10) + \"px\")\n           .style(\"top\", (d3.event.pageY - 28) + \"px\");\n         })\n       .on(\"mouseout\", function(d) {\n         let tool = d3.select('#tooltip');\n         tool.transition()\n           .duration(500)\n           .style(\"opacity\", 0);\n         });\n     \n     /////AXIS ON HOVER////\n    branchGrpDis.on('mouseover', (d, i, n)=> {\n         let y = d3.scaleLinear().domain([1, 0]);\n         y.range([0, (height-5)]);\n         svg.selectAll('path.inner-line.'+ d.species).attr('stroke', 'red');\n         svg.selectAll('path.inner-line.'+ d.species).classed('selected', true);\n         d3.select(n[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(3));\n         d3.select(n[i]).selectAll('.other').style('opacity', 0.7).attr('fill', (d)=> d.color);\n         d3.select(n[i]).selectAll('.win-state').style('opacity', 0.7).attr('fill', (d)=> d.color);\n\n     }).on('mouseout', (d, i, n)=> {\n         d3.select(n[i]).select('g.y-axis')\n         d3.select(n[i]).select('g.y-axis').remove();\n         d3.selectAll('path.inner-line.'+ d.species).attr('stroke', 'gray');\n         d3.selectAll('path.inner-line.'+ d.species).classed('selected', false);\n         d3.selectAll('.other').attr('fill', 'rgba(189, 195, 199, 0.1)');\n         d3.select(n[i]).selectAll('.win-state').filter(w=> w.shift != true).attr('fill', 'rgba(189, 195, 199, 0.3)');\n     });\n\n    let conGroup = speciesGrp.filter(sp=> {\n         return sp.type === 'continuous';\n     });\n\n    let branchGrpCon = conGroup.selectAll('.branch').data(d=>d.paths).join('g').classed('branch', true);\n\n    branchGrpCon.attr('transform', (d)=> {\n      let x = d3.scaleLinear().domain([0, 1]).range([0, 800]);\n          let distance = x(d.edgeMove);\n          return 'translate('+distance+', 0)';\n      });\n\n      /////AXIS ON HOVER////\n    branchGrpCon.on('mouseover', (d, i, n)=> {\n         let y = d.yScale;\n         y.range([0, (height-5)]);\n         svg.selectAll('path.inner-line.'+ d.species).attr('stroke', 'red');\n         svg.selectAll('path.inner-line.'+ d.species).classed('selected', true);\n         d3.select(n[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(3));\n         d3.select(n[i]).selectAll('.other').style('opacity', 0.7);\n     }).on('mouseout', (d, i, n)=> {\n         d3.select(n[i]).select('g.y-axis')\n         d3.select(n[i]).select('g.y-axis').remove();\n         d3.selectAll('path.inner-line.'+ d.species).attr('stroke', 'gray');\n         d3.selectAll('path.inner-line.'+ d.species).classed('selected', false);\n         d3.selectAll('.other').style('opacity', 0.1);\n     });\n\n     let MeanRect = branchGrpCon.append('rect');\n     MeanRect.attr('width', 10).attr('height', 3);\n     MeanRect.attr('y', (d, i) => {\n         let scale = scales.filter(s=> s.field === d.label)[0];\n         let y = d3.scaleLinear().domain([scale.min, scale.max]).range([height, 0])\n         return y(d.realVal);\n     });\n\n     let confiBars = branchGrpCon.filter(f=> f.leaf != true).append('rect');\n     confiBars.attr('width', 10).attr('height', (d, i)=> {\n         let scale = scales.filter(s=> s.field === d.label)[0];\n         let y = d3.scaleLinear().domain([scale.min, scale.max]).range([height, 0]);\n         return y(d.lowerCI95) - y(d.upperCI95);\n     });\n\n     confiBars.attr('y', (d, i)=> {\n         let scale = scales.filter(s=> s.field === d.label)[0];\n         let y = d3.scaleLinear().domain([scale.min, scale.max]).range([height, 0]);\n         return y(d.upperCI95);\n     });\n     confiBars.style('opacity', 0.1);\n           \n           //drawGroups(stateBins, calculatedScales);\n    }else{\n            console.error('THIS HAS TO BE DISCRETE');\n        }\n        selectedTool.select('#show-drop-div-group').classed('show', false);\n    });\n    /////END SPLIT VIEW//////\n    let svgTest = main.select('#main-path-view');\n    let svg = svgTest.empty() ? main.append('svg').attr('id', 'main-path-view') : svgTest;\n    svg.selectAll('*').remove();\n\n    svg.attr('height', (stateBins.length * (height + 20)));\n    svg.append('g').attr('transform', 'translate(500, 40)').append('text').text(stateBins[0].field)\n\n    let wrappers = svg.selectAll('.grouped').data(stateBins).join('g').classed('grouped', true);\n    wrappers.each((d, i, n)=> {\n        let branchBar = drawBranchPointDistribution(d.data, d3.select(n[i]));\n        branchBar.select('rect').attr('x', -80).attr('fill','gray');\n        branchBar.selectAll('.branch-points').selectAll('circle').attr('fill', 'rgba(255, 255, 255, 0.3)');\n        \n        branchBar.select('.leaf-label').append('text').text((d, i) =>': '+ d.data.length).attr('transform', 'translate(45, 0)');\n        branchBar.selectAll('text').style('font-size', '11.5px').style('fill', '#fff');\n\n        branchBar.select('line').attr('stroke', '#fff');\n    });\n\n    let groupLabels = wrappers.append('g');\n   \n\n     //groupLabels.\n     let pathAdd = groupLabels.append('g').classed(\"fas fa-search-plus\", true);\n     pathAdd.attr('transform', 'translate(20, -5)');\n     pathAdd.append('circle').attr('r', 7).attr('fill', '#fff');\n     pathAdd.append('text').text('+').attr('transform', 'translate(5, 3)').attr('fill', 'gray');\n \n     pathAdd.style('cursor', 'pointer');\n\n     pathAdd.on('click', (d, i, n)=> {\n         let other = d3.selectAll(n).filter((f,j)=> j != i);\n         renderComparison(d, other.data(), d3.select('#selected'), scales);\n     });\n\n     groupLabels.append('text').text((d, i)=> d.state);\n     groupLabels.attr('transform', (d, i)=> 'translate(40, 16)');\n     groupLabels.style('text-anchor', 'end');\n     groupLabels.attr('fill', '#fff');\n\n    let innerGroup = wrappers.append('g').classed('inner-wrap', true);\n    innerGroup.attr('transform', (d,i)=> 'translate(110, 0)');\n\n    let attWraps = innerGroup.selectAll('.att-wrapper').data((d, i)=> {\n        let atts = formatAttributeData(d.data, scales, null);\n        let attDataComb = atts[0].map((att, i)=> {\n            let species = d.data[0].filter(f=> f.leaf === true)[0].label;\n            att[att.length - 1].offset = 0;\n            let attribute = {'label': att[att.length-1].label, 'type':att[att.length-1].type, 'data': [{'species': species, 'paths': att}]}\n            for(let index = 1; index < atts.length; index++ ){\n                let species = d.data[index].filter(f=> f.leaf === true)[0].label;\n                let last = atts[index][i].length - 1;\n                atts[index][i][last].offset = (index * 8);\n                attribute.data.push({'species': species, 'paths': atts[index][i]})\n            }\n            return attribute;\n        });\n\n       let mappedDis = attDataComb.map(dis=> {\n           dis.data = dis.data.map((spec, i)=> {\n               spec.paths = spec.paths.map(m=> {\n                if(dis.type === 'discrete'){\n                    let offset = 5 * i;\n                    let maxProb = m.states? {'realVal': 1.0, 'state': m.winState, 'color':m.color, 'edgeMove': m.edgeMove, 'offset':m.offset, 'leaf': true} : findMaxState(m, offset); \n                    return maxProb;\n                }else{\n                    return m;\n                }\n            });\n            return spec;\n           });\n           return dis;\n       });\n       return mappedDis;\n    }).join('g').classed('att-wrapper', true);\n\n    let innerWrapRect = attWraps.append('rect').attr('width', 800);\n    innerWrapRect.attr('height', height);\n    innerWrapRect.style('fill', '#fff');\n    innerWrapRect.style('stroke', 'gray');\n\n    attWraps.attr('transform', (d, i)=> 'translate(0,'+((i * (height+5))+ 30)+')');\n    wrappers.attr('transform', (d, i)=> 'translate(60,'+(i * (5 * (height+15))+ 50)+')');\n    \n    svg.attr('height', (wrappers.data().length * (5 * (height+15))+ 50));\n\n       //END EXPERIMENT\n    drawLeaves(attWraps, stateBins[0].field);\n\n    let labels = attWraps.append('text')\n    .text(d=> d.label)\n    .style('text-anchor', 'end')\n    .style('font-size', 11)\n    labels.attr('transform', 'translate(-5,'+(50/2)+')');\n\n    let speciesGrp = attWraps.selectAll('g.species').data(d=> {\n        d.data = d.data.map(m=> {\n            m.type = d.type;\n            return m;\n        });\n        return d.data;\n    }).join('g').classed('species', true);\n\n    let lineGenD = d3.line()\n       .x(d=> {\n           let x = d3.scaleLinear().domain([0, 1]).range([0, 800]);\n           let distance = d.edgeMove;\n           return x(distance);\n        })\n       .y(d=> {\n           let y = d3.scaleLinear().domain([0, 1]).range([height-2, 1]);\n           return y(d.realVal);\n       });\n\n       let lineGenC = d3.line()\n       .x(d=> {\n           let x = d3.scaleLinear().domain([0, 1]).range([0, 800]);\n           let distance = d.edgeMove;\n           return x(distance);\n        })\n       .y(d=> {\n           let y = d.yScale;\n           y.range([height-2, 1]);\n           return y(d.realVal) + 2;\n       });\n\n       let innerStatePaths = speciesGrp.append('path')\n       .attr(\"d\", d=> {\n            return (d.type === 'discrete') ? lineGenD(d.paths) : lineGenC(d.paths);\n        })\n       .attr(\"class\", (d, i)=> {\n            return d.species + \" inner-line\"})\n       .style('stroke-width', 0.7)\n       .style('fill', 'none')\n       .style('stroke', 'gray');\n\n       innerStatePaths.on('mouseover', (d, i, n)=> {\n        d3.select(n[i]).classed('selected', true);\n    }).on('mouseout', (d, i, n)=> {\n         d3.select(n[i]).classed('selected', false);\n    });\n\n    let disGroup = speciesGrp.filter(sp=> {\n     return sp.type === 'discrete';\n     });\n\n    let branchGrpDis = disGroup.selectAll('.branch').data(d=>d.paths).join('g').classed('branch', true);\n\n    branchGrpDis.attr('transform', (d)=> {\n        let x = d3.scaleLinear().domain([0, 1]).range([0, 800]);\n            let distance = x(d.edgeMove);\n            return 'translate('+distance+', 0)';\n     });\n\n    let bCirc = branchGrpDis.append('circle').attr('r', 5).attr('cy', (d, i)=> {\n         let y = d3.scaleLinear().domain([0, 1]).range([height - 5, 2]);\n         //return y(d.realVal) + d.offset;\n         return y(d.realVal);\n     }).attr('cx', 5);\n\n     bCirc.classed('win-state', true);\n\n     bCirc.attr('fill', (d, i, n)=> {\n        if(i === 0 || i === n.length - 1){\n            return d.color;\n            /*\n        }else if(i === n.length - 1){\n            if(d.state === d3.select(n[i-1]).data()[0].state){\n                return 'rgba(189, 195, 199, 0.3)';\n            }else{\n                d.shift = true;\n                return d.color;\n            }*/\n        }else{\n            if(d.state === d3.select(n[i+1]).data()[0].state || d.state === d3.select(n[i-1]).data()[0].state){\n                return 'rgba(189, 195, 199, 0.3)';\n            }else{\n                d.shift = true;\n                return d.color;\n            }\n        }\n     });\n\n    let otherCirc = branchGrpDis.filter(f=> f.leaf != true).selectAll('.other').data(d=> d.other).join('circle').classed('other', true);\n    \n    otherCirc.attr('r', 4).attr('cx', 5).attr('cy', (c, i)=> {\n         let y = d3.scaleLinear().domain([1, 0]);\n         y.range([0, (height-5)]);\n             return y(c.realVal);\n         }).attr('fill', 'rgba(189, 195, 199, 0.1)');\n\n    otherCirc.on(\"mouseover\", function(d) {\n         let tool = d3.select('#tooltip');\n         tool.transition()\n           .duration(200)\n           .style(\"opacity\", .9);\n         let f = d3.format(\".3f\");\n         tool.html(d.state + \": \" + f(d.realVal))\n           .style(\"left\", (d3.event.pageX + 10) + \"px\")\n           .style(\"top\", (d3.event.pageY - 28) + \"px\");\n         })\n       .on(\"mouseout\", function(d) {\n         let tool = d3.select('#tooltip');\n         tool.transition()\n           .duration(500)\n           .style(\"opacity\", 0);\n         });\n\n    bCirc.on(\"mouseover\", function(d) {\n         let tool = d3.select('#tooltip');\n         tool.transition()\n           .duration(200)\n           .style(\"opacity\", .9);\n         let f = d3.format(\".3f\");\n         tool.html(d.state + \": \" + f(d.realVal))\n           .style(\"left\", (d3.event.pageX + 10) + \"px\")\n           .style(\"top\", (d3.event.pageY - 28) + \"px\");\n         })\n       .on(\"mouseout\", function(d) {\n         let tool = d3.select('#tooltip');\n         tool.transition()\n           .duration(500)\n           .style(\"opacity\", 0);\n         });\n     \n     /////AXIS ON HOVER////\n    branchGrpDis.on('mouseover', (d, i, n)=> {\n         let y = d3.scaleLinear().domain([1, 0]);\n         y.range([0, (height-5)]);\n         svg.selectAll('path.inner-line.'+ d.species).attr('stroke', 'red');\n         svg.selectAll('path.inner-line.'+ d.species).classed('selected', true);\n         d3.select(n[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(3));\n         d3.select(n[i]).selectAll('.other').style('opacity', 0.7).attr('fill', (d)=> d.color);\n         d3.select(n[i]).selectAll('.win-state').style('opacity', 0.7).attr('fill', (d)=> d.color);\n\n     }).on('mouseout', (d, i, n)=> {\n         d3.select(n[i]).select('g.y-axis')\n         d3.select(n[i]).select('g.y-axis').remove();\n         d3.selectAll('path.inner-line.'+ d.species).attr('stroke', 'gray');\n         d3.selectAll('path.inner-line.'+ d.species).classed('selected', false);\n         d3.selectAll('.other').attr('fill', 'rgba(189, 195, 199, 0.1)');\n         d3.select(n[i]).selectAll('.win-state').filter(w=> w.shift != true).attr('fill', 'rgba(189, 195, 199, 0.3)');\n     });\n\n    let conGroup = speciesGrp.filter(sp=> {\n         return sp.type === 'continuous';\n     });\n\n    let branchGrpCon = conGroup.selectAll('.branch').data(d=>d.paths).join('g').classed('branch', true);\n\n    branchGrpCon.attr('transform', (d)=> {\n      let x = d3.scaleLinear().domain([0, 1]).range([0, 800]);\n          let distance = x(d.edgeMove);\n          return 'translate('+distance+', 0)';\n      });\n\n      /////AXIS ON HOVER////\n     branchGrpCon.on('mouseover', (d, i, n)=> {\n         let y = d.yScale;\n         y.range([0, (height-5)]);\n         svg.selectAll('path.inner-line.'+ d.species).attr('stroke', 'red');\n         svg.selectAll('path.inner-line.'+ d.species).classed('selected', true);\n         d3.select(n[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(3));\n         d3.select(n[i]).selectAll('.other').style('opacity', 0.7);\n\n     }).on('mouseout', (d, i, n)=> {\n         d3.select(n[i]).select('g.y-axis')\n         d3.select(n[i]).select('g.y-axis').remove();\n         d3.selectAll('path.inner-line.'+ d.species).attr('stroke', 'gray');\n         d3.selectAll('path.inner-line.'+ d.species).classed('selected', false);\n         d3.selectAll('.other').style('opacity', 0.1);\n     });\n\n     let MeanRect = branchGrpCon.append('rect');\n     MeanRect.attr('width', 10).attr('height', 3);\n     MeanRect.attr('y', (d, i) => {\n         let scale = scales.filter(s=> s.field === d.label)[0];\n         let y = d3.scaleLinear().domain([scale.min, scale.max]).range([height, 0])\n         return y(d.realVal);\n     });\n\n     let confiBars = branchGrpCon.filter(f=> f.leaf != true).append('rect');\n     confiBars.attr('width', 10).attr('height', (d, i)=> {\n         let scale = scales.filter(s=> s.field === d.label)[0];\n         let y = d3.scaleLinear().domain([scale.min, scale.max]).range([height, 0]);\n         return y(d.lowerCI95) - y(d.upperCI95);\n     });\n\n     confiBars.attr('y', (d, i)=> {\n         let scale = scales.filter(s=> s.field === d.label)[0];\n         let y = d3.scaleLinear().domain([scale.min, scale.max]).range([height, 0]);\n         return y(d.upperCI95);\n     })\n     confiBars.style('opacity', 0.1);\n\n     /////HIGHLIGHTING NODES IN A TREE ON HOVER//////\n     d3.selectAll('.att-wrapper').selectAll('.branch').on('mouseover', (d, i, n)=> {\n         let treeNode  = d3.select('#sidebar').selectAll('.node');\n        treeNode.filter(f=> {\n            return d.node === f.data.node;\n        }).classed('selected', true);\n      \n    }).on('mouseout', (d, i, n)=> {\n       \n        let treeNode  = d3.select('#sidebar').selectAll('.node');\n\n        treeNode.filter(f=> {\n            return d.node === f.data.node;\n        }).classed('selected', false);\n    })\n     \n}\nexport function drawDiscreteAtt(predictedAttrGrps, moveMetric, collapsed, bars){\n\n    let discreteAtt = predictedAttrGrps.filter(d=> {\n        return d[d.length - 1].type === 'discrete';\n    });\n\n    discreteAtt.selectAll('*').remove();\n\n    let attributeHeight = (collapsed === 'true')? 20 : 45;\n\n    let innerTimelineDis = discreteAtt.append('g').classed('attribute-time-line', true);\n\n    innerTimelineDis.append('line').classed('half', true).attr('x1', 0).attr('y1', 22).attr('x2', 1010).attr('y2', 22);\n    \n    let statePath = innerTimelineDis.selectAll('g').data(d=> {\n        let disct = d.map(m=> {\n            let test = (m.leaf == true) ? m.states.map(s=> {\n                s.move = m.move;\n                s.edgeMove = m.edgeMove;\n                s.color = m.color;\n                return s;\n            }) : m;\n            return test;\n        });\n        let keys = disct[0].map(s=> s.state);\n        let lines = keys.map(key=> {\n            return disct.map(m=> m.filter(f=> f.state == key)[0]);\n        });\n        return lines;\n    }).join('g').classed('state-path', true);\n\n    var lineGen = d3.line()\n    .x(d=> {\n        let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n        let distance = (moveMetric === 'move') ? d.move : x(d.edgeMove);\n        return distance + 7;})\n    .y(d=> {\n        let y = d3.scaleLinear().domain([0, 1]).range([attributeHeight-2, 1]);\n        return y(d.realVal);\n    });\n\n    let innerStatePaths = statePath.append('path')\n    .attr(\"d\", lineGen)\n    .attr(\"class\", (d, i)=> d[0].species + \" inner-line\")\n    .style('stroke-width', 0.7)\n    .style('stroke', (d)=> {\n        return d[0].color;\n    });\n\n    let attribRectDisc = innerTimelineDis.append('rect').classed('attribute-rect', true);\n    attribRectDisc.attr('height', attributeHeight);\n    let attributeNodesDisc = innerTimelineDis.selectAll('.attribute-node-discrete').data(d=> {\n        return d;}).join('g');\n\n    attributeNodesDisc.attr('transform', (d)=> {\n        let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n        if(d[0]){\n            let distance = (moveMetric === 'move') ? d[0].move : x(d[0].edgeMove);\n            return 'translate('+distance+', 0)';\n        }else{\n            let distance = (moveMetric === 'move') ? d.move : x(d.edgeMove);\n            return 'translate('+distance+', 0)';\n        }\n    });\n\n    attributeNodesDisc.append('rect').attr('width', 20).attr('height', attributeHeight).attr('opacity', 0);\n\n    attributeNodesDisc.append('line').attr('x1', 10).attr('x2', 10).attr('y1', 0).attr('y2', attributeHeight);\n\n        /////AXIS ON HOVER////\n    attributeNodesDisc.on('mouseover', (d, i, n)=> {\n            let y = d3.scaleLinear().domain([1, 0]);\n            y.range([0, attributeHeight]);\n            d3.select(n[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(3));\n        }).on('mouseout', (d, i, n)=> {\n            d3.select(n[i]).select('g.y-axis')\n            d3.select(n[i]).select('g.y-axis').remove();\n        })\n\n    attributeNodesDisc.attr('class', (d, i, n)=> {\n        let path = d3.selectAll(n).data();\n        return path[path.length - 1].species;\n    }).classed('attribute-node-discrete', true);\n\n    if(bars === false){\n\n        let stateDots = attributeNodesDisc.filter((att, i)=> att[0] != undefined).selectAll('.dots').data(d=> {\n            \n            return d;\n        }).join('circle').classed('dots', true);\n        \n        stateDots.attr('cx', 10).attr('cy', (d)=> {\n            let y = d3.scaleLinear().domain([0, 1]).range([attributeHeight - 2, 2]);\n            return y(d.realVal);\n        }).attr('r', 2);\n        \n        stateDots.style('fill', (d, i, n)=> {\n           \n            /*\n            let speciesPath = d3.selectAll('.attribute-node-discrete.'+ d.species)//.filter(f=> f.type === 'discrete');\n           \n            let nodeArray = speciesPath.data().map(m=> {\n                return m.node ? m.node : m[0].node;\n            });\n            let index = nodeArray.indexOf(d.node);\n           \n            */\n            //return d.color\n            return 'gray';\n        });\n    \n        stateDots.filter(f=> f.realVal > 0.5).attr('r', 4);\n/*\n        let maxDots = stateDots.filter((f, i, n)=> {\n           \n            return f.realVal === d3.max(d3.selectAll(n).data().map(m=> m.realVal));\n        });\n*/\n        \n\n        ////NEED TO ADD COLOR ON STATE CHANGE////\n    \n        stateDots.on(\"mouseover\", function(d) {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(200)\n              .style(\"opacity\", .9);\n            let f = d3.format(\".3f\");\n            tool.html(d.state + \": \" + f(d.realVal))\n              .style(\"left\", (d3.event.pageX) + \"px\")\n              .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            })\n          .on(\"mouseout\", function(d) {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(500)\n              .style(\"opacity\", 0);\n            });\n    \n        let endStateDot = attributeNodesDisc.filter((att, i)=> {\n            return att[0] === undefined;}).classed('discrete-leaf', true);\n    \n        endStateDot.append('circle').attr('cx', 10).attr('cy', 2).attr('r', 7).style('fill', d=> {\n           return d.color;\n        });\n        ////NEED TO MAKE A FUNCTION TO ASSIGN COLOR OF STATES//////\n    \n        endStateDot.append('text').text(d=> d.winState).attr('transform', 'translate(20, 5)').style('font-size', 10);\n\n    }else{\n        attributeNodesDisc.filter((att, i)=> {\n            return att[0] != undefined;}).append('rect').attr('height', attributeHeight).attr('width', 20).attr('fill', '#fff')\n        let stateBars = attributeNodesDisc.filter((att, i)=> att[0] != undefined).selectAll('.dis-rect').data(d=> {\n            return d;\n        }).join('rect').classed('dis-rect', true);\n\n        stateBars.attr('width', 20).attr('height', (d, i)=> {\n         \n            let y = d3.scaleLinear().domain([0, 1]).range([0, attributeHeight]);\n            return y(d.realVal);\n        });\n\n        stateBars.attr('fill', (d, i)=> d.color);\n        stateBars.attr('opacity', '0.7');\n        stateBars.attr('stroke', '#fff');\n        stateBars.attr('transform', (d, i, n)=> {\n            let y = d3.scaleLinear().domain([0, 1]).range([0, attributeHeight]);\n            let probability = d3.selectAll(n).data().sort((a, b)=> b.realVal - a.realVal);\n            let chosenIn = probability.map(p=> p.state).indexOf(d.state);\n         \n            if(chosenIn === 0){\n                    return 'translate(0,0)';\n            }else{\n                ///need to make this a reduce function///\n                let valueAdd = 0;\n                    for(let step = 0; step < chosenIn; step++){\n                        valueAdd = valueAdd + probability[step].realVal;\n                    }\n                return 'translate(0,'+(y(valueAdd))+')';\n            }\n        });\n\n        stateBars.on(\"mouseover\", function(d) {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(200)\n              .style(\"opacity\", .9);\n            let f = d3.format(\".3f\");\n            tool.html(d.state + \": \" + f(d.realVal))\n              .style(\"left\", (d3.event.pageX) + \"px\")\n              .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            })\n          .on(\"mouseout\", function(d) {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(500)\n              .style(\"opacity\", 0);\n            });\n    \n        let endStateDot = attributeNodesDisc.filter((att, i)=> {\n            return att[0] === undefined;}).classed('discrete-leaf', true);\n    \n        endStateDot.append('circle').attr('cx', 10).attr('cy', 2).attr('r', 7).style('fill', d=> {\n           return d.color;\n        });\n\n        endStateDot.append('text').text(d=> d.winState).attr('transform', 'translate(20, 5)').style('font-size', 10);\n\n    }\n\n    return attributeNodesDisc;\n}\n\n","import '../styles/index.scss';\nimport * as d3 from \"d3\";\n\nimport {dataMaster, nestedData, collapsed} from './index';\nimport {filterMaster, removeFilter, addFilter} from './filterComponent';\nimport { updateMainView, groupedView } from './viewControl';\nimport {getNested} from './pathCalc';\nimport { dropDown } from './buttonComponents';\n\n\nexport function buildTreeStructure(paths, edges){\n    let root = paths[0][0];\n    let nestedData = getNested(root, edges.rows);\n  \n    return nestedData;\n}\n\nfunction updateBrush(treeBrush, scales){\n    \n    let sidebar = d3.select('#sidebar');\n    let toolbarDiv = d3.select('#toolbar');\n\n    let data = filterMaster.length === 0 ? dataMaster[0] : dataMaster[0];\n    let nodes = sidebar.select('svg').select('g').selectAll('.node');\n    let selectedNodes = nodes.filter(n=> (n.y > d3.event.selection[0][0]) && (n.y < d3.event.selection[1][0]) && (n.x > d3.event.selection[0][1]) && (n.x < d3.event.selection[1][1])).classed('selected', true);\n    let filterArray = selectedNodes.data().map(n=> n.data.node);\n    let test = treeFilter(data, filterArray);\n    let brushId = 'brush-'+ filterMaster.filter(f=> f.attributType === 'topology').length;\n    let filterOb = addFilter('data-filter', 'topology', brushId, treeFilter, [...data], [...test], null);\n\n    updateMainView(scales, 'edgeLength');\n   \n    ///DIMMING THE FILTERED OUT NODES//////\n\n    ////Class Tree Links////\n    let treeLinks  = d3.select('#sidebar').selectAll('.link');\n    let treeNode  = d3.select('#sidebar').selectAll('.node');\n\n    let nodeList = test.flatMap(path=> path.map(node => node.node));\n\n    d3.selectAll('.link-not-there').classed('link-not-there', false);\n    d3.selectAll('.node-not-there').classed('node-not-there', false);\n\n    let missingLinks = treeLinks.filter(f=> nodeList.indexOf(f.data.node) === -1);\n    missingLinks.classed('link-not-there', true);\n\n    let missingNodes = treeNode.filter(f=> nodeList.indexOf(f.data.node) === -1);\n    missingNodes.classed('node-not-there', true);\n\n    ///END NODE DIMMING///////\n\n    let button = toolbarDiv.append('button').classed('btn btn-info', true);\n    let span = button.append('span').classed('badge badge-light', true);\n    span.text(test.length);\n    let label = button.append('h6').text('Tree Filter');\n\n    let xSpan = label.append('i').classed('close fas fa-times', true);\n    xSpan.on('click', async (d, i, n)=> {\n        removeFilter(brushId);\n        await updateMainView(scales, 'edgeLength');\n        d3.selectAll('.selected').classed('selected', false);\n        d3.selectAll('.link-not-there').classed('link-not-there', false);\n        d3.selectAll('.node-not-there').classed('node-not-there', false);\n        button.remove();\n        d3.select(this).call(treeBrush.move, null);\n        d3.select('.tree-brush').remove();\n    });\n}\n\nexport function renderTreeButtons(normedPaths, calculatedScales, sidebar){\n    ///SIDBAR STUFF\n    let treeButton = sidebar.append('button').text('Filter by Tree').classed('btn btn-outline-secondary', true);  \n    let treeBrush = d3.brush().extent([[0, 0], [400, 600]]).on('end', (d, i, n) => updateBrush(treeBrush, calculatedScales));\n    treeButton.on('click', ()=> {\n        renderTree(sidebar, true, null, true);\n        let treeBrushG = sidebar.select('svg').append('g').classed('tree-brush', true).call(treeBrush);\n    });\n\n        ///SIDBAR STUFF\n    let treeViewButton = sidebar.append('button').text('Hide Lengths').attr('id', 'length').classed('btn btn-outline-secondary', true);  \n\n    treeViewButton.on('click', ()=> {\n  \n       sidebar.select('svg').remove();\n       if(treeViewButton.text() === 'Show Lengths'){\n            renderTree(sidebar, null, true);\n            treeViewButton.text('Hide Lengths');\n       }else{\n            renderTree(sidebar, null, false);\n            treeViewButton.text('Show Lengths');\n       }\n    });\n\n    treeViewButton.style('opacity', 0).style('width', 0).style('padding', 0).style('margin', 0)\n\n    let optionArray = [{'field':'None'}];\n\n    calculatedScales.map(m=> optionArray.push(m))\n\n    let dropOptions = dropDown(sidebar, optionArray, 'See Values','show-drop-div-sidebar');\n\n    dropOptions.on('click', (d, i, n)=> {\n        if(d.type === 'discrete'){\n            renderTree(sidebar, d, true);\n            //updateTree(tree, dimensions, treeSvg, g, d, lengthBool);\n        }else if(d.type === 'continuous'){\n            renderTree(sidebar, null, false);\n            //updateTree(tree, dimensions, treeSvg, g, null, lengthBool);\n        }else{\n            renderTree(sidebar, null, false);\n           // updateTree(tree, dimensions, treeSvg, g, null, lengthBool);\n        }\n       sidebar.select('#show-drop-div-sidebar').classed('show', false);\n    });\n}\n\nfunction treeFilter(data, selectedNodes){\n    return data.filter(path=> {\n        let nodeNames = path.map(no=> no.node);\n        let booArray = nodeNames.map(id=> selectedNodes.indexOf(id) > -1);\n        return booArray.indexOf(true) > -1\n    });\n}\n\nfunction uncollapseSub(d){\n    d.children = d._children;\n    d._children = null;\n    if(d.children){\n        d.children.map(c=> uncollapseSub(c));\n    }    \n}\n\nfunction collapseSub(d){\n    if(d.children) {\n        d._children = d.children\n        d._children.forEach(collapseSub)\n        d.children = null\n    }  \n}\n\n\nfunction collapseTree(treeData){\n\n    let leaves = getLeaves(treeData, []);\n    //GOING TO CHANGE ALL BLANK TO ANOLIS FOR THIS SITUATION///\n    leaves.forEach(l=> l.data.clade === \"Norops\" ? l.data.clade = \"Norops\" : l.data.clade = \"Anolis\");\n\n    return stepDown(treeData);\n\n    function stepDown(node){\n        let leaves = getLeaves(node, []);\n        let ids = new Set(leaves.map(m=> m.data.clade));\n        if(ids.size > 1){\n            node.children.map(n=> stepDown(n))\n        }else{\n            node.branchPoint = true;\n            node.clade = Array.from(ids)[0]\n            collapseSub(node);\n            return node;\n        }\n        return node;\n    }\n    \n    function getLeaves(node, array){\n        if(node.children != undefined ){\n            node.children.map(n=> getLeaves(n, array))\n        }else{\n            array.push(node);\n        };\n        return array;\n    }\n}\n\nfunction assignPosition(node, position) {\n    if (node.children === undefined || node.children === null){\n        \n        position = position + 1.5;\n        node.position = position;\n        return position;\n    }else{\n        let positionArray = []\n        node.children.forEach((child) => {\n            position = assignPosition(child, position);\n            positionArray.push(position);\n        });\n        node.options = positionArray;\n        node.position = d3.max(positionArray);\n        return position;\n    }\n}\n\nfunction addingEdgeLength(edge, data){\n    data.combEdge = data.edgeLength + edge;\n    if(data.children){\n        data.children.forEach(chil=> {\n            addingEdgeLength(data.combEdge, chil);\n        });\n    }\n}\n\nexport function renderTree(sidebar, att, uncollapse){\n    // set the dimensions and margins of the diagram\n    let dimensions = {\n        margin : {top: 10, right: 90, bottom: 50, left: 20},\n        width : 290,\n        height : 520\n    }\n\n    // declares a tree layout and assigns the size\n    var treemap = d3.tree()\n    .size([dimensions.height, dimensions.width]);\n\n    addingEdgeLength(0, nestedData[0]);\n\n    //  assigns the data to a hierarchy using parent-child relationships\n    var treenodes = d3.hierarchy(nestedData[0]);\n\n    // maps the node data to the tree layout\n    treenodes = treemap(treenodes);\n\n    let groupedBool = d3.select('#show-drop-div-group').attr('value');\n    let lengthBool = d3.select('button#length').text() === 'Hide Lengths';\n\n    let sidebarTest = sidebar.select('svg');\n    let treeSvg = sidebarTest.empty() ? sidebar.append(\"svg\") : sidebarTest;\n    treeSvg.attr(\"width\", dimensions.width + dimensions.margin.left + dimensions.margin.right)\n    .attr(\"height\", dimensions.height + dimensions.margin.top + dimensions.margin.bottom);\n\n    let gTest = treeSvg.select('g.tree-g');\n    let g = gTest.empty() ? treeSvg.append(\"g\").classed('tree-g', true) : gTest;\n    g.attr(\"transform\",\n      \"translate(\" + dimensions.margin.left + \",\" + dimensions.margin.top + \")\");\n\n    if(groupedBool === \"ungrouped\" && uncollapse === false){\n        let newNodes = collapseTree(treenodes);\n        updateTree(newNodes, dimensions, treeSvg, g, att, lengthBool);\n    }else{\n        ////Break this out into other nodes////\n        updateTree(treenodes, dimensions, treeSvg, g, att, lengthBool);\n    }\n    /////END TREE STUFF\n    ///////////\n}\n\nfunction findDepth(node, array){\n\n    function stepDown(n){\n        if(n.children != null){\n            n.children.forEach(child=> {\n                stepDown(child);\n            })\n        }else{\n            array.push(n);\n        }\n    }\n    stepDown(node);\n\n    return array;\n    \n}\n\nfunction updateTree(treenodes, dimensions, treeSvg, g, attrDraw, length){\n    \n    assignPosition(treenodes, 0);\n\n    let branchCount = findDepth(treenodes, []);\n    let xScale = d3.scaleLinear().domain([0, 1]).range([0, dimensions.width]).clamp(true);\n    let yScale = d3.scaleLinear().range([dimensions.height, 0]).domain([0, branchCount.length])\n\n    if(length){   \n        g.attr('transform', 'translate(20, 265)');\n        treeSvg.attr('height', 800);\n        yScale.range([500, 0])\n        xScale.range([0, dimensions.width + 10]);\n    } \n\n// adds the links between the nodes\n    let link = g.selectAll(\".link\")\n    .data( treenodes.descendants().slice(1))\n    .join(\"path\")\n    .attr(\"class\", \"link\");\n\n    link.transition()\n    .duration(500)\n    .attr(\"d\", function(d) {\n        if(length){\n           return \"M\" + xScale(d.data.combEdge) + \",\" + yScale(d.position)\n           + \"C\" + (xScale(d.data.combEdge) + xScale(d.parent.data.combEdge)) / 2 + \",\" + yScale(d.position)\n           + \" \" + (xScale(d.parent.data.combEdge)) + \",\" + yScale(d.position)\n           + \" \" + xScale(d.parent.data.combEdge) + \",\" + yScale(d.parent.position);\n        }else{\n            return \"M\" + d.y + \",\" + d.x\n            + \"C\" + (d.y + d.parent.y) / 2 + \",\" + d.x\n            + \" \" + (d.y + d.parent.y) / 2 + \",\" + d.parent.x\n            + \" \" + d.parent.y + \",\" + d.parent.x;\n        }       \n    });\n\n    // adds each node as a group\n    var node = g.selectAll(\".node\")\n    .data(treenodes.descendants(), d => d.data.node)\n    .join(\"g\")\n    .attr(\"class\", function(d) { \n    return \"node\" + \n    (d.children ? \" node--internal\" : \" node--leaf\"); });\n\n\n      // adds the circle to the node\n      node.selectAll('circle').data(d=> [d]).join(\"circle\")\n      .attr(\"r\", 3);\n\n    node.transition()\n    .duration(500)\n    .attr(\"transform\", function(d) { \n        if(length){\n            return \"translate(\" + xScale(d.data.combEdge) + \",\" + yScale(d.position) + \")\"; \n        }else{\n            return \"translate(\" + d.y + \",\" + d.x + \")\"; \n        }\n    });\n\n    if(attrDraw != null){\n        let leaves = node.filter(n=> n.data.leaf === true);\n        let notleaves = node.filter(n=> n.data.leaf != true);\n        \n        attrDraw.stateColors.forEach(att=> {\n            let circ = leaves.filter(f=> {\n                return f.data.attributes[attrDraw.field].winState === att.state;\n            }).select('circle');\n            circ.attr('fill', att.color);\n            circ.attr('r', 4)\n            notleaves.selectAll('circle').attr('fill', 'gray');\n        });\n    }else{\n        node.selectAll('circle').attr('fill', 'gray');\n    }\n\n    node.on('mouseover', (d, i, n)=> {\n        let paths = d3.select('#main-path-view').selectAll('.paths');\n        let points = d3.select('#main-summary-view').selectAll('.branch-points');\n        points.filter(f=> f.node === d.data.node).classed('selected', true);\n\n        let selectedPaths = paths.filter(path=> {\n            let nodes = path.map(m=> m.node);\n            return nodes.indexOf(d.data.node) > -1;\n        }).classed('hover', true);\n        selectedPaths.selectAll('g').filter(g=> g.node === d.data.node).classed('selected', true);\n        d3.select(n[i]).classed('selected-branch', true);\n\n        if(d.data.label){\n            let tool = d3.select('#tooltip');\n            tool.transition()\n            .duration(200)\n            .style(\"opacity\", .9);\n          \n            tool.html(`${d.data.label.charAt(0).toUpperCase() + d.data.label.slice(1)}`)\n            .style(\"left\", (d3.event.pageX - 40) + \"px\")\n            .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            tool.style('height', 'auto');\n        }\n\n    }).on('mouseout', (d, i, n)=> {\n        d3.selectAll('.paths.hover').classed('hover', false);\n        d3.selectAll('g.selected').classed('selected', false);\n        d3.select(n[i]).classed('selected-branch', false);\n\n        let tool = d3.select('#tooltip');\n        tool.transition()\n          .duration(500)\n          .style(\"opacity\", 0);\n    });\n    let leaves = node.filter(f=> f.data.children.length == 0);\n\n    node.selectAll('text').remove();\n    node.selectAll('.triangle').remove();\n\n    let branchNodes = node.filter(n=> n.branchPoint === true);\n    branchNodes.each((b, i, n)=> {\n        if(b.children === null){\n            let triangle = d3.select(n[i]).append('path').classed('triangle', true).attr('d', d3.symbol().type(d3.symbolTriangle).size('400'))\n            triangle.attr('transform', `rotate(-90) translate(0, 65) scale(.9 4)`);\n            triangle.attr('fill', 'gray').style('opacity', 0.3);\n            let text = d3.select(n[i]).selectAll('text').data(d=> [d]).join('text').text(b.clade);\n            text.attr('transform', 'translate(55, 5)');\n        }\n    })\n    branchNodes.select('circle').attr('fill', 'red').attr('r', 4.5);\n    branchNodes.on('click', (d, i, n)=> {\n        if(d.children == null){\n            uncollapseSub(d);\n        }else{\n            collapseSub(d);\n        }\n        let lengthBool = d3.select('button#length').text() === 'Hide Lengths';\n        updateTree(treenodes, dimensions, treeSvg, g, attrDraw, lengthBool);\n      \n    });\n\n    node.raise();\n    node.selectAll('circle').raise();\n\n    return node;\n}","import '../styles/index.scss';\nimport * as d3 from \"d3\";\nimport {drawPathsAndAttributes, drawDiscreteAtt, drawGroups} from './renderPathView';\nimport {toggleFilters, getLatestData} from './filterComponent';\nimport { updateMainView } from './viewControl';\nimport { collapsed } from '.';\nimport { dropDown } from './buttonComponents';\n\n\nexport function toolbarControl(toolbar, normedPaths, main, calculatedScales, moveMetric, pathView){\n\n    let viewButton = toolbar.append('button').attr('id', 'view-toggle').attr('attr' , 'button').attr('class', 'btn btn-outline-secondary');\n    viewButton.on('click', ()=> togglePathView(viewButton, calculatedScales, moveMetric));\n\n    if(pathView === 'paths'){\n        viewButton.text('View Summary');\n    }else if(pathView === 'summary'){\n        viewButton.text('View Paths');\n    }else{\n        console.error('pathView parameter not found');\n    }\n    \n    let filterButton = toolbar.append('button').attr('id', 'view-filter');\n    filterButton.attr('class', 'btn btn-outline-secondary').text('Show Filters');\n    filterButton.on('click', ()=> toggleFilters(filterButton, main, moveMetric, calculatedScales));\n    ///LENGTH BUTTON CODE\n\n    let scrunchButton = toolbar.append('button').attr('id', 'scrunch');\n    scrunchButton.attr('class', 'btn btn-outline-secondary').text('Collapse Attributes');\n    scrunchButton.attr('value', false);\n    scrunchButton.on('click', ()=> toggleScrunch(scrunchButton, main, calculatedScales));\n\n    let discreteViewButton = toolbar.append('button').attr('id', 'discrete-view');\n    discreteViewButton.attr('class', 'btn btn-outline-secondary').text('Switch to Discrete Bars');\n    discreteViewButton.attr('value', false);\n    discreteViewButton.on('click', ()=> {\n        let discretePredictedGroups = d3.selectAll('.predicated-attr-groups');\n        if(discreteViewButton.text() === 'Switch to Discrete Bars'){\n            discreteViewButton.text('Switch to Discrete Dots');\n            drawDiscreteAtt(discretePredictedGroups, moveMetric, collapsed, true);\n        }else{\n            discreteViewButton.text('Switch to Discrete Bars');\n            drawDiscreteAtt(discretePredictedGroups, moveMetric, collapsed, false);\n        }\n    });\n\n    let optionArray = [{'field':'None'}];\n\n    calculatedScales.map(m=> {\n        if(m.type === 'discrete'){\n            optionArray.push(m);\n        }\n    });\n\n    let dropOptions = dropDown(toolbar, optionArray, 'Group By','show-drop-div-group');\n    toolbar.select('#show-drop-div-group').attr('value', 'ungrouped');\n    console.log('dropOptions', toolbar.select('#show-drop-div-group').attr('value'));\n\n    dropOptions.on('click', (d, i, n)=> {\n        if(d.type === 'discrete'){\n            let data = getLatestData();\n            let stateBins = d.scales.map(m=> {\n                return {'field': m.field, 'state': m.scaleName, 'data': []}});\n           \n            stateBins.map(state=> {\n               state.data = data.filter(paths=> {\n                    let node = paths.filter(no=> no.leaf === true);\n                        return node[0].attributes[state.field].winState === state.state;\n                });\n            });\n           d3.select('#main').selectAll('*').remove();\n           drawGroups(stateBins, calculatedScales);\n        }else{\n            console.error('THIS HAS TO BE DISCRETE');\n        }\n        toolbar.select('#show-drop-div-group').classed('show', false);\n    });\n}\n\n////COLLAPSES THE NODES DOWN\nfunction toggleScrunch(button, main, calculatedScales){\n\n    let data = getLatestData();\n   \n    if(button.text() === 'Collapse Attributes'){\n        button.text('Expand Attributes');\n        main.selectAll('*').remove();\n        button.attr('value', true);\n        drawPathsAndAttributes(data, main, calculatedScales, 'edgeLength');\n    }else{\n        button.text('Collapse Attributes');\n        main.selectAll('*').remove();\n        button.attr('value', false);\n\n        drawPathsAndAttributes(data, main, calculatedScales, 'edgeLength');\n    }\n}\n\n/**\n * \n * @param {*} viewButton button that changes the actual view the text of the button determines what the view should change to \n * @param {*} normedPaths \n * @param {*} main \n * @param {*} calculatedScales \n */\nfunction togglePathView(viewButton, calculatedScales, moveMetric){\n\n    if(viewButton.text() === 'View Paths'){\n        viewButton.text('View Summary');\n    }else{\n        viewButton.text('View Paths');\n    }\n    updateMainView(calculatedScales, moveMetric);\n}\n\n\n\n\n\n","import '../styles/index.scss';\nimport * as d3 from \"d3\";\nimport {loadData} from './dataLoad';\nimport {calculateScales, matchLeaves, matchEdges, normPaths, filterKeeper} from './dataFormat';\nimport {allPaths, pullPath, getPath} from './pathCalc';\nimport {drawPathsAndAttributes} from './renderPathView';\nimport {renderTree, buildTreeStructure, renderTreeButtons} from './sidebarComponent';\nimport {toolbarControl, renderAttToggles} from './toolbarComponent';\nimport { updateMainView, initialViewLoad } from './viewControl';\n\nexport const dataMaster = [];\nexport const savedSelected = [];\nexport const collapsed = false;\nexport const nestedData = [];\n\nexport const colorKeeper = [\n    ['#0dc1d1', '#c8f7fd'],\n    ['#3AD701', '#2a9b01'],\n    ['#fec303', '#d3a001'],\n    ['#fe4ecb', '#d30197'],\n    ['#f36b2c'],\n    ['#1abc9c'],\n    ['#493267'],\n    ['#a40b0b'],\n    ['#0095b6'],\n]\n\nlet wrap = d3.select('#wrapper');\nlet main = wrap.select('#main');\nlet selectedPaths = wrap.select('#selected');\nlet sidebar = wrap.select('#sidebar');\n\n//hiding this for dev\n//sidebar.style('opacity', 0)\n\nlet toolbarDiv = wrap.select('#toolbar');\n\nloadData(d3.json, './public/data/body-length-res.json', '').then(d=> console.log('new data!', d))\n\nloadData(d3.json, './public/data/anolis-edges.json', 'edge').then(async edges => {\n\n    //helper function to create array of unique elements\n    Array.prototype.unique = function() {\n        return this.filter(function (value, index, self) { \n            return self.indexOf(value) === index;\n        });\n    }\n\n    let edgeLen = await loadData(d3.json, './public/data/anolis-edge-length.json', 'edge');\n\n    //Mapping data together/////\n    let edgeSource = edges.rows.map(d=> d.V1);\n    let leaves = edges.rows.filter(f=> edgeSource.indexOf(f.V2) == -1 );\n    let leafChar = await loadData(d3.json, './public/data/anolisLeafChar.json', '');\n    let leafChar2 = await loadData(d3.csv, './public/data/anolisDataNew.csv', '');\n    let labels = await loadData(d3.json, './public/data/anolis-labels.json', '');\n\n    console.log('leafffs', leafChar)\n\n// console.log('new attribute data',leafChar, leafChar2)\n  //  console.log(Object.entries(leafChar2).filter(en=> en[0] != 'columns' && en[0] != 'type'));\n    let rows = Object.entries(leafChar2).filter(en=> en[0] != 'columns' && en[0] != 'type');\n    \n //   let leafChar = {'rows': rows.map(m=> m[1]), 'type': leafChar2.type, 'fields': leafChar2.columns};\n\n   // console.log(leafChar, leafCharNew);\n\n    ///MAKE A ESTIMATED SCALES THING\n    let calculatedAtt = {\n        'awesomeness' : await loadData(d3.json, './public/data/anolis-awesomeness-res.json', 'continuous'),\n        'island' : await loadData(d3.json, './public/data/anolis-island-res.json', 'discrete'),\n        'SVL' : await loadData(d3.json, './public/data/anolis-svl-res.json', 'continuous'),\n        'ecomorph': await loadData(d3.json, './public/data/anolis-ecomorph-res.json', 'discrete'),\n        'PCIII_padwidth_vs_tail': await loadData(d3.json, './public/data/padwidth-vs-tail-res.json', 'continuous'),\n    }\n\n    ////CALCULATE THE SCALES FOR EACH ATTRIBUTE////////\n    let calculatedScales = calculateScales(calculatedAtt, colorKeeper);\n\n    ///MATCH LEAF CHARACTERS AND LABELS TO LEAVES///\n    let matchedLeaves = matchLeaves(labels, leaves, leafChar, calculatedScales);\n\n    //MATCH CALC ATTRIBUTES TO EDGES///\n    let matchedEdges = matchEdges(edges, edgeLen, calculatedAtt, calculatedScales);\n\n    ///CALCULATES PATHS FROM THE DATA////\n    let paths = allPaths(matchedEdges, matchedLeaves, \"V1\", \"V2\");\n \n    let normedPaths = normPaths(paths, calculatedAtt, calculatedScales);\n    dataMaster.push(normedPaths);\n   \n    toolbarControl(toolbarDiv, normedPaths, main, calculatedScales, 'edgeLength', 'paths');\n    \n    let filterDiv = wrap.select('#filter-tab').classed('hidden', true);\n\n    ////////TREE RENDER IN SIDEBAR////////\n    \n    nestedData.push(buildTreeStructure(paths, edges));\n    renderTreeButtons(normedPaths, calculatedScales, sidebar, false);\n    let tree = renderTree(sidebar, null, false);\n    \n    /// LOWER ATTRIBUTE VISUALIZATION ///\n    initialViewLoad(calculatedScales, 'edgeLength');\n});\n\nlet tooltip = wrap.append(\"div\")\n.attr(\"id\", \"tooltip\")\n.style(\"opacity\", 0);\n/*\nloadData(d3.json, './public/data/geospiza_with_attributes.json').then(data=> {\n    let pathArray = pullPath([], [data], [], [], 0);\n\n    //console.log('pa',pathArray);\n});*/\n/*\nloadData(d3.json, './public/data/geospiza_loop_all_asr_features.json').then(data=> {\n    let pathArray = pullPath([], [data], [], [], 0);\n\n    console.log('pa RICH',pathArray);\n});*/\n/*\nloadData(d3.json, './public/data/anolis_rich_ASR_pad_vs_tail.json').then(data=> {\n    let pathArray = pullPath([], [data], [], [], 0);\n\n    console.log('anolis RICH',pathArray);\n});*/\n\n\n\n\n"],"sourceRoot":""}