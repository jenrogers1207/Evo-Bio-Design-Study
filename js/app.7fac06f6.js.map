{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/dataLoad.js","webpack:///./src/scripts/dataFormat.js","webpack:///./src/scripts/pathCalc.js","webpack:///./src/scripts/distributionView.js","webpack:///./src/scripts/selectedPaths.js","webpack:///./src/scripts/buttonComponents.js","webpack:///./src/scripts/renderPathView.js","webpack:///./src/scripts/filterComponent.js","webpack:///./src/scripts/pairView.js","webpack:///./src/scripts/viewControl.js","webpack:///./src/scripts/sidebarComponent.js","webpack:///./src/scripts/toolbarComponent.js","webpack:///./src/scripts/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","loadData","_x","_x2","_x3","_loadData","this","arguments","_callee","readFunction","fileString","type","regeneratorRuntime","wrap","_context","prev","next","sent","String","abrupt","stop","pairPaths","pathData","flatMap","path","filter","f","map","p1","p2","pair","verts","test","lastNode","p1Index","p2Index","distance","node","indexOf","common","d3","edgeLength","deltas","range","edgeMove","binCount","binStep","bins","_toConsumableArray","Array","bottom","top","one","two","b","attributes","valdiffs","Math","abs","realVal","calculateDelta","closeness","leaf1","leaf","leaf2","calculateCloseness","calculateScales","calculatedAtt","colorKeeper","keys","max","rows","upperCI95","min","lowerCI95","field","yScale","domain","clamp","satScale","colorScale","catColor","scaleCat","fields","stateColors","sc","state","color","scales","scaleName","matchLeaves","labels","leaves","leafChar","calculatedScales","mappedLeafLabels","x","label","leafCharIndex","V2","attr","chosenOne","forEach","k","scaleOb","states","clade","matchEdges","edges","edgeLen","edge","attrKeys","index","res","estimate","undefined","row","normPaths","paths","att","root","nodeLabels","scale","rootAttr","console","error","maxBranch","xScale","leafIndex","prevStep","assign","step","move","formatAttributeData","filterArray","speciesLabel","species","winState","attrLabel","st","allPaths","edgeArray","leafArray","source","target","le","getPath","pathKeeper","ed","reverse","pullPath","pathArray","nodes","arrayOfArray","nameArray","depth","childArray","id","children","pathCalc_toConsumableArray","node_data","flag","concat","drawBranchPointDistribution","svg","branchBar","append","classed","text","nodeLengthArray","nodeDuplicateCheck","eMove","bPointScale","pointGroups","selectAll","join","renderDistibutions","mainDiv","attrHide","filterMaster","attribute","newNormed","distributionView_toConsumableArray","keysToHide","medBranchLength","normBins","fill","base","binI","internalNodes","leafNodes","rootNodes","sortedBins","mapNorm","bin","fData","leafAttr","leafData","histogram","thresholds","ticks","maxO","v","minO","xO","histogramO","branches","rootData","colors","chosen","average","stDev","stUp","stDown","stat","branchScale","binnedWrap","style","predictedWrap","contRoot","newy","sort","a","height","on","tool","transition","duration","html","pageX","pageY","branchGroup","continDist","list","y","select","remove","lineGen","curve","y0","y1","dat","each","distrib","rangeRect","discreteDist","combEdge","discreteBinWrap","stateGroups","predictedWidth","lineGenD","observedWrap","contOb","contBars","xvalues","discOb","discBars","dRects","xPoint","padding","selectedPaths","comparisonKeeper","pathSelected","selectedPath","otherPaths","selectedDiv","main","drawPathsAndAttributes","selectedPaths_toConsumableArray","commonNodes","selectedSpecies","treeNodes","attrFilter","selectedToolTest","selectedTool","empty","sortByDistanceDiv","sortByDistanceButton","sortButton","attrSortWrap","radioDiv","radio","svgTest","branchFrequency","reduce","acc","curr","selectWrap","circleScale","values","selectedGroups","pathBars","addRemoveBubble","treeNode","treeLinks","speciesTitle","string","charAt","toUpperCase","timelines","nodeGroups","circle","hovers","nearest","nodearray","attributeWrapper","attData","attributeGroups","renderAttributes","drawContAtt","drawDiscreteAtt","sorted","high","leafOther","highLeaves","low","lowLeaves","same","commonNodeStart","nodeIndex","thresh","subset","chil","parentBase","scaledParentMove","parentScale","level","getCommonNodes","childNodeWrap","childNodes","line","commonHover","renderSelectedTopology","attWrap","ch","attDataComb","offset","last","mappedDis","dis","spec","maxProb","maxP","notMax","other","findMaxState","attGroups","wrapRect","speciesGrp","attributeHeight","lineGenC","innerStatePaths","disGroup","sp","branchGrpDis","bCirc","otherCirc","conGroup","branchGrpCon","MeanRect","confiBars","longestBranch","startBranch","dataMaster","renderSelectedView","commonNode","chosenPath","rankedPaths","pathIndex","sortedData","sortOtherPaths","group","pathRemove","renderComparison","buttonGroupTest","buttonGroup","usedColors","groupColor","newColor","find","compareButtonTest","compareButton","comparisonCombined","newAtt","com","atts","added","standard","variance","first","second","button","filteredComp","selectedTest","attWraps","mean","e","sqrt","meanStandard","sigma2","upCon95","lowCon95","exit","attWrapsEnter","enter","merge","innerWrap","pathGroups","missing","areaG","confGroups","conf","NaN","_this","axisGroupTest","axisGroup","maxDiff","newScale","startBins","difArray","_loop","diffs","diff","obsDistWrap","newLeaves","binData","xAxis","distGroups","groupLength","dropDown","div","optionArray","dropText","dropId","dropdiv","dropContent","options","nodeTooltipFlag","collapsed","pathWrapTest","pathWrap","pathAdd","notIt","nodeFilter","getLatestData","renderPaths","attKeys","attrMove","predictedAttrGrps","attribWrap","sizeAndMove","selectedState","filterType","addFilterTag","addFilter","attributeType","filterComponent_toConsumableArray","updateMainView","nodeList","leafStateFilter","innerTimeline","innerPaths","change","continuousAtt","continuousPaths","attributeNodesCont","innerBars","drawGroups","stateBins","splitOnArray","newBins","newBinData","newData","pa","firstGroupSvg","firstGroup","secondGroup","g","newM","groupLabels","stateLabel","innerGroup","innerWrapRect","wrappers","shiftWraps","xAxisShift","shiftCircles","leafWraps","totalVal","totalMean","newVal","groupMean","dotVals","distcircles","w","groupBy","totalArray","leafWrapsD","rects","groupedData","d3Array","width","ratio","drawLeaves","bars","discreteAtt","innerTimelineDis","statePath","disct","attributeNodesDisc","stateDots","endStateDot","stateBars","probability","chosenIn","valueAdd","updateRanking","pairs","deltaMax","pairView_toConsumableArray","closeMax","distMax","deltaScale","closeScale","distScale","sortedPairs","delta","deltaRank","closenessRank","distanceRank","totalRank","log","pairWraps","scoreWrap","scoreGroups","rank","scoreLabel","zero","pairGroup","xAxisG","neighbors","start","speciesTest","ne","neighNodes","mouseG","mousePerLine","parentNode","mouse","xDate","invert","bisect","right","getElementsByClassName","beginning","end","getTotalLength","floor","pos","getPointAtLength","toFixed","valueGroupTest","drawSorted","document","getElementById","disabled","renderTree","generatePairs","initialViewLoad","from","Set","groupDistributions","removeFilter","filterId","dataFilters","filterIndex","testData","fun","filterFunction","newTestData","selectedOption","predictedFilter","observedFilter","fromState","toState","newFilterMaster","attType","filFunction","oldData","extra","filterOb","before-data","ex","toggleFilters","filterButton","filterDiv","normedPaths","presentFilters","noShow","wrapper","labelGroups","toggle","shownToggs","togg","toggleCircle","newKeys","hideKeys","newFilMaster","renderAttToggles","moveMetric","selectWrapper","attButton","stateChange","attProps","optKeys","button1","button2","submit","classList","discreteFilter","filId","missingLinks","missingNodes","continRanges","ranges","brushBars","wrapperRect","xBrush","extent","selection","handle","brushGroup","selections","_groups","__brush","lastFilter","continuousFilter","stateFilter","searchDiv","form","input","queryArray","split","toLowerCase","filterToolbar","span","xSpan","queryFilter","formater","datum","nodeId","selectedNode","predicted","observed","numb","filterPred","filterObs","win","selectorDiv","selectId","dropDownWrapper","buildTreeStructure","getNested","V1","renderTreeButtons","sidebar","treeViewButton","phenogramButton","collapseSub","_children","uncollapse","pheno","dimensions","margin","left","treemap","size","addingEdgeLength","nestedData","treenodes","groupedBool","lengthBool","sidebarTest","treeSvg","gTest","updateTree","treeData","getLeaves","stepDown","ids","branchPoint","array","collapseTree","attrDraw","assignPosition","position","positionArray","child","branchCount","findDepth","link","descendants","parent","notleaves","circ","branchNodes","triangle","uncollapseSub","raise","toolbarControl","toolbar","pathView","scrunchButton","toggleScrunch","discreteViewButton","discretePredictedGroups","dropOptions","no","savedSelected","toolbarDiv","then","edge_data","weight","_ref","mark","edgeSource","leafChar2","matchedLeaves","matchedEdges","unique","self","entries","en","t0","t1","t2","t3","t4","awesomeness","island","SVL","ecomorph","PCIII_padwidth_vs_tail"],"mappings":"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","file":"js/app.7fac06f6.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/Evo-Bio-Design-Study/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([144,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as d3 from 'd3';\n\nexport async function loadData(readFunction, fileString, type){\n    let data = await readFunction(fileString);\n    data.type = String(type);\n    return data;\n}\n\n\n","import * as d3 from \"d3\";\n\n\nexport function pairPaths(pathData){\n\n    return pathData.flatMap((path, i)=> {\n        let pairs = pathData.filter((f, j)=> j != i);\n        let paired =  pairs.map((p)=> {\n            return {'p1': path, 'p2': p}\n        });\n        return paired.map(m=> {\n            m.distance = getDistance(m);\n            m.deltas = calculateDelta(m);\n            m.closeness = calculateCloseness(m);\n            return m;\n        })\n    })\n}\n\nfunction getDistance(pair){\n    let verts = pair.p2.map(m=> m.node);\n\n    let test = pair.p1.filter(f=> verts.indexOf(f.node) != -1);\n    let lastNode = test[test.length - 1].node;\n\n    let p1Index = pair.p1.map(m=> m.node).indexOf(lastNode);\n    let p2Index = pair.p2.map(m=> m.node).indexOf(lastNode);\n  \n    let p1 = pair.p1.filter((f, i)=> i >= p1Index);\n    let p2 = pair.p2.filter((f, i)=> i >= p2Index);\n\n    pair.common = pair.p1[p1Index]\n\n    return d3.sum(p1.map(m=> m.edgeLength)) + d3.sum(p2.map(m=> m.edgeLength));\n}\n\nfunction calculateDelta(pair){\n   \n    let verts = pair.p2.map(m=> m.node);\n\n    let test = pair.p1.filter(f=> verts.indexOf(f.node) != -1);\n    let lastNode = test[test.length - 1].node;\n\n    let p1Index = pair.p1.map(m=> m.node).indexOf(lastNode);\n    let p2Index = pair.p2.map(m=> m.node).indexOf(lastNode);\n  \n    let p1 = pair.p1.filter((f, i)=> i >= p1Index);\n    let p2 = pair.p2.filter((f, i)=> i >= p2Index);\n\n    let range = 1 - p1[0].edgeMove;\n    let binCount = d3.max([p1.length, p2.length])\n    let binStep = range / binCount;\n   \n    let bins = [...new Array(binCount-1)].map((d, i)=> {\n        return {'bottom': p1[0].edgeMove + (i*binStep), 'top': p1[0].edgeMove + ((i+1)*binStep) }\n    })\n   \n    bins = bins.map((d, i)=> {\n        let one = p1.filter(f=> (f.edgeMove <= d.top) && (f.edgeMove >= d.bottom))\n        let two = p2.filter(f=> (f.edgeMove <= d.top) && (f.edgeMove >= d.bottom))\n        d.one = one;\n        d.two = two;\n        return d;\n    });\n\n    bins = bins.map((b, i)=> {\n        if(b.one.length === 0){\n            b.one = bins[i-1].one;\n        }\n        if(b.two.length === 0){\n            b.two = bins[i-1].two;\n        }\n\n        return b;\n    })\n    \n    let attributes = d3.entries(p1[0].attributes)\n                    .filter(f => f.value.type === 'continuous')\n                    .map(m=> {\n                        let name = m.key;\n                        let valdiffs = bins.map((b, i)=> {\n                            return Math.abs(b.one[0].attributes[name].realVal - b.two[0].attributes[name].realVal);\n                        });\n                        m.value = d3.max(valdiffs)\n                        return m;\n                    });\n\n    return attributes;\n}\n\nfunction calculateCloseness(pair){\n\n let leaf1 = pair.p1.filter(p=> p.leaf === true)[0].attributes;\n let leaf2 = pair.p2.filter(p=> p.leaf === true)[0].attributes;\n \n return d3.entries(leaf1).filter(f=> f.value.type === 'continuous').map(m=> {\n     m.value = Math.abs(m.value.realVal - leaf2[m.key].realVal);\n     \n     return m\n });\n}\n\n\nexport function calculateScales(calculatedAtt, colorKeeper){\n    return Object.keys(calculatedAtt).map((d, i)=> {\n       \n        if(calculatedAtt[d].type == 'continuous'){\n            let max = d3.max(calculatedAtt[d].rows.map(m=> m.upperCI95));\n            let min = d3.min(calculatedAtt[d].rows.map(m=> m.lowerCI95));\n            let mean = d3.mean(calculatedAtt[d].rows.map(m=> m.realVal));\n            \n            return {\n                'field': d, \n                'type':'continuous',\n                'max': max, \n                'min':  min,\n                'yScale': d3.scaleLinear().range([0, 43]).domain([min, max]).clamp(true),\n                'satScale': d3.scaleLinear().range([0, .9]).domain([min, max]),\n                'colorScale': d3.scaleLinear().range([colorKeeper[i][0], '#f23929']).domain([min, max]),\n                'catColor': colorKeeper[i][0],\n            };\n        }else{\n            let scaleCat = calculatedAtt[d].fields.filter(f=> f!= 'nodeLabels');\n            return { \n                'field': d,\n                'type':'discrete',\n                'stateColors': scaleCat.map((sc, i)=> {\n                    return {'state': sc, 'color': colorKeeper[i][0]};\n                }),\n                'catColor': colorKeeper[i][0],\n                'scales': scaleCat.map(sc=> {\n                let scaleName = sc;\n               \n                let max = 1;\n                let min = 0;\n                return {\n                    'field': d, \n                    'scaleName': scaleName,\n                    'max': max, \n                    'min':  min,\n                    'yScale': d3.scaleLinear().range([45, 0]).domain([min, max]),\n                };\n                \n            }) };\n        }\n    });\n}\n\nexport function matchLeaves(labels, leaves, leafChar, calculatedScales){\n\n        ////MATCHING LABELSS TO THE STUFF/////\n    let  mappedLeafLabels = labels.rows.map(m=> {\n        let label = m.x;\n        return label;\n    });\n\n    return leaves.map((leaf, i)=> {\n      \n        leaf.label = mappedLeafLabels[i];\n\n        //let leafCharIndex = leafChar.rows.map(m=> m[\"\"]);\n      \n        let leafCharIndex = leafChar.rows[0][\"\"] ? leafChar.rows.map(m=> m[\"\"]) : leafChar.rows.map(m=> m[\"species\"]);\n  \n        leaf.node = leaf.V2;\n        let keys = calculatedScales.map(m=> m.field);\n        let attr = {};\n         \n        let chosenOne = leafChar.rows[leafCharIndex.indexOf(leaf.label)];\n \n        keys.forEach((k)=> {\n             let scaleOb = calculatedScales.filter(f=> f.field == k)[0];\n            \n             if(scaleOb.type === 'discrete'){\n                 let thisScale = scaleOb.scales.filter(f=> f.scaleName == chosenOne[k])[0].yScale;\n                 let states = scaleOb.scales.map(m=> m.scaleName).map(state=> {\n                     let value = (state === chosenOne[k])? 1 : 0;\n                    // return {'state': state,  scaleVal: thisScale(value), realVal: value};\n                     return {'state': state, realVal: value};\n                 });\n                 //let states = {'state': leafChar.rows[i][k],  scaleVal: thisScale(1), realVal: 1}\n                 attr[k] = {'states': states, 'label': k, 'type': scaleOb.type, leaf: true};\n             }else if(scaleOb.type === 'continuous'){\n                 let scale = scaleOb.yScale;\n                 //attr[k] = {'scaleVal': scale(chosenOne[k]), 'scaledHigh': 0, 'scaledLow': 0, 'realVal': chosenOne[k], 'type': scaleOb.type, leaf: true};\n                 attr[k] = {'realVal': chosenOne[k], 'type': scaleOb.type, leaf: true};\n \n             }else{\n                 attr[k] = 'error in leaf matching';\n             }\n         });\n\n         leaf.clade = chosenOne.clade;\n         leaf.attributes = attr;\n         leaf.leaf = true;\n     \n         return leaf;\n     });\n}\n\nexport function matchEdges(edges, edgeLen, calculatedAtt, calculatedScales){\n    return edges.rows.map((edge, i)=> {\n        let attrKeys = Object.keys(calculatedAtt);\n        let index = calculatedAtt[attrKeys[0]].rows.map(m=> m['nodeLabels']).indexOf(edge.V2);\n        edge.edgeLength = edgeLen.rows[i].x;\n        edge.node = edge.V2;\n        if(index > -1){ \n            attrKeys.forEach(attr=> {\n                if(calculatedAtt[attr].type == 'continuous'){\n                    let scale = calculatedScales.filter(f=> f.field == attr)[0].yScale;\n                    let res = calculatedAtt[attr].rows[index];\n                   // res.scaleVal = scale(res.estimate);\n                   // res.scaledLow = scale(res.lowerCI95);\n                    //res.scaledHigh = scale(res.upperCI95);\n                    res.realVal = res.estimate;\n                    res.type = 'continuous';\n                    edge.attributes = (edge.attributes != undefined)? edge.attributes : {};\n                    edge.attributes[attr] = res;\n                }else{\n                    let scales = calculatedScales.filter(f=> f.field == attr)[0].scales;\n                    let row = calculatedAtt[attr].rows[index];\n                    let states = scales.map(s=> {\n                       // return {'state': s.scaleName,  scaleVal: s.yScale(row[s.scaleName]), realVal: row[s.scaleName]};\n                        return {'state': s.scaleName, realVal: row[s.scaleName]};\n                    });\n                    edge.attributes = (edge.attributes != undefined)? edge.attributes : {};\n                    edge.attributes[attr] = {'states':states, 'type': 'discrete'};\n                }\n            });\n        }\n        return edge;\n    });\n\n}\n\nexport function normPaths(paths, calculatedAtt, calculatedScales){\n    paths.forEach((p, i)=> {\n        p[0].attributes = {};\n        Object.keys(calculatedAtt).map(att=> { \n            if(calculatedAtt[att].type == 'continuous'){\n                let root = calculatedAtt[att].rows.filter(f=> (f.nodeLabels == p[0].node) || (f.nodeLabels == ('node ' + p[0].node)))[0];\n                p[0].attributes[att] = {};\n                \n                let scale = calculatedScales.filter(f=> f.field == att)[0].yScale;\n            \n                p[0].attributes[att].realVal = root.estimate;\n                p[0].attributes[att].upperCI95 = root.upperCI95;\n                p[0].attributes[att].lowerCI95 = root.lowerCI95;\n                p[0].attributes[att].scale = scale;\n                p[0].attributes[att].type = 'continuous';\n            }else if(calculatedAtt[att].type == 'discrete'){\n                let root = calculatedAtt[att].rows.filter(f=> f.nodeLabels == p[0].node)[0];\n                let scales = calculatedScales.filter(f=> f.field == att)[0].scales;\n                let rootAttr = scales.map(s=> {\n                    //return {'state': s.scaleName,  scaleVal: s.yScale(root[s.scaleName]), realVal: root[s.scaleName]};\n                    return {'state': s.scaleName, realVal: root[s.scaleName]};\n                });\n                p[0].attributes[att] = {'states':rootAttr, 'type': 'discrete'};\n               \n            }else{\n                console.error('type not found');\n            }\n        });\n    });\n    \n    let maxBranch = d3.max(paths.map(r=> r.length));\n\n    //SCALES for X, Y /////\n    let xScale = d3.scaleLinear().range([0, 1000]).clamp(true);\n \n    let normedPaths = paths.map((p, i)=> {\n        p.xScale = xScale.domain([0, maxBranch - 1]);\n     \n        let leafIndex = p.length - 1;\n        let lengths = p.map(l=> l.edgeLength);\n        let prevStep = 0;\n        return p.map((m, j)=> {\n            let node = Object.assign({}, m);\n            //INTEGRATE THE DISTNACES HERE WHEN THEY WORK\n            let step = node.edgeLength + prevStep;\n            node.edgeMove = (j < leafIndex) ? step : 1;\n            prevStep = prevStep + node.edgeLength;\n         \n            node.move = (j < leafIndex) ? p.xScale(j) : p.xScale(maxBranch - 1);\n        \n            return node;\n        });\n    });\n\n    return normedPaths;\n}\n\nexport function filterKeeper(){\n\n    this.filterArray = new Array();\n    this.attributeFilter = false;\n\n    this.addFilter = function(filter){\n        this.filterArray.push(filter);\n        return this.filterArray;\n    };\n    this.removeFilter = function(index){\n        this.filterArray = this.filterArray.filter((f, i)=> i != index);\n        return this.filterArray;\n    };\n}\n\nexport function formatAttributeData(pathData, scales, filterArray){\n\n    let keys = (filterArray == null)? Object.keys(pathData[0][0].attributes): filterArray;\n   \n    let newData = pathData.map(path=> {\n        return keys.map((key)=> {\n            return path.map((m)=> {\n                let speciesLabel = path[path.length - 1].label;\n                if(m.attributes[key].type === 'continuous'){\n                    m.attributes[key].species = speciesLabel;\n                    m.attributes[key].color = scales.filter(f=> f.field === key)[0].catColor;\n                    m.attributes[key].move = m.move;\n                    m.attributes[key].node = m.node;\n                    m.attributes[key].edgeMove = m.edgeMove;\n                    m.attributes[key].label = key;\n                    m.attributes[key].yScale = scales.filter(s=> s.field === key)[0].yScale;\n                    m.attributes[key].satScale = scales.filter(s=> s.field === key)[0].satScale;\n                    m.attributes[key].colorScale = scales.filter(s=> s.field === key)[0].colorScale;\n                    return m.attributes[key];\n                }else if(m.attributes[key].type === 'discrete'){\n                    if(m.leaf){\n                        let state = m.attributes[key];\n                        state.species = speciesLabel;\n                        state.winState = m.attributes[key].states.filter(f=> f.realVal === 1)[0].state;\n                        state.color = scales.filter(f=> f.field === key)[0].stateColors.filter(f=> f.state === state.winState)[0].color;\n                        state.move = m.move;\n                        state.node = m.node;\n                        state.edgeMove = m.edgeMove;\n                        state.attrLabel = key;\n                        return state;\n                    }else{\n                        let states = m.attributes[key].states ? m.attributes[key].states : m.attributes[key];//.filter(f => f.state != undefined);\n                        return states.map((st, j)=> {\n                            st.color = scales.filter(f=> f.field === key)[0].stateColors.filter(f=> f.state === st.state)[0].color;\n                            st.move = m.move;\n                            st.node = m.node;\n                            st.edgeMove = m.edgeMove;\n                            st.attrLabel = key;\n                            st.species = speciesLabel;\n                            return st;\n                        });\n                    }\n             \n                }else{\n                    console.error('attribute type not found');\n                }\n            });\n        });\n    });\n    return newData;\n}","/**\n * \n * @param {array of all graph edges} edgeArray \n * @param {array of leaf nodes in graph} leafArray \n * @param {string for property} source\n * @param {string for property} target  \n */\nexport function allPaths(edgeArray, leafArray, source, target){\n    return leafArray.map(le=> getPath(edgeArray, le, [le], source, target));\n}\n\nexport function getNested(node, edgeArray){\n    node.children = edgeArray.filter(f=> String(f.V1) === String(node.node));\n    node.name = String(node.node);\n    if(node.children.length > 0){\n        node.children.forEach(c=> getNested(c, edgeArray));\n    }else{\n        return node;\n    }\n    return node;\n}\n\nexport function calculateMovingAverage(data, i) {\n\n    if (movingAverage === 0) {\n        return data[i][yValue];\n    }\n\n    var count = Math.min(movingAverage, i + 1),\n        first = i + 1 - count;\n\n    var sum = 0;\n    for (var index = first; index <= i; ++index) {\n        var x = data[index][yValue];\n        sum += x;\n    }\n\n    return sum / count;\n};\n\nexport function calculateMovingStandardDeviation(data, i, avg) {\n\n    if (movingAverage === 0) {\n        return 0;\n    }\n\n    var count = Math.min(movingAverage, i + 1),\n        first = i + 1 - count;\n\n    var sum = 0;\n    for (var index = first; index <= i; ++index) {\n        var x = data[index][yValue];\n        var dx = x - avg;\n        sum += (dx * dx);\n    }\n\n    var variance = sum / count;\n    return Math.sqrt(variance);\n};\n\n/**\n * \n * @param {array of all graph edges} edgeArray \n * @param {one row of the leaf array} leaf \n * @param {array that holds the constructed path} pathKeeper \n * @param {string for source header} source (V1)\n * @param {string for target header} target (V2)\n */\nexport function getPath(edgeArray, leaf, pathKeeper, source, target){\n    let path = edgeArray.filter(ed=> {\n        return ed[target] === leaf[source];\n    });\n    if(path.length > 0){\n        pathKeeper.push(path[0]);\n        return getPath(edgeArray, path[0], pathKeeper, source, target);\n    }else{\n        pathKeeper.push({'root': true, 'node': leaf[source], 'edgeLength': 0.0});\n        return pathKeeper.reverse();\n    }\n}\n/**\n * \n * @param {*} pathArray \n * @param {*} nodes \n * @param {*} arrayOfArray \n * @param {*} nameArray \n * @param {*} depth \n */\nexport function pullPath(pathArray, nodes, arrayOfArray, nameArray, depth){\n    nodes.forEach((node, i)=> {\n        node.depth = depth;\n        node.id = depth + '.' + i;\n        if(notEmpty(node.children)){\n            pathArray.push(node);\n            pullPath([...pathArray], node.children, arrayOfArray, nameArray, depth+1);\n        }else{\n            nameArray.push(node.node_data['node name']);\n            node.flag = true;\n            arrayOfArray.push([...pathArray, node]);\n        }\n    });\n    return arrayOfArray;\n}\n\nfunction notEmpty(childArray){\n    if(childArray == undefined){\n        return false;\n    }else if(childArray.length == 0){\n        return false;\n    }else{\n        return true;\n    }\n}\n","import '../styles/index.scss';\nimport {formatAttributeData} from './dataFormat';\nimport * as d3 from \"d3\";\nimport {filterMaster} from './filterComponent';\nimport {dataMaster} from './index';\nimport * as d3Array from 'd3-array'\n\nexport function drawBranchPointDistribution(data, svg){\n\n    let branchBar = svg.append('g').classed('branch-bar', true).attr('transform', 'translate(10, 10)');\n    branchBar.append('rect').classed('point-dis-rect', true).attr('height', 25).attr('x', -10).attr('y', -10).attr('fill', '#fff');\n\n    branchBar.append('line').attr('y1', 2).attr('y2', 2).attr('x1', '100').attr('x2', 890).attr('stroke', 'gray').attr('stroke-width', .25)\n    branchBar.append('text').text('Root').attr('transform', 'translate(70, 7)');\n    let leafLabel = branchBar.append('g').classed('leaf-label', true).attr('transform', 'translate(950, 7)');\n    leafLabel.append('text').text('Leaves');\n\n    let nodeLengthArray = [];\n    let nodeDuplicateCheck = []\n\n    data.map(path=> {\n        path.filter(n=> n.leaf != true).map(node=> {\n            if(nodeDuplicateCheck.indexOf(node.node) == -1){\n                nodeDuplicateCheck.push(node.node);\n                nodeLengthArray.push({'node': node.node, 'eMove': node.edgeMove });\n            }\n        })\n    });\n\n    let bPointScale = d3.scaleLinear().domain([0, 1]).range([0, 795]);\n    let pointGroups = branchBar.selectAll('g.branch-points').data(nodeLengthArray).join('g').attr('class', (d, i)=> d.node).classed('branch-points', true);\n    pointGroups.attr('transform', (d, i) => 'translate('+(105 + bPointScale(d.eMove))+', 0)');\n    pointGroups.append('circle').attr('r', 5).attr('fill', \"rgba(123, 141, 153, 0.5)\");\n\n    return branchBar;\n}\n\nexport function groupDistributions(pathData, mainDiv, scales){\n\n\n    let clades = Array.from(new Set(pathData.map(path=> path.filter(f=> f.leaf === true)[0].clade === \"\" ? \"Anolis\" : \"Norops\")));\n \n    let pathGroups = clades.map(clade => {\n        let group = pathData.filter(path => {\n         path[path.length - 1].clade === \"Norops\" ? path[path.length - 1].clade = \"Norops\" : path[path.length - 1].clade = \"Anolis\" ; \n         return path[path.length - 1].clade === clade});\n        return {'label': clade, 'paths': group }\n    });\n \n    let groupDivs = mainDiv.selectAll('.group-div').data(pathGroups).join('div').classed('group-div', true);\n\n    groupDivs.each((d, i, n)=> {\n        let group = d3.select(n[i]);\n        group.style('text-align', 'center');\n        group.append('text').text(d.label);\n        group.append('text').text(\" Shown:\" + d.paths.length);\n        renderDistibutions(d.paths, d3.select(n[i]), scales);\n    });\n\n    \n}\n\nexport function renderDistibutions(pathData, mainDiv, scales){\n    \n    let observedWidth = 200;\n    let predictedWidth = 800;\n    let height = 90;\n    let margin = 20;\n\n    let attrHide = filterMaster.filter(f=> f.type === 'hide-attribute').map(m=> m.attribute);\n    let keys = Object.keys(pathData[0][0].attributes).filter(f=> attrHide.indexOf(f) === -1);\n    let newNormed = [...pathData];\n    let keysToHide = attrHide.length > 0 ? scales.filter(f=> attrHide.indexOf(f.field) === -1).map(m=> m.field) : null;\n\n    formatAttributeData(newNormed, scales, keysToHide);\n\n    let maxBranch = d3.max(newNormed.map(p=> p.length)) - 1;\n    let medBranchLength = d3.median(newNormed.map(p=> p.length));\n/*\n    let normBins = new Array(medBranchLength).fill().map((m, i)=> {\n        let step = 1 / medBranchLength;\n        let base = (i * step);\n        let top = ((i + 1)* step);\n        return {'base': base, 'top': top, 'binI': i }\n    });*/\n\n    let normBins = new Array(medBranchLength).fill().map((m, i)=> {\n  \n            let step = 1 / medBranchLength;\n            let base = (i * step);\n            let top = ((i + 1)* step);\n            return {'base': base, 'top': top, 'binI': i }\n        \n       \n    });\n\n    let internalNodes = newNormed.map(path => path.filter(node=> node.leaf != true));\n    //let internalNodes = newNormed.map(path => path.filter(node=> node.leaf != true && node.root != true));\n    let leafNodes = newNormed.flatMap(path => path.filter(node=> node.leaf === true));\n    let rootNodes = newNormed.flatMap(path => path.filter(node=> node.root === true));\n\n    normBins.map((n, i)=> {\n        let edges = internalNodes.flatMap(path => path.filter(node=> {\n          \n                return node.edgeMove > n.base && node.edgeMove <= n.top;\n            \n        } ));\n        n.data = edges;\n        return n;\n    });\n\n\n    let sortedBins = keys.map(key=> {\n        let scale = scales.filter(f=> f.field === key)[0];\n        let mapNorm = normBins.map(bin => {\n\n            if(bin.data.length > 0){\n                bin.fData = bin.data.map(d=> {\n                    return d.attributes[key];\n                })\n            }else{\n                bin.fData = [];\n            }\n            return {'data': bin.fData, 'range': [bin.base, bin.top], 'index': bin.binI, 'key': key };\n        });\n       \n        let leafAttr = leafNodes.map(m=> m.attributes[key]);\n        let leafData = {'data': leafAttr}\n   \n        if(scale.type === 'continuous'){\n         \n           // let max = d3.max(mapNorm.flatMap(m=> m.data).map(v=> v.realVal));\n           // let min = d3.min(mapNorm.flatMap(m=> m.data).map(v=> v.realVal));\n           \n            let x = d3.scaleLinear().domain([scale.min, scale.max]).range([0, height]);\n    \n            let histogram = d3.histogram()\n            .value(function(d) { return d.realVal; })  \n            .domain(x.domain())  \n            .thresholds(x.ticks(20)); \n  \n            mapNorm.forEach(n=> {\n                n.type = scale.type;\n                n.bins = histogram(n.data);\n                n.domain = [scale.max, scale.min];\n                return n;\n            });\n\n            //Histogram for observed////\n            let maxO = d3.max(leafAttr.flatMap(v=> v.realVal));\n            let minO = d3.min(leafAttr.flatMap(v=> v.realVal));\n            let xO = d3.scaleLinear().domain([minO, maxO]).range([0, height])\n\n            let histogramO = d3.histogram()\n            .value(function(d) { return d.realVal; })  \n            .domain(xO.domain())  \n            .thresholds(xO.ticks(20)); \n\n            leafData.bins = histogramO(leafAttr);\n\n            let newK = {'key': key, 'branches': [...mapNorm], 'type': scale.type, 'leafData': leafData, 'rootData': rootNodes.map(m=> m.attributes[key])[0]}\n            return newK;\n\n        }else{\n\n            let states = leafAttr[0].states;\n            mapNorm.bins = null\n            leafData.bins = states.map(s=> leafAttr.filter(f=> f.winState === s.state));\n            let x = d3.scaleLinear().domain([0, 1]).range([0, height]);\n            \n            mapNorm.map(n=> {\n                n.type = scale.type;\n                let colors = scale.stateColors;\n                n.bins = states.map(state=> {\n                    let color = colors.filter(f=> f.state === state.state);\n                  \n                    let chosen = n.data.flatMap(m=> m.states.filter(f=> f.state === state.state)).map(v=> v.realVal);\n                    let average = d3.mean(chosen);\n                    let stDev = d3.deviation(chosen);\n                    return {'state': state.state, 'average': average, 'stDev': stDev, 'stUp': average + stDev, 'stDown': average - stDev, 'color': color[0].color, 'range': n.range }\n                });\n                \n                return n;\n            });\n            let test = states.map(stat=> {\n                let key = stat.state;\n                return mapNorm.flatMap(m=> {\n                    return m.bins.filter(f=> f.state === key);\n                });\n            });\n            let newK = {'key': key, 'branches': [...mapNorm], 'type': scale.type, 'leafData': leafData, 'states': test, 'rootData': rootNodes.map(m=> m.attributes[key])[0]}\n            return newK;\n        }\n    });\n\n    ///////RENDERING//////////\n    \n    let branchScale = d3.scaleLinear().domain([0, medBranchLength]).range([0, 760]);\n\n    //let dataCount = mainDiv.append('div').classed('species-count', true);\n    //dataCount.append('text').text(\"Shown: \"+ pathData.length + \" /\"+ dataMaster[0].length);\n\n    let svg = mainDiv.append('svg');\n    svg.attr('id', 'main-summary-view');\n    svg.attr('height', (keys.length * (height + 25)));\n\n    let branchBar = drawBranchPointDistribution(newNormed, svg);\n    let pointGroups = branchBar.selectAll('g.branch-points');\n  \n    let wrap = svg.append('g').classed('summary-wrapper', true);\n    wrap.attr('transform', 'translate(10, 50)');\n\n    let binnedWrap = wrap.selectAll('.attr-wrap').data(sortedBins).join('g').attr('class', d=> d.key + ' attr-wrap');\n    binnedWrap.attr('transform', (d, i)=>  'translate(0,'+(i * (height + 5))+')');\n    \n    let label = binnedWrap.append('text').text(d=> d.key).attr('y', 40).attr('x', 80).style('text-anchor', 'end');\n\n    let predictedWrap = binnedWrap.append('g').classed('predicted', true);\n    predictedWrap.attr('transform', 'translate(25, 0)')\n\n    let root = predictedWrap.selectAll('g.root').data(d=> {\n        return [d.rootData]}).join('g').classed('root', true);\n    \n        root.attr('transform', `translate(60,0)`);\n\n    let contRoot = root.filter(f=> f.type === \"continuous\");\n    \n    contRoot.append('rect').attr('height', 90).attr('width', 12).attr('fill', '#fff').style('stroke-width', '0.5px').style('stroke', 'black')//.attr('x', 70);\n\n    let rootRange = contRoot.append('rect')\n        .attr('width', 12)\n        .attr('height', d=> {\n            let newy = d.yScale;\n            newy.range([80, 0]);\n            return newy(d.lowerCI95) - newy(d.upperCI95)\n        }).attr('transform', (d, i) => {\n            let newy = d.yScale;\n            newy.range([80, 0]);\n            return 'translate(0,'+newy(d.upperCI95)+')'\n        }).style('opacity', 0.5).attr('fill', \"rgba(133, 193, 233)\");\n\n        let rootAv = contRoot.append('rect').attr('width', 12).attr('height', 3);\n    \n        rootAv.attr('transform', (d, i) => {\n                let newy = d.yScale;\n                newy.range([height, 0]);\n                let mean = d.realVal;\n                return 'translate(0,'+newy(mean)+')';\n      \n        }).attr('fill', '#004573');\n\n        let disRoot = root.filter(f=> f.type === \"discrete\");\n\n        let disRects = disRoot.selectAll('rect.dist').data(d=> {\n            let sorted = d.states.sort((a, b)=> a.realVal - b.realVal);\n            return sorted;\n        }).join('rect').classed('dist', true).attr('width', 12).attr('height', (d)=>{\n            let scale = d3.scaleLinear().domain([0, 1.0]).range([0, 80]).clamp(true);\n            d.height = scale(d.realVal);\n            return scale(d.realVal);\n        })\n        .attr('transform', (d, i, n) => {\n            let move = d3.selectAll(n).filter((f, j)=> j < i).data().map(m=> m.height);\n            return `translate(0, ${2 + d3.sum(move) * 1.2})`})\n        .attr('fill', d=> d.color).style('opacity', 0.9)\n\n        disRects.on('mouseover', (d, i, n)=> {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(200)\n              .style(\"opacity\", .9);\n            let f = d3.format(\".3f\");\n            tool.html(d.state + \": \" + f(d.realVal))\n              .style(\"left\", (d3.event.pageX + 10) + \"px\")\n              .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            })\n          .on(\"mouseout\", function(d) {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(500)\n              .style(\"opacity\", 0);\n            });\n        \n\n    let pathGroup = predictedWrap.append('g').classed('path-wrapper', true);\n\n    //let branchGroup = predictedWrap.selectAll('g.branch-bin').data(d=> d.branches).join('g').classed('branch-bin', true);\n\n    let branchGroup = predictedWrap.selectAll('g.branch-bin').data(d=> {\n        return d.branches}).join('g').classed('branch-bin', true);\n    branchGroup.attr('transform', (d, i)=> 'translate('+(100 + branchScale(i))+', 0)');\n\n    let continDist = branchGroup.filter(f=> f.type === 'continuous');\n\n    continDist.on('mouseover', (d, i, node)=> {\n        let list = d.data.map(m=> m.nodeLabels);\n        let selected = pointGroups.filter(p=> list.indexOf(p.node) > -1).classed('selected', true);\n        let treeNode  = d3.select('#sidebar').selectAll('.node');\n        let selectedBranch = treeNode.filter(f=> list.indexOf(f.data.node) > 0).classed('selected-branch', true);\n        let y = d3.scaleLinear().domain(d.domain).range([0, height])\n        let axis = d3.select(node[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(5));\n    }).on('mouseout', (d, i, node)=> {\n        d3.selectAll(\".branch-points.selected\").classed('selected', false);\n        d3.selectAll('.selected-branch').classed('selected-branch', false);\n        d3.select(node[i]).select('.y-axis').remove();\n    });\n\n    var lineGen = d3.area()\n    .curve(d3.curveCardinal)\n    .x((d, i, n)=> {\n        let y = d3.scaleLinear().domain([0, n.length - 1]).range([0, height]).clamp(true);\n        return y(i); \n    })\n    .y0(d=> {\n        return 0;\n    })\n    .y1(d=> {\n        let dat = Object.keys(d).length - 1\n        let x = d3.scaleLinear().domain([0, 50]).range([0, 80]).clamp(true);\n        return x(dat); \n    });\n\n    continDist.each((d, i, nodes)=> {\n        let distrib = d3.select(nodes[i]).selectAll('g').data([d.bins]).join('g').classed('distribution', true);\n        distrib.attr('transform', 'translate(11, '+height+') rotate(-90)');\n        let path = distrib.append('path').attr('d', lineGen);\n        path.attr(\"fill\", \"rgba(133, 193, 233, .4)\")\n        .style('stroke', \"rgba(133, 193, 233, .9)\");\n    });\n\n    let contRect = continDist.append('rect').attr('height', height).attr('width', 10).style('fill', 'none').style('stroke', 'gray');\n\n    let rangeRect = continDist.selectAll('rect.range').data(d=> {\n        let newData = d.data.map(m=> {\n            m.range = d.range;\n            return m;\n        })\n        return newData}).join('rect').classed('range', true);\n\n    rangeRect.attr('width', 10);\n    rangeRect.attr('height', (d, i)=> {\n        if(d.yScale != undefined){\n            let newy = d.yScale;\n            newy.range([80, 0]);\n            return newy(d.lowerCI95) - newy(d.upperCI95)\n        }else{\n            return 0;\n        }\n    }).attr('transform', (d, i) => {\n        let newy = d.yScale;\n        newy.range([80, 0]);\n        return 'translate(0,'+newy(d.upperCI95)+')'\n    });\n\n    rangeRect.attr('fill', \"rgba(133, 193, 233, .05)\");\n\n    let avRect = continDist.append('rect').attr('width', 10).attr('height', (d, i)=> {\n        if(d.data[0] != undefined){\n            return 3;\n        }else{\n            return 0;\n        }\n    });\n\n    avRect.attr('transform', (d, i) => {\n        if(d.data[0] != undefined){\n            let newy = d.data[0].yScale;\n            newy.range([height, 0]);\n            let mean = d3.mean(d.data.map(m=> m.realVal));\n            return 'translate(0,'+newy(mean)+')';\n        }else{\n            return 'translate(0,0)';\n        }\n    }).attr('fill', '#004573');\n\n    let discreteDist = branchGroup.filter(f=> f.type === 'discrete');\n    let discreteLine = discreteDist.append('line').attr('x0', 2).attr('x1', 2).attr('y0', 0).attr('y1', height).attr('stroke', 'gray').attr('stroke-width', 0.5);\n    let hoverRect = discreteDist.append('rect').attr('height', height).attr('width', 10).attr('opacity', 0);\n    discreteDist.on('mouseover', (d, i, n)=> {\n        let y = d3.scaleLinear().domain([1, 0]).range([0, height]);\n        d3.select(n[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(3));\n        let selected = pointGroups.filter(f=> f.eMove >= d.range[0] && f.eMove < d.range[1]).classed('selected', true);\n        let treeNode  = d3.select('#sidebar').selectAll('.node');\n      \n        treeNode.filter(node=> node.data.combEdge >= d.range[0] && node.data.combEdge < d.range[1]).classed('selected-branch', true);\n\n    }).on('mouseout', (d, i, n)=> {\n        d3.select(n[i]).select('.y-axis').remove();\n        d3.selectAll(\".branch-points.selected\").classed('selected', false);\n        d3.selectAll('.selected-branch').classed('selected-branch', false);\n    })\n\n    let discreteBinWrap = predictedWrap.filter(f=> f.type === 'discrete');\n    let stateGroups = discreteBinWrap.selectAll('.path-wrapper').selectAll('g.state').data(d=> d.states).join('g').classed('state', true);\n    discreteBinWrap.append('line').attr('x1', 100).attr('x2', 900).attr('y1', 48).attr('y2', 48).attr('stroke-width', 0.3).attr('stroke', 'black')\n    stateGroups.append('path').attr('d', (p, i)=> {\n        var lineGenD = d3.area()\n        .curve(d3.curveCardinal)\n        .x((d, i)=> {\n            let y = d3.scaleLinear().domain([0, 9]).range([0, predictedWidth + 100]);\n            return y(i); \n        })\n        .y0(d=> {\n            let x = d3.scaleLinear().domain([0, 1]).range([80, 0]).clamp(true);\n            return x(d.stDown);\n        })\n        .y1(d=> {\n            let x = d3.scaleLinear().domain([0, 1]).range([80, 0]).clamp(true);\n            return x(d.stUp); \n        });\n        return lineGenD(p);\n\n    }).attr('transform', 'translate(100, 10)').attr('fill', (d, i)=> {\n        return d[0] ? d[0].color : '#fff';\n    }).attr('opacity', 0.3);\n\n    stateGroups.append('path').attr('d', (p, i)=> {\n        var lineGen = d3.line()\n        .curve(d3.curveCardinal)\n        .x((d, i)=> {\n            let y = d3.scaleLinear().domain([0, 9]).range([0, predictedWidth + 100]);\n            return y(i); \n        })\n        .y(d=> {\n            let x = d3.scaleLinear().domain([0, 1]).range([80, 0]).clamp(true);\n            return x(d.average); \n        });\n        return lineGen(p);\n\n    }).attr('transform', 'translate(100, 10)').attr('fill', 'none').attr('stroke', (d, i)=> {\n        return d[0] ? d[0].color : '#fff';\n    });\n\n    ////OBSERVED CONTIUOUS/////\n\n    let observedWrap = binnedWrap.append('g').classed('observed', true);\n    observedWrap.attr('transform', 'translate('+ (predictedWidth + 150) +', 0)')\n\n    let contOb = observedWrap.filter(f=> f.type === 'continuous');\n\n    let contBars = contOb.selectAll('g.ob-bars').data(d=> {\n        return d.leafData.bins}).join('g').classed('ob-bars', true);\n\n    let cRects = contBars.append('rect').attr('width', (d, i, n)=> {\n        let width = observedWidth / n.length;\n        return width;\n    }).attr('height', (d, i)=> {\n        let y = d3.scaleLinear().domain([0, Object.keys(d).length]).range([(height - margin), 0])\n        return y(Object.keys(d).length - 2)\n    }).attr('fill', 'rgba(133, 193, 233, .5)');\n\n    contBars.attr('transform', (d, i, n)=> {\n        let movex = observedWidth / n.length;\n        let y = d3.scaleLinear().domain([0, Object.keys(d).length]).range([(height - margin), 0])\n        let movey = height - y(Object.keys(d).length - 2);\n        return 'translate('+(movex * i)+', '+movey+')'});\n\n    contOb.each((d, i, nodes)=> {\n        let xvalues = d.leafData.data.map(m=> m.realVal);\n        let x = d3.scaleLinear().domain([d3.min(xvalues), d3.max(xvalues)]).range([0, observedWidth])\n        let y = d3.scaleLinear().domain([0, d3.max(d.leafData.bins.map(b=> Object.keys(b).length)) - 2]).range([(height - margin), 0]);\n        d3.select(nodes[i]).append('g').classed('x-axis', true).call(d3.axisBottom(x)).attr('transform', 'translate(0, '+height+')');\n        d3.select(nodes[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(4)).attr('transform', 'translate(0, '+margin+')');\n    });\n    \n////Observed Discrete////\n    let discOb =  observedWrap.filter(f=> f.type === 'discrete');\n    let discBars = discOb.selectAll('g.ob-bars').data(d=> {\n        return d.leafData.bins}).join('g').classed('ob-bars', true);\n    let dRects = discBars.append('rect').attr('width', (d, i, n)=> {\n        let width = observedWidth / n.length;\n        return width;\n    }).attr('height', (d, i, n)=> {\n        let y = d3.scaleLinear().domain([0, 100]).range([(height -margin), 0])\n        return y(d.length)\n    }).attr('fill', (d, i) => {\n        return d[0] != undefined ? d[0].color : '#fff';\n    }).attr('opacity', 0.3);\n\n    discBars.attr('transform', (d, i, n)=> {\n        let movex = observedWidth / n.length;\n        let y = d3.scaleLinear().domain([0, 100]).range([(height - margin), 0])\n        let movey = (height) - y(d.length);\n        return 'translate('+(movex * i)+', '+movey+')'});\n\n    dRects.on('mouseover', (d, i, n)=> {\n        let state = d3.select('g.'+d[0].label).selectAll('g.state');\n        state.filter(f=> f[0].state === d[0].winState).attr('opacity', 0.8);\n        state.filter(f=> f[0].state != d[0].winState).attr('opacity', 0.1);\n        d3.select(n[i]).attr('opacity', 0.9);\n    }).on('mouseout', (d, i, n)=> {\n        d3.select(n[i]).attr('opacity', 0.3);\n        let state = d3.select('g.'+d[0].label).selectAll('g.state').attr('opacity', 0.6);\n    })\n\n    discOb.each((d, i, nodes)=> {\n            let labels = d.leafData.bins.map(b=> {\n                return b[0] != undefined ? b[0].winState : '';\n                })\n            let xPoint = d3.scalePoint().domain(labels).range([0, observedWidth]).padding(.6)\n            let y = d3.scaleLinear().domain([0, 100]).range([(height - margin), 0]);\n            d3.select(nodes[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(5)).attr('transform', 'translate(0, '+margin+')');\n            d3.select(nodes[i]).append('g').classed('x-axis', true).call(d3.axisBottom(xPoint)).attr('transform', 'translate(0, '+height+')');\n    });\n\n\n}\n","import * as d3 from \"d3\";\nimport { branchPaths, renderPaths, renderAttributes, drawContAtt, drawDiscreteAtt, drawPathsAndAttributes } from './renderPathView';\nimport { formatAttributeData } from './dataFormat';\nimport { filterMaster } from './filterComponent';\nimport { dataMaster, collapsed, colorKeeper } from './index';\nimport { renderDistibutions } from \"./distributionView\";\n\nexport let selectedPaths = [];\nexport let comparisonKeeper = [];\n\nexport function pathSelected(selectedPath, otherPaths, scales) {\n\n    let selectedDiv = d3.select('div#selected');\n    let main = d3.select('div#main');\n    if (selectedPath === null) {\n\n        selectedPaths = [];\n\n        d3.select('div#selected').selectAll('*').remove();\n        selectedDiv.style('height', 0);\n        d3.select('div#main').style('padding-top', '0px');\n        let main = d3.select('div#main');\n        drawPathsAndAttributes([...otherPaths], main, scales, false);\n\n    } else {\n      \n        selectedPaths = selectedPaths.concat(selectedPath);\n        let commonNodes = renderSelectedView([...selectedPaths], [...otherPaths], selectedDiv, scales);\n        let sortedPaths = sortOtherPaths([...selectedPaths], [...otherPaths], [...commonNodes]);\n        \n        /// LOWER ATTRIBUTE VISUALIZATION ///\n        let pathGroups = drawPathsAndAttributes(sortedPaths.map(s => s.data), main, scales, false);\n\n        main.style('padding-top', '250px');\n    }\n}\nfunction getCommonNodes(paths){\n    let maxBranch = d3.max(paths.map(p => p.length));\n    let longestBranch = paths.filter(path => path.length === maxBranch)[0];\n    let startBranch = longestBranch.filter(f=> f.leaf != true);\n    let commonNodeStart = startBranch;\n    //FIND THE COMMON BRANCHES BETWEEN ALL OF THE SELECTED///\n    paths.map(path => {\n        commonNodeStart = [...path].filter(f => {\n            return (commonNodeStart.map(m => m.node).indexOf(f.node) > -1) & f.leaf != true });\n    });\n\n    let children = paths.map(path => {\n        path = (path[0].leaf === true) ? path.reverse() : path;\n        let nodeIndex = path.map(p => p.node);\n        let thresh = nodeIndex.indexOf(commonNodeStart[commonNodeStart.length - 1].node);\n        let subset = path.filter((f, i) => i > thresh);\n        return subset;\n    });\n\n    commonNodeStart[commonNodeStart.length - 1].children = children.map((path, i) => {\n        let max = d3.max(path.map(p => p.edgeMove)) - commonNodeStart[commonNodeStart.length - 1].edgeMove;\n        return path.map((chil, j, n) => {\n            chil.parentBase = commonNodeStart[commonNodeStart.length - 1].edgeMove;\n            chil.move = chil.edgeMove - commonNodeStart[commonNodeStart.length - 1].edgeMove;\n            chil.base = (j === 0) ? 0 : n[j - 1].edgeMove - commonNodeStart[commonNodeStart.length - 1].edgeMove;\n            let parentScale = d3.scaleLinear().domain([0, 1]).range([0, 1000])\n            let scaledParentMove = parentScale(commonNodeStart[commonNodeStart.length - 1].edgeMove);\n            chil.xScale = d3.scaleLinear().domain([0, max]).range([0, (1000 - scaledParentMove)]);\n            chil.level = i;\n            return chil;\n        });\n    });\n\n    return commonNodeStart;\n}\nexport function sortOtherPaths(pathData, otherPaths, commonNode) {\n\n    if(pathData.length > 1){\n\n        if(commonNode != null){\n\n            let chosenPath = commonNode.reverse().map(m => m.node);\n            let rankedPaths = otherPaths.map(path => {\n                let step = 0;\n                let test = path.reverse().map((node, i) => {\n                    if (chosenPath.indexOf(node.node));\n                    return { 'indexOf': chosenPath.indexOf(node.node), 'pathIndex': i, 'node': node, 'chosen': chosenPath[chosenPath.indexOf(node.node)] };\n                }).filter(f => f.indexOf > -1);\n                let distance = (test[0].indexOf + test[0].pathIndex);\n                return { 'data': path.reverse(), 'distance': distance };\n            });\n            let sortedData = rankedPaths.sort(function(a, b) { return a.distance - b.distance; });\n        \n            return sortedData;\n        }\n        console.error('multiple paths without common node');\n    }else{\n\n        let chosenPath = pathData[0].reverse().map(m => m.node);\n    \n        let rankedPaths = otherPaths.map(path => {\n            let step = 0;\n            let test = path.reverse().map((node, i) => {\n                if (chosenPath.indexOf(node.node));\n                return { 'indexOf': chosenPath.indexOf(node.node), 'pathIndex': i, 'node': node, 'chosen': chosenPath[chosenPath.indexOf(node.node)] };\n            }).filter(f => f.indexOf > -1);\n            let distance = (test[0].indexOf + test[0].pathIndex);\n            return { 'data': path.reverse(), 'distance': distance };\n        });\n        let sortedData = rankedPaths.sort(function(a, b) { return a.distance - b.distance; });\n        return sortedData;\n    }\n\n}\nfunction renderSelectedTopology(commonNodeStart, svg, scales, branchFrequency){\n\n        let selectWrap = svg.append('g').classed('select-wrap', true);\n        selectWrap.attr('transform', 'translate(0, 20)')\n\n        ///Scales for circles ///\n        let circleScale = d3.scaleLog().range([6, 14]).domain([1, d3.max(Object.values(branchFrequency))]);\n\n        let selectedGroups = selectWrap.selectAll('.paths').data([commonNodeStart]).join('g').classed('paths', true);\n\n        let pathBars = selectedGroups.append('rect').classed('path-rect', true);\n        pathBars.attr('y', -8);\n        pathBars.attr('height', (35 + (25 * commonNodeStart[commonNodeStart.length - 1].children.length)));\n\n        //////////\n        ///Selecting species\n        /////////\n        addRemoveBubble(selectedGroups, scales)\n\n        /////////\n        let timelines = selectedGroups.append('g').classed('time-line', true);\n        timelines.attr('transform', (d, i) => 'translate(145, 0)');\n\n        let lines = timelines.append('line')\n            .attr('x1', 0)\n            .attr('x2', (d, i) => {\n                let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n                return x(d[d.length - 1].edgeMove)\n            })\n            .attr('y1', 15)\n            .attr('y2', 15);\n\n        let nodeGroups = timelines.selectAll('.node').data((d) => d).join('g').classed('node', true);\n\n        nodeGroups.attr('transform', (d) => {\n            let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n            let distance = x(d.edgeMove);\n            return 'translate(' + distance + ', 10)';\n        });\n\n        nodeGroups.classed('common-node', true);\n\n        let childNodeWrap = nodeGroups.filter(c => c.children != undefined).selectAll('g.child').data(d => d.children).join('g').classed('child', true);\n\n        let childNodes = childNodeWrap.selectAll('g.node').data(d => d).join('g').classed('node', true)\n        childNodes.attr('transform', (d, i, n) => {\n            return 'translate(' + d.xScale(d.move) + ', ' + (d.level * 20) + ')';\n        });\n\n        childNodeWrap.append('path').attr('d', (d, i, n) => {\n            let pathArray = [{ 'x': 0, 'y': 0 }, { 'x': 0, 'y': i }];\n            d.map(m => {\n                pathArray.push({ 'x': m.xScale(m.move), 'y': m.level })\n            });\n            let line = d3.line()\n                .curve(d3.curveMonotoneY)\n                .x(function(d) {\n                    return d.x;\n                })\n                .y(d => (d.y * 20))\n            return line(pathArray);\n        }).attr('stoke-width', '2px').attr('fill', 'none').attr('stroke', 'gray');\n\n        childNodeWrap.on('mouseover', (d, i)=> {\n            let specArray = d.map(m=> m.species);\n            let hovers = nodeGroups.filter(n => n.node === d.node);\n            let commonHover = [...commonNodeStart].map(c=> c.node).concat(d.map(n=> n.node));\n            let treeNode = d3.select('#sidebar').selectAll('.node');\n            let treeLinks  = d3.select('#sidebar').selectAll('.link');\n            treeNode.filter(f => commonHover.indexOf(f.data.node) > -1).classed('hover', true);\n            treeLinks.filter(f => commonHover.indexOf(f.data.node) > -1).classed('hover', true);\n            return hovers.classed('hover-branch', true);\n        }).on('mouseout', (d, i)=> {\n            d3.selectAll('.hover').classed('hover', false);\n        });\n\n        let circle = nodeGroups.append('circle').attr('cx', 0).attr('cy', 0).attr('r', d => {\n            return circleScale(branchFrequency[d.node]);\n        }).attr('class', (d, i) => 'node-' + d.node);\n\n        let childCirc = childNodes.append('circle').attr('r', 7).attr('fill', 'red').attr('y', 5);\n\n        childCirc.on('mouseover', function(d, i) {\n            let hovers = nodeGroups.filter(n => n.node === d.node);\n            let treeNode = d3.select('#sidebar').selectAll('.node');\n            let selectedBranch = treeNode.filter(f => f.data.node === d.node).classed('selected-branch', true);\n            return hovers.classed('hover-branch', true);\n        }).on('mouseout', function(d, i) {\n            let hovers = nodeGroups.filter(n => n.node === d.node);\n            d3.selectAll('.selected-branch').classed('selected-branch', false);\n            return hovers.classed('hover-branch', false);\n        });\n\n        childNodes.filter(f => f.leaf === true).append('text').text(d => d.label).attr('x', 9).attr('y', 4);\n        //selectWrap.attr('transform', 'translate('+(50+(20 *commonNodeStart[commonNodeStart.length - 1].children.length))+')')\n       \n\n}\nexport function addRemoveBubble(group, scales){\n\n    let pathRemove = group.append('g').classed('x-icon', true);\n    pathRemove.attr('transform', 'translate(15, 10)');\n    pathRemove.append('circle').attr('r', 7).attr('fill', '#fff');\n    pathRemove.append('text').text('x').attr('transform', 'translate(-5, 5)');\n    pathRemove.style('cursor', 'pointer');\n    pathRemove.on('click', (d, i, n) => {\n        d3.selectAll('.high').classed('high', false);\n        d3.selectAll('.low').classed('low', false);\n        treeNodes.select('.selected').classed('selected', false);\n        pathSelected(null, dataMaster[0], scales);\n    });\n\n}\nexport function renderComparison(group, otherPaths, selectedDiv, scales){\n \n    let buttonGroupTest = selectedDiv.select('.button-wrap');\n    let buttonGroup = buttonGroupTest.empty() ? selectedDiv.append('div').classed('button-wrap', true) : buttonGroupTest;\n\n\n    \n    buttonGroup.style('display','inline-block').style('width', '900px').style('height', '50px');\n    let main = d3.select('div#main');\n    main.style('padding-top', '300px');\n\n    if(group != null){\n        let usedColors = comparisonKeeper.map(m=> m.groupColor);\n        let newColor = colorKeeper.find(c => usedColors.indexOf(c[0]) === -1);\n        group.groupColor = newColor[0];\n        comparisonKeeper.push(group);\n    }\n\n    if(comparisonKeeper.length > 1){\n        let compareButtonTest = d3.select('#toolbar').select('#compare-button');\n        let compareButton = compareButtonTest.empty() ? d3.select('#toolbar').append('button').text('Normal Mode').attr('id', 'compare-button').classed('btn btn-info', true) : compareButtonTest;\n        compareButton.on('click', ()=> {\n            compareButton.text() === \"Normal Mode\" ? compareButton.text('Compare Mode') : compareButton.text('Normal Mode');\n            renderComparison(null, otherPaths, selectedDiv, scales);\n        });\n    }\n\n    let comparisonCombined = scales.map((sc, i)=> {\n        let newAtt = {'field': sc.field, 'type': sc.type, 'data': []}\n        comparisonKeeper.map((com, i)=> {\n            let atts = formatAttributeData(com.data, scales, [sc.field]);\n           \n            let added = atts.flatMap(att=> {\n                return att.map(a => {\n                    return a.map(m=> {\n                        let standard = m.leaf === true ? 0 : (m.upperCI95 - m.realVal) / 2;\n                        m.variance = standard * standard;\n                        return m;\n                    });\n                })\n            })\n\n            newAtt.data.push({'group': {'first': com.first, 'second': com.second, 'color': com.groupColor}, 'data': sc.type === 'continuous' ? added : atts.flatMap(a=> a)});\n        })\n        return newAtt;\n    });\n\n    let button = buttonGroup.selectAll('button').data(comparisonKeeper).join('button').classed('btn btn-info', true).style('background', d=> d.groupColor);\n    button.selectAll('span').data(t=> [t]).join('span').text(t=> {\n        return t.first ? `${t.first[1]} / ${t.second[1]}` : t.state;\n    }).append('span').text(t=> t.data.length).classed(\"badge badge-light\", true)\n    \n    let xOut = button.selectAll('i').data(d=> [d]).join('i').classed('close fas fa-times', true).style('padding-left', '10px');\n    xOut.on('click', (d, i)=> {\n        let filteredComp = comparisonKeeper.filter(f=> f.groupColor != d.groupColor);\n        comparisonKeeper = filteredComp;\n        if(comparisonKeeper.length > 0){\n            renderComparison(null, otherPaths, selectedDiv, scales);\n        }else{\n            selectedDiv.selectAll('*').remove();\n            selectedDiv.style('height', '0px');\n            main.style('padding-top', '0px');\n        }\n    });\n\n    let selectedTest = selectedDiv.select('.comparison-svg');\n    let selectedTool = selectedTest.empty() ? selectedDiv.append('svg').classed('comparison-svg', true) : selectedTest;\n    selectedDiv.style('height', '300px').style('width', '100%');\n    selectedTool.style('height', '300px');\n\n    let attWraps = selectedTool.selectAll('.att-wrapper').data(comparisonCombined.filter(f=> f.type === 'continuous').map((com)=>{\n       \n        let max = d3.max(com.data.flatMap(d=> d.data.flatMap(m=> m.map(f=> f.upperCI95)))) + .2;\n        let min = d3.min(com.data.flatMap(d=> d.data.flatMap(m=> m.map(f=> f.lowerCI95)))) - .2;\n        \n        com.data.map(c=> {\n            let binLength = 6;\n            //let max = scales.filter(f=> f.field === com.field)[0].max;\n           // let min = scales.filter(f=> f.field === com.field)[0].min;\n            let normBins = new Array(binLength).fill().map((m, i)=> {\n                let step = 1 / binLength;\n                let base = (i * step);\n                let top = ((i+ 1)* step);\n                return {'base': base, 'top': top, 'binI': i, 'max': max, 'min':min }\n            });\n\n            let internalNodes = c.data.map(path => path.filter(node=> node.leaf != true));\n            let leafNodes = c.data.flatMap(path => path.filter(node=> node.leaf === true));\n\n            c.bins = normBins.map((n, i, nodes)=> {\n                let edges = internalNodes.flatMap(path => path.filter(node=> {\n                    return node.edgeMove >= n.base && node.edgeMove <= n.top;\n                } ));\n                n.data = edges;\n                let mean = d3.mean(edges.map(e=> e.realVal));\n                n.mean = mean === undefined ? normBins[i-1].mean : mean;\n                let standard = Math.sqrt(d3.mean(edges.map(e=> e.variance)));\n                n.meanStandard = edges.length === 0 ? 0 : standard;\n                let sigma2 = standard * 2;\n                n.upCon95 = mean === undefined ? normBins[i-1].upCon95 : mean + sigma2;\n                n.lowCon95 = mean === undefined ? normBins[i-1].lowCon95 : mean - sigma2;\n                return n;\n            });\n            c.leaves = leafNodes;\n           \n            return c;\n        })\n        \n        return com;\n    }));\n    attWraps.exit().remove();\n    let attWrapsEnter = attWraps.enter().append('g').classed('att-wrapper', true);\n\n    let attLabels = attWrapsEnter.append('text').text(d=> d.field).style('text-anchor', 'end')\n                    .style('font-size', '11px').attr('transform', 'translate(120, 35)');\n\n    attWraps = attWrapsEnter.merge(attWraps);\n    attWraps.attr('transform', (d, i)=> 'translate(0,'+(10+(i * 70))+')');\n\n    let innerWrap = attWraps.selectAll('g.inner-group').data(d=> [d]).join('g').classed('inner-group', true);\n    innerWrap.attr('transform', 'translate(150, 0)');\n    let wrapRect = innerWrap.selectAll('rect.outline-rect').data(d=> [d]).join('rect').classed('outline-rect', true)\n                    .attr('width', 800).attr('height', 60).attr('fill', '#fff').attr('stroke', 'gray');\n    \n    if(d3.select('#compare-button').empty() || d3.select('#compare-button').text() === \"Normal Mode\"){\n            let lineGen = d3.line()\n            .x((d, i)=> {\n                let x = d3.scaleLinear().domain([0, 5]).range([0, 800]);\n                return x(i);\n            })\n            .y(d=> {\n            let y = d3.scaleLinear().domain([d.min, d.max])\n                y.range([60, 1]);\n                return y(d.mean);\n    });\n\n    let pathGroups = innerWrap.selectAll('g.path-groups').data(d=> d.data).join('g').classed('path-groups', true);\n    pathGroups.selectAll('*').remove();\n    let paths = pathGroups.append('path').attr('d', d=> { \n        let scale = d.bins[0].data[0].yScale\n        d.bins = d.bins.map((b, i, n)=> {\n            if(b.mean === undefined){\n                b.mean = d.bins[i-1].mean;\n                d.missing = true;\n            }\n           \n            b.yScale = d3.scaleLinear().domain([b.min, b.max]).range([60, 1])\n            return b;\n        });\n        return lineGen(d.bins);\n    }).classed('path', true);\n\n    var areaG = d3.area()\n    .curve(d3.curveCardinal)\n    .x((d, i)=> {\n        let x = d3.scaleLinear().domain([0, 5]).range([0, 800]);\n        return x(i);\n    })\n    .y0(d=> {\n        let y = d.yScale;\n        y.range([60, 1]);\n     \n        return y(d.lowCon95);\n    })\n    .y1(d=> {\n        let y = d.yScale;\n        y.range([60, 1]);\n     \n        return y(d.upCon95); \n    });\n\n    let confGroups = innerWrap.selectAll('g.conf-groups').data(d=> d.data).join('g').classed('conf-groups', true);\n    confGroups.selectAll('*').remove();\n    let conf = confGroups.append('path').attr('d', d=> { \n        d.bins = d.bins.map((b, i, n)=> {\n            if(b.upCon95 === NaN){\n                b.upCon95 = d.bins[i-1].upCon95;\n                d.missing = true;\n            }\n            if(b.lowCon95 === NaN){\n                b.lowCon95 = d.bins[i-1].lowCon95;\n                d.missing = true;\n            }\n\n            return b;\n        });\n        return areaG(d.bins);\n    }).classed('path', true);\n\n    paths.style('fill', 'none');\n    paths.style('stroke', d=> d.group.color);\n    paths.style('stroke-width', '2px');\n\n    conf.style('fill', d=> d.group.color);\n    conf.style('opacity', 0.15);\n\n    let yAxisG = innerWrap.append('g').classed('y-axis', true);\n\n    innerWrap.on('mousemove', function(d, i) {\n     \n        let scale = d3.scaleLinear().domain([d.data[0].bins[0].min, d.data[0].bins[0].max]).range([1, 60]);\n        let axisGroupTest = d3.select(this).select('.y-axis');\n        let axisGroup = axisGroupTest.empty() ? d3.select(this).append('g').classed('y-axis', true) : axisGroupTest;\n        \n        if(d3.select('#compare-button').empty() || d3.select('#compare-button').text()==='Normal Mode'){\n            axisGroup.attr('transform', (d, i)=> 'translate('+(d3.mouse(this)[0] - 10)+',0)')\n            axisGroup.call(d3.axisLeft(scale).ticks(5));\n        }else{\n            let pathD = d3.select(this).select('.path-groups').selectAll('path');\n            let maxDiff = pathD.data().map(d=> d[0].maxDiff)[0];\n            \n            axisGroup.attr('transform', (d, i)=> 'translate('+(d3.mouse(this)[0] - 10)+',0)');\n            let newScale = d3.scaleLinear().domain([maxDiff, 0]).range([0, 60]);\n            axisGroup.call(d3.axisLeft(newScale).ticks(5));\n        }\n\n    \n    }).on('mouseleave', function(){\n        let axisGroup = d3.select(this).select('.y-axis');\n        axisGroup.remove();\n    });\n    \n}else{\n\n    innerWrap.selectAll('.path-groups').remove();\n    innerWrap.selectAll('g.conf-groups').remove();\n    let pathGroups = innerWrap.selectAll('g.path-groups').data(d=> {\n        let startBins = d.data[0].bins;\n        let difArray = [];\n        for(let i = 1; i < d.data.length; i ++){\n            let diffs = []\n            d.data[i].bins.map((b, j)=>{\n                if(b.mean === undefined){\n                    b.mean = d.data[i].bins[j-1].mean;\n                }\n                if(startBins[j].mean === undefined){\n                    startBins[j].mean = startBins[j-1].mean;\n                }\n                let maxDiff = d.data[0].bins[0].max - d.data[0].bins[0].min;\n                diffs.push({'diff':Math.abs(startBins[j].mean - b.mean), 'maxDiff': maxDiff});\n            });\n            difArray.push(diffs);\n        }\n        return difArray;\n    }).join('g').classed('path-groups', true);\n\n    let lineGen = d3.line()\n        .x((d, i)=> {\n            let x = d3.scaleLinear().domain([0, 5]).range([0, 800]);\n            return x(i);\n        })\n        .y(d=> {\n            let y = d3.scaleLinear().domain([0, d.maxDiff]).clamp(true);\n            y.range([60, 0]);\n            return y(d.diff);\n        });\n\n    let paths = pathGroups.append('path').attr('d', d=> { \n        return lineGen(d);\n    });\n\n    paths.style('fill', 'none');\n    paths.style('stroke', 'black');\n    paths.style('stroke-width', '2px');\n}\n\n/////////////////////////\nlet obsDistWrap = attWraps.selectAll('.observed-dist-wrap').data(d=> {\n  \n        let max = d3.max(d.data.flatMap(f=> f.leaves.map(m=> m.realVal)));\n        let min = d3.min(d.data.flatMap(f=> f.leaves.map(m=> m.realVal)));\n\n        let x = d3.scaleLinear().domain([min, max]).range([0, 200]);\n    \n        let histogram = d3.histogram()\n        .value(function(d) { return d.realVal; })  \n        .domain(x.domain())  \n        .thresholds(x.ticks(10)); \n        \n        let leafData = d.data.map(m=> {\n            let newLeaves = [...m.leaves].map(leaf => {\n                leaf.x = x;\n                leaf.group = m.group;\n                return leaf;\n            });\n            return {'binData':histogram(m.leaves), 'data': newLeaves, 'group': m.group, 'xScale': x};\n        });\n        return [{'data':leafData, 'xScale': x}];\n    }).join('g').classed('observed-dist-wrap', true);\n\n    obsDistWrap.attr('transform', 'translate(970, 0)');\n  \n    let xAxis = obsDistWrap.selectAll('g.axis-x').data(d=> [d]).join('g').classed('axis-x', true);\n    xAxis.attr('transform', 'translate(0, 50)')\n    xAxis.each((d, i, nodes)=> {\n        d3.select(nodes[i]).call(d3.axisBottom(d.xScale).ticks(5))\n    });\n\n    let distGroups = obsDistWrap.selectAll('.observed-group').data(d=> {\n        return d.data.map((m, i, n)=> {\n            m.index = i;\n            m.groupLength = n.length;\n            return m;\n        });\n    }).join('g').classed('observed-group', true);\n\n    let lines = distGroups.selectAll('.line').data(d => {\n            let mean = d3.mean(d.data.map(r=> r.realVal))\n            let vals = {'mean': mean, 'group':d.group, 'x':d.xScale}\n            return [vals];\n    }).join('rect').classed('line', true).attr('transform', (d, i)=> 'translate('+(d.x(d.mean)-1.5)+',0)')\n    .attr('height', 50).attr('width', 3).attr('fill', d=> d.group.color).style('opacity', '0.4')\n\n    let circWrap = distGroups.selectAll('.circ-wrap').data((d, i)=> [d]).join('g').classed('circ-wrap', true).attr('transform', (d, i, n)=> {\n        let move = d3.scaleLinear().domain([0, d.groupLength]).range([0, 60]);\n        return 'translate(0,'+(move(d.index+0.5))+')'});\n\n    let distCirc = circWrap.selectAll('circle.disDots').data(d=> d.data).join('circle').attr('r', 3)\n    .attr('cx', (d, i) => {\n        return d.x(d.realVal);\n    }).attr('cy', (d, i, n)=> {\n        return 0;\n    }).attr('fill', d=> d.group.color);\n}\nexport function renderSelectedView(pathData, otherPaths, selectedDiv, scales) {\n\n    let attributeHeight = 50;\n\n    let selectedSpecies = pathData.flatMap(p => p.filter(f => f.leaf === true).map(n => n.node));\n    let treeNodes = d3.select('#sidebar').select('svg').selectAll('.node');\n    treeNodes.filter(node => selectedSpecies.indexOf(node.data.node) > -1).classed('selected', true);\n\n    ////FILTER MASTER TO HIDE ATTRIBUTES THAT ARE DESELECTED FROM FILTERBAR\n    let attrHide = filterMaster.filter(f => f.type === 'hide-attribute').length > 0 ? filterMaster.filter(f => f.type === 'hide-attribute').map(m => m.attribute) : [];\n    let attrFilter = attrHide.length > 0 ? scales.filter(sc => {\n        return attrHide.indexOf(sc.field) === -1;\n    }).map(m => m.field) : null;\n\n    ////IF THE SELECTED DIV IS THERE ALREADY USE THAT/////\n    let selectedToolTest = selectedDiv.select('.selected-toolbar');\n    let selectedTool = selectedToolTest.empty() ? selectedDiv.append('div').classed('selected-toolbar', true) : selectedToolTest;\n    selectedTool.selectAll('*').remove();\n\n    ///////////////////////\n    let sortByDistanceDiv = selectedTool.append('div').style('display', 'inline-block');\n    sortByDistanceDiv.append('text').text('Topology: ');\n    let sortByDistanceButton = sortByDistanceDiv.append('button').classed('btn btn-secondary btn-sm', true);\n    sortByDistanceButton.text('Sort Most to Least');\n    sortByDistanceButton.on('click', () => sortPaths(sortByDistanceButton));\n\n    /////////////Sorting by attribute///////////////\n    let attrKeys = scales.map(m => m.field);\n    let attrSortWrap = selectedTool.append('div').style('display', 'inline-block');\n    attrSortWrap.append('h6').text('Sort by: ').style('display', 'inline');\n\n    let radioDiv = attrSortWrap.selectAll('div.attr-radio').data(attrKeys).join('div').classed('attr-radio form-check form-check-inline', true);\n    let radio = radioDiv.append('input').attr('type', 'radio').property('name', 'attribute-radio-sort').property('value', d => d).attr('id', (d, i) => 'radio-' + i).classed(\"form-check-input\", true);\n    radioDiv.append('label').text(d => d).property('for', (d, i) => 'radio-' + i).classed(\"form-check-label\", true);\n\n    let svgTest = selectedDiv.select('svg.select-svg');\n    let svg = svgTest.empty() ? selectedDiv.append('svg').classed('select-svg', true) : svgTest;\n\n    svg.selectAll('*').remove();\n\n    let branchFrequency = pathData.flatMap(row => row.flatMap(f => f.node)).reduce(function(acc, curr) {\n        if (typeof acc[curr] == 'undefined') {\n            acc[curr] = 1;\n        } else {\n            acc[curr] += 1;\n        }\n        return acc;\n    }, {});\n\n    ///RENDERING SELECTED PATHS////\n    if (pathData.length === 1) {\n\n        /////////////////////////////////////////////////\n        let selectWrap = svg.append('g').classed('select-wrap', true);\n        selectWrap.attr('transform', (d, i) => 'translate(0,20)');\n\n        ///Scales for circles ///\n        let circleScale = d3.scaleLog().range([6, 14]).domain([1, d3.max(Object.values(branchFrequency))]);\n\n        let selectedGroups = selectWrap.selectAll('.paths').data(pathData).join('g').classed('paths', true);\n\n        let pathBars = selectedGroups.append('rect').classed('path-rect', true);\n        pathBars.attr('y', -8);\n\n        //////////\n        ///Selecting species\n        /////////\n        addRemoveBubble(selectedGroups, scales)\n\n        /////////\n        selectedGroups.on('mouseover', function(d, i) {\n            let treeNode = d3.select('#sidebar').selectAll('.node');\n            let treeLinks = d3.select('#sidebar').selectAll('.link');\n            treeNode.filter(f => {\n                return d.map(m => m.node).indexOf(f.data.node) > -1;\n            }).classed('hover', true);\n            treeLinks.filter(f => d.map(m => m.node).indexOf(f.data.node) > -1).classed('hover', true);\n            return d3.select(this).classed('hover', true);\n        }).on('mouseout', function(d, i) {\n            let treeNode = d3.select('#sidebar').selectAll('.node').classed('hover', false);\n            let treeLinks = d3.select('#sidebar').selectAll('.link').classed('hover', false);\n            return d3.select(this).classed('hover', false);\n        });\n\n        let speciesTitle = selectedGroups.append('text').text(d => {\n            let string = d.filter(f => f.leaf === true)[0].label;\n            return string.charAt(0).toUpperCase() + string.slice(1);\n        });\n\n        speciesTitle.attr('x', 25).attr('y', 15);\n\n        let timelines = selectedGroups.append('g').classed('time-line', true);\n        timelines.attr('transform', (d, i) => 'translate(150, 0)');\n\n        let lines = timelines.append('line')\n            .attr('x1', 0)\n            .attr('x2', 1000)\n            .attr('y1', 15)\n            .attr('y2', 15);\n\n        let nodeGroups = timelines.selectAll('.node').data((d) => d).join('g').classed('node', true);\n\n        nodeGroups.attr('transform', (d) => {\n            let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n            let distance = x(d.edgeMove);\n            return 'translate(' + distance + ', 10)';\n        });\n\n        let circle = nodeGroups.append('circle').attr('cx', 0).attr('cy', 0).attr('r', d => {\n            return circleScale(branchFrequency[d.node]);\n        }).attr('class', (d, i) => 'node-' + d.node);\n\n        circle.on('mouseover', function(d, i) {\n            let hovers = nodeGroups.filter(n => n.node === d.node);\n            let treeNode = d3.select('#sidebar').selectAll('.node');\n            let selectedBranch = treeNode.filter(f => f.data.node === d.node).classed('selected-branch', true);\n            return hovers.classed('hover-branch', true);\n        }).on('mouseout', function(d, i) {\n            let hovers = nodeGroups.filter(n => n.node === d.node);\n            d3.selectAll('.selected-branch').classed('selected-branch', false);\n            return hovers.classed('hover-branch', false);\n        });\n\n        let speciesNodeLabel = nodeGroups.filter(f => f.label != undefined).append('text').text(d => {\n            let string = d.label.charAt(0).toUpperCase() + d.label.slice(1);\n            return string;\n        }).attr('x', 10).attr('y', 5);\n\n        selectedGroups.attr('transform', (d, i) => 'translate(0,' + (i * 60) + ')');\n\n        let nodes = selectedGroups.select('.time-line').selectAll('.node');\n        nodes.on('mouseover', (d, i) => {\n\n            let nearest = otherPaths.filter(path => {\n                let nodearray = path.flatMap(f => f.node);\n                return nodearray.indexOf(d.node) > -1;\n            });\n\n            let nearestA = nearest[0];\n            let nearestB = nearest[1];\n           \n        });\n\n        //////PLAYING WITH FUNCTION TO CALULATE DISTANCES\n\n        /// LOWER ATTRIBUTE VISUALIZATION ///\n        let attributeWrapper = selectedGroups.append('g').classed('attribute-wrapper', true);\n        let attData = formatAttributeData(pathData, scales, attrFilter);\n        let attributeGroups = renderAttributes(attributeWrapper, attData, scales, null);\n\n        selectedGroups.attr('transform', (d, i) => 'translate(10,' + (i * ((attributeHeight + 5) * (Object.keys(d[1].attributes).length + 1))) + ')');\n\n        drawContAtt(attributeGroups);\n        drawDiscreteAtt(attributeGroups, scales, false, false);\n\n        //sizeAndMove(svg, attributeWrapper, pathData, (attrMove * attributeHeight));\n        //tranforming elements\n        svg.style('height', ((pathData.length + attributeGroups.data().map(m => m[0]).length) * 50) + 50 + 'px');\n        selectedDiv.style('height', ((pathData.length + attributeGroups.data().map(m => m[0]).length) * 50) + 50 + 'px');\n        attributeWrapper.attr('transform', (d) => 'translate(140, 25)');\n        d3.selectAll('.selected-path').classed('selected-path', false);\n\n        ////RADIO BUTTON THAT COLORS BASE DON ATTRIBUTE VALUE////\n        radio.on('click', (d, i) => {\n            let leaf = pathData.map(node => node.filter(d => d.leaf === true)[0])[0];\n            let sorted = [...otherPaths].sort(function(a, b) {\n                return a.filter(n => n.leaf === true)[0].attributes[d].realVal - b.filter(n => n.leaf === true)[0].attributes[d].realVal;\n            });\n    \n            let main = d3.select('div#main');\n            /// LOWER ATTRIBUTE VISUALIZATION ///\n            drawPathsAndAttributes(sorted.reverse(), main, scales);\n            main.style('padding-top', '250px');\n    \n            let paths = main.select('svg#main-path-view').selectAll('.paths');\n    \n            let high = paths.filter(path => {\n                let leafOther = path.filter(node => node.leaf === true)[0];\n                return leafOther.attributes[d].realVal > leaf.attributes[d].realVal;\n            });\n            high.classed('high', true);\n    \n            let highLeaves = high.data().map(path => path.filter(f => f.leaf === true)[0].node);\n    \n            treeNodes.filter(f => highLeaves.indexOf(f.data.node) > -1).classed('high', true);\n    \n            let low = paths.filter(path => {\n                let leafOther = path.filter(node => node.leaf === true)[0];\n                return leafOther.attributes[d].realVal < leaf.attributes[d].realVal;\n            });\n            low.classed('low', true);\n    \n            let lowLeaves = low.data().map(path => path.filter(f => f.leaf === true)[0].node);\n    \n            treeNodes.filter(f => lowLeaves.indexOf(f.data.node) > -1).classed('low', true);\n    \n            let same = paths.filter(path => {\n                let leafOther = path.filter(node => node.leaf === true)[0];\n                return leafOther.attributes[d].realVal === leaf.attributes[d].realVal;\n            });\n            same.classed('same', true);\n        });\n      \n        return pathData;\n\n    } else if(pathData.length > 1 && pathData.length < 5) {\n       \n        let commonNodeStart = getCommonNodes(pathData);\n        renderSelectedTopology(commonNodeStart, svg, scales, branchFrequency);\n\n        /////END PATH RENDER///////\n        let attWrap = svg.append('g').classed('attribute-wrapper', true);\n        let attributeData = commonNodeStart[commonNodeStart.length - 1].children.map(ch => {\n            return [...commonNodeStart].concat(ch);\n        });\n\n        let attData = formatAttributeData(pathData, scales, attrFilter);\n        let attDataComb = attData[0].map((att, i)=> {\n            let species = pathData[0].filter(f=> f.leaf === true)[0].label;\n            att[att.length - 1].offset = 0;\n            let attribute = {'label': att[att.length-1].label, 'type':att[att.length-1].type, 'data': [{'species': species, 'paths': att}]}\n            for(let index = 1; index < attData.length; index++ ){\n                let species = pathData[index].filter(f=> f.leaf === true)[0].label;\n                let last = attData[index][i].length - 1\n                attData[index][i][last].offset = (index * 8);\n                attribute.data.push({'species': species, 'paths': attData[index][i]})\n            }\n            return attribute;\n        });\n\n        function findMaxState(states, offset){\n            let maxP = d3.max(states.map(v=> v.realVal));\n            let notMax = states.filter(f=> f.realVal != maxP);\n            let winState = states[states.map(m=> m.realVal).indexOf(maxP)]\n            winState.other = notMax;\n            winState.offset = offset;\n    \n            return winState;\n        }\n\n       let mappedDis = attDataComb.map(dis=> {\n           dis.data = dis.data.map((spec, i)=> {\n               spec.paths = spec.paths.map(m=> {\n                if(dis.type === 'discrete'){\n                    let offset = 5 * i;\n                    let maxProb = m.states? {'realVal': 1.0, 'state': m.winState, 'color':m.color, 'edgeMove': m.edgeMove, 'offset':m.offset, 'leaf': true} : findMaxState(m, offset); \n                    return maxProb;\n                }else{\n                    return m;\n                }\n            });\n            return spec;\n           });\n           return dis;\n       });\n\n       let attGroups = attWrap.selectAll('g').data(mappedDis).join('g').classed('attr', true);\n       attGroups.attr('transform', (d, i) => 'translate(145,' + (i * (attributeHeight + 10)) + ')');\n\n       attGroups.append('text')\n        .text(d=> d.label)\n        .style('text-anchor', 'end')\n        .style('font-size', 11)\n        .attr('transform', 'translate(0,'+(attributeHeight/2)+')');\n\n       let wrapRect = attGroups.append('rect').attr('width', 1010);\n       wrapRect.attr('height', attributeHeight);\n       wrapRect.style('fill', '#fff');\n       wrapRect.style('stroke', 'gray');\n       wrapRect.style('opacity', 0.5);\n\n       attGroups.append('line').classed('half', true).attr('x1', 0).attr('y1', 22).attr('x2', 1010).attr('y2', 22);\n     \n       let speciesGrp = attGroups.selectAll('g').data(d=> {\n            d.data = d.data.map(m=> {\n                m.type = d.type;\n                return m;\n            });\n            return d.data;\n        }).join('g').classed('species', true);\n\n       let lineGenD = d3.line()\n       .x(d=> {\n           let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n           let distance = d.edgeMove;\n           return x(distance);\n        })\n       .y(d=> {\n           let y = d3.scaleLinear().domain([0, 1]).range([attributeHeight-2, 1]);\n           return y(d.realVal) + d.offset;\n       });\n\n       let lineGenC = d3.line()\n       .x(d=> {\n           let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n           let distance = d.edgeMove;\n           return x(distance);\n        })\n       .y(d=> {\n           let y = d.yScale;\n           y.range([attributeHeight-2, 1]);\n           return y(d.realVal) + 2;\n       });\n\n       let innerStatePaths = speciesGrp.append('path')\n       .attr(\"d\", d=> {\n            return (d.type === 'discrete') ? lineGenD(d.paths) : lineGenC(d.paths);\n        })\n       .attr(\"class\", (d, i)=> {\n            return d.species + \" inner-line\"})\n       .style('stroke-width', 0.7)\n       .style('fill', 'none')\n       .style('stroke', 'gray');\n\n       innerStatePaths.on('mouseover', (d, i, n)=> {\n           d3.select(n[i]).classed('selected', true);\n       }).on('mouseout', (d, i, n)=> {\n            d3.select(n[i]).classed('selected', false);\n       });\n\n       let disGroup = speciesGrp.filter(sp=> {\n        return sp.type === 'discrete';\n        });\n\n       let branchGrpDis = disGroup.selectAll('.branch').data(d=>d.paths).join('g').classed('branch', true);\n\n       branchGrpDis.attr('transform', (d)=> {\n        let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n            let distance = x(d.edgeMove);\n            return 'translate('+distance+', 0)';\n        });\n\n        let bCirc = branchGrpDis.append('circle').attr('r', 5).attr('cy', (d, i)=> {\n            let y = d3.scaleLinear().domain([0, 1]).range([attributeHeight - 5, 2]);\n            return y(d.realVal) + d.offset;\n        }).attr('cx', 5);\n\n        bCirc.attr('fill', (d, i)=> d.color);\n\n        let otherCirc = branchGrpDis.filter(f=> f.leaf != true).selectAll('.other').data(d=> d.other).join('circle').classed('other', true);\n        otherCirc.attr('r', 4).attr('cx', 5).attr('cy', (c, i)=> {\n            let y = d3.scaleLinear().domain([1, 0]);\n            y.range([0, (attributeHeight-5)]);\n                return y(c.realVal);\n            }).attr('fill', (c)=> c.color).style('opacity', 0.1);\n\n        otherCirc.on(\"mouseover\", function(d) {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(200)\n              .style(\"opacity\", .9);\n            let f = d3.format(\".3f\");\n            tool.html(d.state + \": \" + f(d.realVal))\n              .style(\"left\", (d3.event.pageX + 10) + \"px\")\n              .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            })\n          .on(\"mouseout\", function(d) {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(500)\n              .style(\"opacity\", 0);\n            });\n\n        bCirc.on(\"mouseover\", function(d) {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(200)\n              .style(\"opacity\", .9);\n            let f = d3.format(\".3f\");\n            tool.html(d.state + \": \" + f(d.realVal))\n              .style(\"left\", (d3.event.pageX + 10) + \"px\")\n              .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            })\n          .on(\"mouseout\", function(d) {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(500)\n              .style(\"opacity\", 0);\n            });\n        \n        /////AXIS ON HOVER////\n        branchGrpDis.on('mouseover', (d, i, n)=> {\n            let y = d3.scaleLinear().domain([1, 0]);\n            y.range([0, (attributeHeight-5)]);\n            svg.selectAll('path.inner-line.'+ d.species).attr('stroke', 'red');\n            svg.selectAll('path.inner-line.'+ d.species).classed('selected', true);\n            d3.select(n[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(3));\n            d3.select(n[i]).selectAll('.other').style('opacity', 0.7);\n        }).on('mouseout', (d, i, n)=> {\n            d3.select(n[i]).select('g.y-axis')\n            d3.select(n[i]).select('g.y-axis').remove();\n            d3.selectAll('path.inner-line.'+ d.species).attr('stroke', 'gray');\n            d3.selectAll('path.inner-line.'+ d.species).classed('selected', false);\n            d3.selectAll('.other').style('opacity', 0.1);\n        });\n\n        let conGroup = speciesGrp.filter(sp=> {\n            return sp.type === 'continuous';\n        });\n\n        let branchGrpCon = conGroup.selectAll('.branch').data(d=>d.paths).join('g').classed('branch', true);\n\n        branchGrpCon.attr('transform', (d)=> {\n         let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n             let distance = x(d.edgeMove);\n             return 'translate('+distance+', 0)';\n         });\n\n         /////AXIS ON HOVER////\n        branchGrpCon.on('mouseover', (d, i, n)=> {\n            let y = d.yScale;\n            y.range([0, (attributeHeight-5)]);\n            svg.selectAll('path.inner-line.'+ d.species).attr('stroke', 'red');\n            svg.selectAll('path.inner-line.'+ d.species).classed('selected', true);\n            d3.select(n[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(3));\n            d3.select(n[i]).selectAll('.other').style('opacity', 0.7);\n        }).on('mouseout', (d, i, n)=> {\n            d3.select(n[i]).select('g.y-axis')\n            d3.select(n[i]).select('g.y-axis').remove();\n            d3.selectAll('path.inner-line.'+ d.species).attr('stroke', 'gray');\n            d3.selectAll('path.inner-line.'+ d.species).classed('selected', false);\n            d3.selectAll('.other').style('opacity', 0.1);\n        });\n\n        let MeanRect = branchGrpCon.append('rect');\n   \n        MeanRect.attr('width', 10).attr('height', 3);\n        MeanRect.attr('y', (d, i) => {\n            let scale = scales.filter(s=> s.field === d.label)[0];\n            let y = d3.scaleLinear().domain([scale.min, scale.max]).range([attributeHeight, 0])\n            return y(d.realVal);\n        });\n\n        let confiBars = branchGrpCon.filter(f=> f.leaf != true).append('rect');\n        confiBars.attr('width', 10).attr('height', (d, i)=> {\n            let scale = scales.filter(s=> s.field === d.label)[0];\n            let y = d3.scaleLinear().domain([scale.min, scale.max]).range([attributeHeight, 0]);\n            return y(d.lowerCI95) - y(d.upperCI95);\n        });\n\n        confiBars.attr('y', (d, i)=> {\n            let scale = scales.filter(s=> s.field === d.label)[0];\n            let y = d3.scaleLinear().domain([scale.min, scale.max]).range([attributeHeight, 0]);\n            return y(d.upperCI95);\n        })\n        confiBars.style('opacity', 0.1);\n\n        //tranforming elements\n        svg.style('height', ((pathData.length + attGroups.data().map(m => m[0]).length) * 50) + 50 + 'px');\n        selectedDiv.style('height', ((pathData.length + attGroups.data().map(m => m[0]).length) * 50) + 50 + 'px');\n        attWrap.attr('transform', (d) => 'translate(0, 60)');\n        d3.selectAll('.selected-path').classed('selected-path', false);\n\n        return commonNodeStart;\n\n\n    }else{\n       \n        /////////\n        //getting common node\n        ///\n\n        let maxBranch = d3.max(pathData.map(p => p.length));\n        let longestBranch = pathData.filter(path => path.length === maxBranch)[0];\n        let startBranch = longestBranch.filter(f=> f.leaf != true);\n        let commonNodeStart = startBranch;\n        //FIND THE COMMON BRANCHES BETWEEN ALL OF THE SELECTED///\n        pathData.map(path => {\n            commonNodeStart = [...path].filter(f => {\n                return (commonNodeStart.map(m => m.node).indexOf(f.node) > -1) & f.leaf != true });\n        });\n\n        svg.remove();\n        let remove = selectedTool.append('g').classed('x-icon', true);\n        remove.attr('transform', 'translate(15, 10)');\n        remove.append('circle').attr('r', 7).attr('fill', '#fff');\n        remove.append('text').text('x').attr('transform', 'translate(-5, 5)');\n        remove.style('cursor', 'pointer');\n        remove.on('click', (d, i, n) => {\n            d3.selectAll('.high').classed('high', false);\n            d3.selectAll('.low').classed('low', false);\n            treeNodes.select('.selected').classed('selected', false);\n            pathSelected(null, dataMaster[0], scales);\n        });        \n\n        /////////\n        renderDistibutions(pathData, selectedDiv, scales);\n        selectedDiv.style('height', '550px');\n\n        d3.selectAll('.selected-path').classed('selected-path', false);\n\n        ////RADIO BUTTON THAT COLORS BASE DON ATTRIBUTE VALUE////\n        radio.on('click', (d, i) => {\n            let leaf = pathData.map(node => node.filter(d => d.leaf === true)[0])[0];\n            let sorted = [...otherPaths].sort(function(a, b) {\n                return a.filter(n => n.leaf === true)[0].attributes[d].realVal - b.filter(n => n.leaf === true)[0].attributes[d].realVal;\n            });\n    \n            let main = d3.select('div#main');\n            /// LOWER ATTRIBUTE VISUALIZATION ///\n            drawPathsAndAttributes(sorted.reverse(), main, scales);\n            main.style('padding-top', '250px');\n    \n            let paths = main.select('svg#main-path-view').selectAll('.paths');\n    \n            let high = paths.filter(path => {\n                let leafOther = path.filter(node => node.leaf === true)[0];\n                return leafOther.attributes[d].realVal > leaf.attributes[d].realVal;\n            });\n            high.classed('high', true);\n    \n            let highLeaves = high.data().map(path => path.filter(f => f.leaf === true)[0].node);\n    \n            treeNodes.filter(f => highLeaves.indexOf(f.data.node) > -1).classed('high', true);\n    \n            let low = paths.filter(path => {\n                let leafOther = path.filter(node => node.leaf === true)[0];\n                return leafOther.attributes[d].realVal < leaf.attributes[d].realVal;\n            });\n            low.classed('low', true);\n    \n            let lowLeaves = low.data().map(path => path.filter(f => f.leaf === true)[0].node);\n    \n            treeNodes.filter(f => lowLeaves.indexOf(f.data.node) > -1).classed('low', true);\n    \n            let same = paths.filter(path => {\n                let leafOther = path.filter(node => node.leaf === true)[0];\n                return leafOther.attributes[d].realVal === leaf.attributes[d].realVal;\n            });\n            same.classed('same', true);\n        });\n        //tranforming elements\n        svg.style('height', ((pathData.length + attributeGroups.data().map(m => m[0]).length) * 50) + 50 + 'px');\n        selectedDiv.style('height', ((pathData.length + attGroups.data().map(m => m[0]).length) * 50) + 50 + 'px');\n        attWrap.attr('transform', (d) => 'translate(140, 25)');\n        d3.selectAll('.selected-path').classed('selected-path', false);\n\n        return commonNodeStart;\n    }\n    \n}\n\nfunction sortPaths(sortButton) {\n    if (sortButton.text() === 'Sort Most to Least') {\n        sortButton.text('Sort Least to Most');\n    } else {\n        sortButton.text('Sort Most to Least');\n    }\n}","export function dropDown(div, optionArray, dropText, dropId){\n    let dropdiv = div.append('div').classed(`dropdown ${dropId}`, true);\n    dropdiv.style('display', 'inline-block')\n    let button = dropdiv.append('button').classed('btn dropbtn btn-secondary', true).text(dropText);\n    let dropContent = dropdiv.append('div').attr('id', dropId).classed('dropdown-content', true);\n    dropContent.append('a').text('text');\n    let options = dropContent.selectAll('a').data(optionArray).join('a').text(d=> d.field);\n\n    button.on('click', (d, i, n)=> {\n        if(dropContent.classed('show')){\n            dropContent.classed('show', false);\n        }else{\n            dropContent.classed('show', true);\n        }\n    });\n\n    return options;\n}","import '../styles/index.scss';\nimport * as d3 from \"d3\";\nimport * as d3Array from 'd3-array'\nimport { colorKeeper } from './index';\nimport {pathSelected, renderComparison} from './selectedPaths';\nimport {formatAttributeData} from './dataFormat';\nimport {filterMaster, nodeFilter, getLatestData, leafStateFilter} from './filterComponent';\nimport { drawBranchPointDistribution } from './distributionView';\nimport { dropDown } from './buttonComponents';\nimport { groupedView } from './viewControl';\n\nexport function drawPathsAndAttributes(pathData, main, calculatedScales){\n\n    let nodeTooltipFlag = true;\n\n    let collapsed = d3.select('#scrunch').attr('value');\n  \n    main.select('#main-path-view').selectAll('*').remove();\n\n    let pathGroups = renderPaths(pathData, main, calculatedScales);\n  \n      /// LOWER ATTRIBUTE VISUALIZATION ///\n    let attributeWrapper = pathGroups.append('g').classed('attribute-wrapper', true);\n    let attrHide = filterMaster.filter(f=> f.type === 'hide-attribute').map(m=> m.attribute);\n\n    let attKeys = attrHide.length > 0 ? calculatedScales.filter(f=> attrHide.indexOf(f.field) === -1).map(m=> m.field) : null;\n\n    let attData = formatAttributeData(pathData, calculatedScales, attKeys);\n\n    let attrMove = attKeys === null ? calculatedScales.length : attKeys.length;\n\n    let predictedAttrGrps = renderAttributes(attributeWrapper, attData, calculatedScales, null, collapsed);\n    let attributeHeight = (collapsed === 'true')? 22 : 45;\n    pathGroups.attr('transform', (d, i)=> 'translate(10,'+ (i * ((attributeHeight + 5)* (attrMove + 1))) +')');\n    \n    let cGroups = drawContAtt(predictedAttrGrps, collapsed);\n    let dGroups = drawDiscreteAtt(predictedAttrGrps, collapsed, false);\n    sizeAndMove(main.select('#main-path-view'), attributeWrapper, pathData, (attrMove * attributeHeight));\n\n    let leafStates = d3.selectAll('.discrete-leaf');\n    leafStates.on('click', (d, i)=> {\n        if(nodeTooltipFlag){\n            nodeTooltipFlag = false;\n            d3.select(\"#state-tooltip\").classed(\"hidden\", true);\n        }else{\n            nodeTooltipFlag = true;\n            d3.select(\"#state-tooltip\")\n            .style(\"left\", (d3.event.pageX) + \"px\")\n            .style(\"top\", (d3.event.pageY - 28) + \"px\")\n            .select(\"#value\")\n            .text(d.winState);\n            d3.select(\"#state-tooltip\").classed(\"hidden\", false);\n\n            d3.select(\"#filter-by-state\").on('click', ()=> {\n                \n                leafStateFilter(d, calculatedScales);\n                nodeTooltipFlag = false;\n                d3.select(\"#state-tooltip\").classed(\"hidden\", true);\n\n            });\n\n            d3.select(\"#select-by-state\").on('click', ()=> {\n                let data = getLatestData();\n                let test = data.filter(path => {\n                    return path[path.length - 1].attributes[d.label].winState === d.winState;\n                });\n\n                let notIt = data.filter(path => {\n                    return path[path.length - 1].attributes[d.label].winState != d.winState;\n                });\n            \n                nodeTooltipFlag = false;\n                d3.select(\"#state-tooltip\").classed(\"hidden\", true);\n\n                pathSelected(test, notIt, calculatedScales);\n\n            });\n\n        }});\n\n    return pathGroups;\n\n}\nexport function sizeAndMove(svg, attribWrap, data, attrMove){\n        //tranforming elements\n    svg.style('height', ((data.length * (attrMove + 52))) + 'px');\n    attribWrap.attr('transform', (d)=> 'translate(140, 25)');\n        ///////////////////////////////////\n}\nexport function renderPaths(pathData, main, scales){\n    \n    ////YOU SHOULD MOVE THESE APPENDING THINGS OUT OF HERE///////\n    /////Rendering ///////\n    let svgTest = main.select('#main-path-view');\n    let svg = svgTest.empty() ? main.append('svg').attr('id', 'main-path-view') : svgTest;\n    \n    let nodeTooltipFlag = false;\n\n    let pathWrapTest = svg.select('.path-wrapper');\n    let pathWrap = pathWrapTest.empty() ? svg.append('g').classed('path-wrapper', true) : pathWrapTest;\n    pathWrap.attr('transform', (d, i)=> 'translate(0,20)');\n\n      /////Counting frequency of nodes//////\n    let branchFrequency = pathData.flatMap(row=> row.flatMap(f=> f.node)).reduce(function (acc, curr) {\n        if (typeof acc[curr] == 'undefined') {\n          acc[curr] = 1;\n        } else {\n          acc[curr] += 1;\n        }\n        return acc;\n        }, {});\n\n     ///Scales for circles ///\n    \n    let circleScale = d3.scaleLog().range([6, 14]).domain([1, d3.max(Object.values(branchFrequency))]);\n    let pathGroups = pathWrap.selectAll('.paths').data(pathData).join('g').classed('paths', true);\n    let pathBars = pathGroups.append('rect').classed('path-rect', true);\n    pathBars.attr('y', -8);\n\n    //////////\n    ///Selecting species\n    /////////\n    let pathAdd = pathGroups.append('g').classed(\"fas fa-search-plus\", true);\n    pathAdd.attr('transform', 'translate(15, 10)');\n    pathAdd.append('circle').attr('r', 7).attr('fill', '#fff');\n    pathAdd.append('text').text('+').attr('transform', 'translate(-5, 5)');\n    pathAdd.style('cursor', 'pointer');\n\n    pathAdd.on('click', (d, i, n)=>{\n\n        let notIt = d3.selectAll(n).filter((f, j)=> j != i).classed('selected-path', false);\n     \n        if(d3.select(n[i]).classed('selected-path')){\n            d3.select(n[i]).classed('selected-path', false);\n            pathSelected(null, notIt.data(), scales);\n        }else{\n            d3.select(n[i]).classed('selected-path', true);\n            pathSelected([d], notIt.data(), scales);\n        }\n    });\n\n    /////////\n    pathGroups.on('mouseover', function(d, i){\n        let treeNode  = d3.select('#sidebar').selectAll('.node');\n        let treeLinks  = d3.select('#sidebar').selectAll('.link');\n        treeNode.filter(f=> {\n            return d.map(m=> m.node).indexOf(f.data.node) > -1;\n        }).classed('hover', true);\n        treeLinks.filter(f=> d.map(m=> m.node).indexOf(f.data.node) > -1).classed('hover', true);\n        return d3.select(this).classed('hover', true);\n    }).on('mouseout', function(d, i){\n        let treeNode  = d3.select('#sidebar').selectAll('.node').classed('hover', false);\n        let treeLinks  = d3.select('#sidebar').selectAll('.link').classed('hover', false);\n        return d3.select(this).classed('hover', false);\n    });\n\n    let speciesTitle = pathGroups.append('text').text(d=> {\n       let string = d.filter(f=> f.leaf === true)[0].label;\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    });\n\n    speciesTitle.attr('x', 25).attr('y', 15);\n\n    let timelines = pathGroups.append('g').classed('time-line', true);\n    timelines.attr('transform', (d, i)=> 'translate(150, 0)');\n\n    let lines = timelines.append('line')\n    .attr('x1', 0)\n    .attr('x2', 1000)\n    .attr('y1', 15)\n    .attr('y2', 15);\n\n    let nodeGroups = timelines.selectAll('.node').data((d)=> {\n        return d}).join('g').attr('class', (d, i, n)=> {\n            return d3.select(n[n.length - 1]).data()[0].label + \" node\";\n        });\n   \n    nodeGroups.attr('transform', (d)=> {\n        let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n       // let distance = (moveMetric === 'move') ? d.move : x(d.edgeMove);\n        let distance = x(d.edgeMove);\n        return 'translate('+ distance +', 10)';});\n\n    nodeGroups.on('click', (d, i, n)=> {\n        if(nodeTooltipFlag){\n            nodeTooltipFlag = false;\n            d3.select(\"#branch-tooltip\").classed(\"hidden\", true);\n        }else{\n            nodeTooltipFlag = true;\n            d3.select(\"#branch-tooltip\")\n            .style(\"left\", (d3.event.pageX) + \"px\")\n            .style(\"top\", (d3.event.pageY - 28) + \"px\")\n            .select(\"#value\")\n            .text(d.node);\n            d3.select(\"#branch-tooltip\").classed(\"hidden\", false);\n\n            d3.select(\"#filter-by-node\").on('click', ()=> {\n                nodeFilter(d.node, scales);\n                nodeTooltipFlag = false;\n                d3.select(\"#branch-tooltip\").classed(\"hidden\", true);\n            });\n\n            d3.select(\"#select-by-node\").on('click', ()=> {\n                let data = getLatestData();\n                let test = pathGroups.filter(path => {\n                    return path.map(node => node.node).indexOf(d.node) > -1;\n                });\n                let notIt = pathGroups.filter(path => {\n                    return path.map(node => node.node).indexOf(d.node) === -1;\n                });\n\n                nodeTooltipFlag = false;\n                d3.select(\"#branch-tooltip\").classed(\"hidden\", true);\n                pathSelected(test.data(), notIt.data(), scales);\n            });\n        }\n    });\n\n    let circle = nodeGroups.append('circle').attr('cx', 0).attr('cy', 0).attr('r', d=> {\n        return circleScale(branchFrequency[d.node]);\n    }).attr('class', (d, i)=> 'node-'+d.node);\n\n    circle.on('mouseover', function(d, i){\n        let hovers = nodeGroups.filter(n=> n.node === d.node);\n        let treeNode  = d3.select('#sidebar').selectAll('.node');\n        let selectedBranch = treeNode.filter(f=> f.data.node === d.node).classed('selected-branch', true);\n        return hovers.classed('hover-branch', true);\n    }).on('mouseout', function(d, i){\n        let hovers = nodeGroups.filter(n=> n.node === d.node);\n        d3.selectAll('.selected-branch').classed('selected-branch', false);\n        return hovers.classed('hover-branch', false);\n    });\n\n    let speciesNodeLabel = nodeGroups.filter(f=> f.label != undefined).append('text').text(d=> {\n        let string = d.label.charAt(0).toUpperCase() + d.label.slice(1);\n        return string;\n    }).attr('x', 10).attr('y', 5);\n\n    return pathGroups;\n}\nexport function renderAttributes(attributeWrapper, data, scales, filterArray, collapsed){\n    let attributeHeight = (collapsed === 'true')? 20 : 45;\n    let predictedAttrGrps = attributeWrapper.selectAll('g').data((d, i)=> data[i]).join('g');\n    predictedAttrGrps.classed('predicated-attr-groups', true);\n    predictedAttrGrps.attr('transform', (d, i) => 'translate(0, '+(i * (attributeHeight + 5))+')');\n\n    let attrLabel = predictedAttrGrps.append('text').text(d=> d[d.length - 1].label);\n    attrLabel.classed('attribute-label', true);\n    attrLabel.attr('transform', 'translate(-15, 20)');\n\n    return predictedAttrGrps;\n}\nfunction collapsedPathGen(data){\n    data.map((p, i)=>{\n        let step = i === 0 ? 0 : 1;\n        let test = (p.realVal > data[i-step].realVal) ? 1 : 18;\n        p.change = test;\n    })\n}\nasync function continuousPaths(innerTimeline, collapsed){\n\n    innerTimeline.data().forEach(path => {\n        collapsedPathGen(path);\n    });\n\n    //THIS IS THE PATH GENERATOR FOR THE CONTINUOUS VARIABLES\n    let height = (collapsed === 'true')? 20 : 45;\n    var lineGen = d3.line()\n    .x(d=> {\n        let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n       // let distance = (moveMetric === 'move') ? d.move : x(d.edgeMove);\n       let distance = x(d.edgeMove);\n        return distance; })\n    .y(d=> {\n        let y = d.yScale;\n        y.range([height, 0]);\n        if(collapsed === 'true'){\n            return d.change;\n        }else{\n            return y(d.realVal);\n        }\n    });\n\n    let innerPaths = innerTimeline.append('path')\n    .attr(\"d\", lineGen)\n    .attr(\"class\", \"inner-line\")\n    .style('stroke', (d)=> d[0].color);\n\n    return innerPaths;\n    ///////////////////////////////////////////////////////////\n}\nexport function drawContAtt(predictedAttrGrps, collapsed){\n\n    let continuousAtt = predictedAttrGrps.filter(d=> {\n        return (d[d.length - 1] != undefined) ? d[d.length - 1].type === 'continuous' : d.type === 'continuous';\n    });\n\n    let attributeHeight = (collapsed === 'true') ? 20 : 45;\n\n    let innerTimeline = continuousAtt.append('g').classed('attribute-time-line', true);\n    /////DO NOT DELETE THIS! YOU NEED TO SEP CONT AND DICRETE ATTR. THIS DRAWS LINE FOR THE CONT/////\n    let innerPaths = continuousPaths(innerTimeline, collapsed);\n ////////\n    let attribRectCont = innerTimeline.append('rect').classed('attribute-rect', true);\n    attribRectCont.attr('height', attributeHeight);\n    let attributeNodesCont = innerTimeline.selectAll('g').data(d=> d).join('g').classed('attribute-node', true);\n\n    let innerBars = attributeNodesCont.append('g').classed('inner-bars', true);\n\n    let innerRect = innerBars.append('rect').classed('attribute-inner-bar', true);\n    innerRect.attr('height', attributeHeight);\n    innerBars.attr('transform', (d)=> {\n        let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n       // let distance = (moveMetric === 'move') ? d.move : x(d.edgeMove);\n       let distance = x(d.edgeMove);\n        return 'translate('+ distance +', 0)';});\n      \n    let rangeRect = innerBars.append('rect').classed('range-rect', true);\n    rangeRect.attr('width', 20).attr('height', (d, i)=> {\n        let y = d.yScale;\n        y.range([attributeHeight, 0]);\n        let range = d.leaf ? 0 : y(d.lowerCI95) - y(d.upperCI95);\n        let barHeight = (collapsed === 'true') ? 20 : range;\n        return barHeight;\n    });\n    rangeRect.attr('transform', (d, i)=> {\n        let y = d.yScale;\n        y.range([attributeHeight, 0]);\n        let move = (d.leaf || (collapsed === 'true')) ? 0 : y(d.upperCI95);\n        return 'translate(0, '+ move +')';\n    });\n    rangeRect.style('fill', (d)=> {\n        return d.colorScale(d.realVal);\n    });\n    rangeRect.attr('opacity', (d)=> {\n        return d.satScale(d.realVal);\n    });\n    if(collapsed != 'true'){\n        innerBars.append('rect').attr('width', 20).attr('height', 5)\n        .attr('transform', (d, i)=> {\n            let y = d.yScale;\n            y.range([attributeHeight, 0]);\n            return 'translate(0, '+ y(d.realVal) +')';})\n        .attr('fill', d=> d.color).classed('val-bar', true);\n    }\n\n    /////AXIS ON HOVER////\n    innerBars.on('mouseover', (d, i, n)=> {\n        let y = d.yScale;\n        y.range([0, attributeHeight]);\n        d3.select(n[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(5));\n        let tool = d3.select('#tooltip');\n        tool.transition()\n          .duration(200)\n          .style(\"opacity\", .9);\n        let f = d3.format(\".3f\");\n        tool.html('mean: '+f(d.realVal) +\"</br>\"+\"</br>\"+ 'upperCI: '+ f(d.upperCI95) +\"</br>\"+\"</br>\"+ 'lowerCI: '+ f(d.lowerCI95))\n          .style(\"left\", (d3.event.pageX) + \"px\")\n          .style(\"top\", (d3.event.pageY - 28) + \"px\");\n        tool.style('height', 'auto');\n       \n    }).on('mouseout', (d, i, n)=> {\n        d3.select(n[i]).select('g.y-axis')\n        d3.select(n[i]).select('g.y-axis').remove();\n        let tool = d3.select('#tooltip');\n        tool.transition()\n          .duration(500)\n          .style(\"opacity\", 0);\n    });\n\n    return attributeNodesCont;\n   \n}\nexport function findMaxState(states, offset){\n    let maxP = d3.max(states.map(v=> v.realVal));\n    let notMax = states.filter(f=> f.realVal != maxP);\n    let winState = states[states.map(m=> m.realVal).indexOf(maxP)]\n    winState.other = notMax;\n    winState.offset = offset;\n    return winState;\n}\n    //BEGIN TEST\nfunction drawLeaves(attWraps, groupBy){\n    //THIS IS HARD CODED AND SHOULD NOT BE\n\n    let numSpecies = 100;\n    let height = 40;\n    //CONTINUOUS \n    let leafWraps = attWraps.filter(f=> f.type === 'continuous').selectAll('g.observe-wrap-first.continuous').data(d=> {\n            let totalVal = attWraps.data().filter(f=> f.label === d.label).map(m=> m.data);\n            let totalArray = totalVal.flatMap(p=> p.flatMap(f=> f.paths[f.paths.length - 1].realVal));\n            let max = d3.max(totalArray);\n            let min = d3.min(totalArray);\n            let totalMean = d3.mean(totalArray);\n        \n            let x = d3.scaleLinear().domain([min, max]).range([0, 200])\n            let newVal = d.data.map((m, i)=> {\n                m.index = i;\n                return {'value': m.paths[m.paths.length - 1].realVal, 'x': x, 'min': min, 'max': max, 'species':m.species };\n            });\n            let groupMean = d3.mean(newVal.map(v=> v.value));\n            return [{'dotVals':newVal, 'x': x, 'totalMean': totalMean, 'groupMean':groupMean}];\n        }).join('g').classed('observe-wrap-first continuous', true);\n        \n        leafWraps.attr('transform', 'translate(850, 0)');\n        \n        let xAxis = leafWraps.append('g').classed('axis-x', true);\n        xAxis.attr('transform', 'translate(0, '+(height - 15)+')');\n        xAxis.each((d, i, nodes)=> {\n            d3.select(nodes[i]).call(d3.axisBottom(d.x).ticks(5));\n        });\n        \n        let totalMeanLine = leafWraps.append('rect').classed('line', true).attr('transform', (d, i)=> 'translate('+(d.x(d.totalMean)-1.5)+',0)')\n        .attr('height', (height - 15)).attr('width', 3).attr('fill', 'red').style('opacity', '0.4');\n        \n        let groupMeanLine = leafWraps.append('rect').classed('line', true).attr('transform', (d, i)=> 'translate('+(d.x(d.groupMean)-1.5)+',0)')\n        .attr('height', (height - 15)).attr('width', 3).attr('fill', 'gray').style('opacity', '0.4');\n        \n        let distCircGroupOut = leafWraps.append('g').attr('transform', 'translate(0, 20)');\n        let distcirclesOut = distCircGroupOut.selectAll('circle').data(d=> d.dotVals).join('circle');\n        distcirclesOut.attr('r', 4).attr('cx', (d, i)=> d.x(d.value)).style('opacity', '0.3');\n\n        //DISCRETE//\n        let leafWrapsD = attWraps.filter(f=> f.type === 'discrete').selectAll('g.observe-wrap-first.discrete').data(d=> {\n          return [d];\n        }).join('g').classed('observe-wrap-first discrete', true);\n\n        let rects = leafWrapsD.filter(f=> {\n            return f.label != groupBy;\n        }).selectAll('rect').data(d=> {\n            let groupedData = d3Array.groups(d.data.map(m=> m.paths[m.paths.length - 1]), d=> d.state);\n            groupedData.sort((a, b)=> b[1].length - a[1].length)\n            return groupedData;\n        }).join('rect').attr('height', 15).attr('width', (d, i, n)=>{\n            let scale = d3.scaleLinear().domain([0, d3.sum(d3.selectAll(n).data().map(m=> m[1].length))])\n            .range([5, 170]);\n            d.width = scale(d[1].length);\n            return scale(d[1].length);\n        });\n\n        rects.attr('x', (d, i, n)=> {\n            if(i === 0){ return 0}\n            else {\n                d3.selectAll(n).filter((f, j)=> j< i);\n                let move = d3.sum(d3.selectAll(n).filter((f, j)=> j< i).data().map(m=> m.width));\n                return move;}\n        }).attr('y', 12)\n\n        rects.attr('fill', d=> d[1][0].color);\n\n        rects.on('mouseover', (d, i, n)=> {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(200)\n              .style(\"opacity\", .9);\n            \n            tool.html(d[0] + \"</br>\" + d[1].length)\n              .style(\"left\", (d3.event.pageX + 10) + \"px\")\n              .style(\"top\", (d3.event.pageY + 20) + \"px\");\n\n              d3.selectAll(n).filter((f, j)=> j != i).attr('opacity', 0.3);\n          \n        }).on('mouseout', (s, i, n)=> {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(500)\n              .style(\"opacity\", 0);\n\n              d3.selectAll(n).filter((f, j)=> j != i).attr('opacity', 1)\n        })\n\n        leafWrapsD.attr('transform', 'translate(850, 0)');\n\n        let ratio = leafWrapsD.filter(f=> f.label === groupBy)\n            .selectAll('text').data(d=> [d]).join('text').text(d=> {\n                let paths = d.data[d.data.length - 1].paths;\n                return `${paths[paths.length - 1].state}: ${d.data.length} / ${numSpecies}`\n            });\n        ratio.style('text-anchor', 'middle')\n        ratio.style('font-size', '12px')\n        ratio.attr('x', 90).attr('y', 25)\n        \n    }\nexport function drawGroups(stateBins, scales){\n    \n    let groupedBool = d3.select('#show-drop-div-group').attr('value', 'grouped');\n    \n    let height = 40;\n    let selectedTool = d3.select('#selected');\n    selectedTool.selectAll('*').remove();\n \n    let main = d3.select('#main');\n    main.style('padding-top', 0);\n\n    d3.select('#toolbar').append('text').text(stateBins[0].field)\n\n    let splitOnArray = [{'field':'None'}].concat(scales.filter(f=> (f.field != stateBins[0].field) && f.type === 'discrete'));\n    let dropOptions = dropDown(d3.select('#toolbar'), splitOnArray, 'Split On','show-drop-div-group');\n\n    ////THIS SPLITS THE DATA////\n    dropOptions.on('click', (d, i, n)=> {\n        d3.select('#toolbar').append('text').text(d.field);\n        \n        if(d.type === 'discrete'){\n            let newBins = stateBins.map(state=> {\n                let newBinData = d.scales.map(sc=> {\n                    let field = sc.field;\n                    let name = sc.scaleName;\n                    let newData = state.data.filter(pa=> {\n                        let leaf = pa.filter(le=> le.leaf === true)[0];\n                        return leaf.attributes[field].winState === name;\n                    });\n                    return {'field': field, 'state': name, 'data': newData }\n                });\n                state.data = newBinData;\n                return state;\n            });\n\n            //////RENDERING NEED TO SEPARATE OUT/////\n           \n           let main = d3.select('#main');\n           main.selectAll('*').remove();\n           main.style('padding-top', '40px');\n           let firstGroupDiv = main.selectAll('div.first-group').data(newBins).join('div').classed('first-group', true);\n           \n           let firstGroupSvg = firstGroupDiv.append('svg');\n           firstGroupSvg.attr('height', s=> (s.data.length*270));\n           let firstGroup = firstGroupSvg.append('g');\n          \n           let firstLabel = firstGroup.append('text').text(f=> f.state).attr('transform', 'translate(10, 10)');\n\n           let secondGroup = firstGroup.selectAll('g.second-group').data(g=> {\n               let newGroups = g.data.map((m)=>{\n                   let newM = {};\n                   newM.first = [g.field, g.state];\n                   newM.second = [m.field, m.state];\n                   newM.data = m.data\n                   newM.leaves = m.data.flatMap(path=> path.filter(f=> f.leaf === true));\n                   return newM\n               });\n               return newGroups}).join('g').classed('second-group', true);\n\n           secondGroup = secondGroup.filter(f=> f.data.length > 0);\n           secondGroup.attr('transform', (s, i)=> 'translate(30,'+(20 + (i * 270))+')');\n\n           secondGroup.each((s, i, n)=> {\n            let branchBar = drawBranchPointDistribution(s.data, d3.select(n[i]));\n            branchBar.select('rect').attr('x', -80).attr('fill','gray');\n            branchBar.selectAll('.branch-points').selectAll('circle').attr('fill', 'rgba(255, 255, 255, 0.3)');\n            \n            branchBar.select('.leaf-label').append('text').text((t, i) =>': '+ t.data.length).attr('transform', 'translate(45, 0)');\n            branchBar.selectAll('text').style('font-size', '11.5px').style('fill', '#fff');\n    \n            branchBar.select('line').attr('stroke', '#fff');\n\n            let groupLabels = d3.select(n[i]).append('g');\n\n            //groupLabels.\n            let pathAdd = groupLabels.append('g').classed(\"fas fa-search-plus\", true);\n            pathAdd.attr('transform', 'translate(-10, 15)');\n            pathAdd.append('circle').attr('r', 7).attr('fill', '#fff');\n            pathAdd.append('text').text('+').attr('transform', 'translate(-5, 3)').attr('fill', 'gray');\n        \n            pathAdd.style('cursor', 'pointer');\n\n            pathAdd.on('click', ()=> {\n                let other = d3.selectAll(n).filter((f,j)=> j != i);\n                renderComparison(s, other.data(), d3.select('#selected'), scales);\n            });\n\n            let stateLabel = groupLabels.append('text').text((s, i)=> s.second[1]);\n            stateLabel.attr('transform', (d, i)=> 'translate(3, 20)');\n            stateLabel.attr('fill', '#fff');\n           });\n\n           let innerGroup = secondGroup.filter(f=> f.data.length > 0).append('g').classed('inner-wrap', true);\n           innerGroup.attr('transform', (d,i)=> 'translate(110, 0)');\n\n       \n           let attWraps = innerGroup.selectAll('.att-wrapper').data((d)=> {\n               let atts = formatAttributeData(d.data, scales, null);\n             \n               let attDataComb = atts[0].map((att, i)=> {\n                  \n                   let species = d.data[0].filter(f=> f.leaf === true)[0].label;\n\n                   att[att.length - 1].offset = 0;\n                   let attribute = {'label': att[att.length-1].label, 'type':att[att.length-1].type, 'data': [{'species': species, 'paths': att}]}\n                   for(let index = 1; index < atts.length; index++ ){\n                       let species = d.data[index].filter(f=> f.leaf === true)[0].label;\n                       let last = atts[index][i].length - 1\n                       atts[index][i][last].offset = (index * 8);\n                       attribute.data.push({'species': species, 'paths': atts[index][i]});\n                   }\n                   \n                   return attribute;\n               });\n\n              let mappedDis = attDataComb.map(dis=> {\n                  dis.data = dis.data.map((spec, i)=> {\n                      spec.paths = spec.paths.map(m=> {\n                            if(dis.type === 'discrete'){\n                                let offset = 5 * i;\n                                let maxProb = m.states? {'realVal': 1.0, 'state': m.winState, 'color':m.color, 'edgeMove': m.edgeMove, 'offset':m.offset, 'leaf': true} : findMaxState(m, offset); \n                                return maxProb;\n                            }else{\n                                return m;\n                            }\n                        });\n                   return spec;\n                  });\n        \n                  dis.leaves = dis.data.flatMap(f=> f.paths.filter(p=> p.leaf === true));\n                  return dis;\n              });\n              return mappedDis;\n           }).join('g').classed('att-wrapper', true);\n\n           let innerWrapRect = attWraps.append('rect').attr('width', 800);\n\n            innerWrapRect.attr('height', height);\n            innerWrapRect.style('fill', '#fff');\n            innerWrapRect.style('stroke', 'gray');\n\n            attWraps.attr('transform', (d, i)=> 'translate(0,'+((i * (height+5))+ 30)+')');\n            wrappers.attr('transform', (d, i)=> 'translate(60,'+(i * (5 * (height+15))+ 50)+')');\n            svg.attr('height', (wrappers.data().length * (5 * (height+15))+ 50));\n\n            let labels = attWraps.append('text')\n            .text(d=> d.label)\n            .style('text-anchor', 'end')\n            .style('font-size', 11)\n            labels.attr('transform', 'translate(-5,'+(50/2)+')');\n\n////WORKING ON STATE SHIFT VIEW///////\n            let shiftWraps = attWraps.filter(f=> f.type === 'discrete').selectAll('g.shift-wrap').data(d=> {\n       \n                let test = d.data.flatMap(m=> m.paths.filter((f, i)=> {\n                    if(i===0) return (i === 0);\n                    if(i > 0) return (m.paths[i-1].state != f.state)\n                    if(i < m.paths.length - 1) return (m.paths[i+1].state != f.state);\n                }));\n             \n                return [test];\n            }).join('g').classed('shift-wrap', true);\n\n            shiftWraps.attr('transform', 'translate(850, 0)');\n\n            let xAxisShift = shiftWraps.append('g').classed('axis-x', true);\n            xAxisShift.attr('transform', 'translate(0, '+(height - 15)+')');\n            xAxisShift.each((d, i, nodes)=> {\n                let x = d3.scaleLinear().domain([0, 1]).range([0, 200]);\n                d3.select(nodes[i]).call(d3.axisBottom(x).ticks(5));\n            });\n\n            let circGroupShift = shiftWraps.append('g').attr('transform', 'translate(0, 20)');\n\n            let shiftCircles = circGroupShift.selectAll('circle.shift').data(d=> d).join('circle').classed('shift', true);\n            shiftCircles.attr('r', 4).attr('cx', (d, i)=> {\n                let x = d3.scaleLinear().domain([0,1]).range([0, 200]);\n                return x(d.edgeMove)\n            });\n            shiftCircles.attr('fill', d=> d.color).style('opacity', 0.4);\n\n//////DRAW OBSERVED DISTRIBUTIONS/////\n            let leafWraps = attWraps.filter(f=> f.type === 'continuous').selectAll('g.observe-wrap').data(d=> {\n                let totalVal = attWraps.data().filter(f=> f.label === d.label).flatMap(m=> m.leaves.map(l=> l.realVal));\n                let max = d3.max(totalVal);\n                let min = d3.min(totalVal);\n                let totalMean = d3.mean(totalVal);\n\n                let x = d3.scaleLinear().domain([min, max]).range([0, 200])\n                let newVal = d.leaves.map((m, i)=> {\n                    m.index = i;\n                    return {'value': m.realVal, 'x': x, 'min': min, 'max': max, 'species':m.species };\n                });\n                let groupMean = d3.mean(newVal.map(v=> v.value));\n                return [{'dotVals':newVal, 'x': x, 'totalMean': totalMean, 'groupMean':groupMean}];\n            }).join('g').classed('observe-wrap', true);\n\n            leafWraps.attr('transform', 'translate(850, 0)');\n\n            let xAxis = leafWraps.append('g').classed('axis-x', true);\n            xAxis.attr('transform', 'translate(0, '+(height - 15)+')');\n            xAxis.each((d, i, nodes)=> {\n                d3.select(nodes[i]).call(d3.axisBottom(d.x).ticks(5));\n            });\n\n            let totalMeanLine = leafWraps.append('rect').classed('line', true).attr('transform', (d, i)=> 'translate('+(d.x(d.totalMean)-1.5)+',0)')\n            .attr('height', (height - 15)).attr('width', 3).attr('fill', 'red').style('opacity', '0.4');\n\n            let groupMeanLine = leafWraps.append('rect').classed('line', true).attr('transform', (d, i)=> 'translate('+(d.x(d.groupMean)-1.5)+',0)')\n            .attr('height', (height - 15)).attr('width', 3).attr('fill', 'gray').style('opacity', '0.4');\n\n            let distCircGroup = leafWraps.append('g').attr('transform', 'translate(0, 20)');\n            let distcircles = distCircGroup.selectAll('circle').data(d=> d.dotVals).join('circle');\n            distcircles.attr('r', 4).attr('cx', (d, i)=> d.x(d.value)).style('opacity', '0.3');\n\n            distcircles.on('mouseover', (d, i, n)=> {\n\n                let tool = d3.select('#tooltip');\n                tool.transition()\n                  .duration(200)\n                  .style(\"opacity\", .9);\n                let f = d3.format(\".3f\");\n                tool.html(d.species)\n                  .style(\"left\", (d3.event.pageX + 10) + \"px\")\n                  .style(\"top\", (d3.event.pageY - 28) + \"px\");\n           \n                let leafNodes = d3.select('#sidebar').selectAll('.node--leaf').filter(f=> f.data.label === d.species);\n                leafNodes.classed('selected', true);\n\n            }).on('mouseout', (d, i, n)=> {\n                d3.select(n[i]).classed('selected', false);\n\n                distcircles.classed('selected', false).style('opacity', 0.3);\n                let tool = d3.select('#tooltip');\n                tool.transition()\n                  .duration(500)\n                  .style(\"opacity\", 0);\n\n                let leafNodes = d3.select('#sidebar').selectAll('.node--leaf').filter(f=> f.data.label === d.species);\n                leafNodes.classed('selected', false);\n            });\n\n\n            ////DRAW SPECIES GROUPS IN THE ATTRIBUTES\n\n            let speciesGrp = attWraps.selectAll('g.species').data(d=> {\n                d.data = d.data.map(m=> {\n                    m.type = d.type;\n                    return m;\n                });\n                return d.data;\n            }).join('g').classed('species', true);\n\n            let lineGenD = d3.line()\n                .x(d=> {\n                    let x = d3.scaleLinear().domain([0, 1]).range([0, 800]);\n                    let distance = d.edgeMove;\n                    return x(distance);\n                    })\n                .y(d=> {\n                    let y = d3.scaleLinear().domain([0, 1]).range([height-2, 1]);\n                    return y(d.realVal);\n                });\n\n            let lineGenC = d3.line()\n                .x(d=> {\n                    let x = d3.scaleLinear().domain([0, 1]).range([0, 800]);\n                    let distance = d.edgeMove;\n                    return x(distance);\n                })\n                .y(d=> {\n                    let y = d.yScale;\n                    y.range([height-2, 1]);\n                    return y(d.realVal) + 2;\n                });\n\n            let innerStatePaths = speciesGrp.append('path')\n            .attr(\"d\", d=> {\n                    return (d.type === 'discrete') ? lineGenD(d.paths) : lineGenC(d.paths);\n                })\n            .attr(\"class\", (d, i)=> {\n                    return d.species + \" inner-line\"})\n            .style('stroke-width', 0.7)\n            .style('fill', 'none')\n            .style('stroke', 'gray');\n\n            innerStatePaths.on('mouseover', (d, i, n)=> {\n               \n                d3.select(n[i]).classed('selected', true);\n                distcircles.filter(f=> f.species === d.species).classed('selected', true).style('opacity', 1);\n\n                let tool = d3.select('#tooltip');\n                tool.transition()\n                  .duration(200)\n                  .style(\"opacity\", .9);\n                let f = d3.format(\".3f\");\n                tool.html(d.species)\n                  .style(\"left\", (d3.event.pageX + 10) + \"px\")\n                  .style(\"top\", (d3.event.pageY - 28) + \"px\");\n\n                let leafNodes = d3.select('#sidebar').selectAll('.node--leaf').filter(f=> f.data.label === d.species);\n                leafNodes.classed('selected', true);\n                \n            }).on('mouseout', (d, i, n)=> {\n                d3.select(n[i]).classed('selected', false);\n\n                distcircles.classed('selected', false).style('opacity', 0.3);\n                let tool = d3.select('#tooltip');\n                tool.transition()\n                  .duration(500)\n                  .style(\"opacity\", 0);\n\n                let leafNodes = d3.select('#sidebar').selectAll('.node--leaf').filter(f=> f.data.label === d.species);\n                leafNodes.classed('selected', false);\n            });\n\n            let disGroup = speciesGrp.filter(sp=> {\n            return sp.type === 'discrete';\n            });\n\n            let branchGrpDis = disGroup.selectAll('.branch').data(d=>d.paths).join('g').classed('branch', true);\n\n            branchGrpDis.attr('transform', (d)=> {\n                let x = d3.scaleLinear().domain([0, 1]).range([0, 800]);\n                    let distance = x(d.edgeMove);\n                    return 'translate('+distance+', 0)';\n            });\n\n            let bCirc = branchGrpDis.append('circle').attr('r', 5).attr('cy', (d, i)=> {\n                let y = d3.scaleLinear().domain([0, 1]).range([height - 5, 2]);\n                return y(d.realVal);\n            }).attr('cx', 5);\n\n            bCirc.classed('win-state', true);\n\n            bCirc.attr('fill', (d, i, n)=> {\n                if(i === 0){\n                    return d.color;\n                }else if(i === n.length - 1){\n                    if(d.state === d3.select(n[i-1]).data()[0].state){\n                        return 'rgba(189, 195, 199, 0.3)';\n                    }else{\n                        d.shift = true;\n                        return d.color;\n                    }\n                }else{\n                    if(d.state === d3.select(n[i+1]).data()[0].state || d.state === d3.select(n[i-1]).data()[0].state){\n                        return 'rgba(189, 195, 199, 0.3)';\n                    }else{\n                        d.shift = true;\n                        return d.color;\n                    }\n                }\n            });\n\n\n    let otherCirc = branchGrpDis.filter(f=> f.leaf != true).selectAll('.other').data(d=> d.other).join('circle').classed('other', true);\n    \n    otherCirc.attr('r', 4).attr('cx', 5).attr('cy', (c, i)=> {\n         let y = d3.scaleLinear().domain([1, 0]);\n         y.range([0, (height-5)]);\n             return y(c.realVal);\n         }).attr('fill', 'rgba(189, 195, 199, 0.1)');\n\n    otherCirc.on(\"mouseover\", function(d) {\n         let tool = d3.select('#tooltip');\n         tool.transition()\n           .duration(200)\n           .style(\"opacity\", .9);\n         let f = d3.format(\".3f\");\n         tool.html(d.state + \": \" + f(d.realVal))\n           .style(\"left\", (d3.event.pageX + 10) + \"px\")\n           .style(\"top\", (d3.event.pageY - 28) + \"px\");\n         })\n       .on(\"mouseout\", function(d) {\n         let tool = d3.select('#tooltip');\n         tool.transition()\n           .duration(500)\n           .style(\"opacity\", 0);\n         });\n\n    bCirc.on(\"mouseover\", function(d) {\n         let tool = d3.select('#tooltip');\n         tool.transition()\n           .duration(200)\n           .style(\"opacity\", .9);\n         let f = d3.format(\".3f\");\n         tool.html(d.state + \": \" + f(d.realVal))\n           .style(\"left\", (d3.event.pageX + 10) + \"px\")\n           .style(\"top\", (d3.event.pageY - 28) + \"px\");\n         })\n       .on(\"mouseout\", function(d) {\n         let tool = d3.select('#tooltip');\n         tool.transition()\n           .duration(500)\n           .style(\"opacity\", 0);\n         });\n     \n     /////AXIS ON HOVER////\n    branchGrpDis.on('mouseover', (d, i, n)=> {\n         let y = d3.scaleLinear().domain([1, 0]);\n         y.range([0, (height-5)]);\n         svg.selectAll('path.inner-line.'+ d.species).attr('stroke', 'red');\n         svg.selectAll('path.inner-line.'+ d.species).classed('selected', true);\n         d3.select(n[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(3));\n         d3.select(n[i]).selectAll('.other').style('opacity', 0.7).attr('fill', (d)=> d.color);\n         d3.select(n[i]).selectAll('.win-state').style('opacity', 0.7).attr('fill', (d)=> d.color);\n\n     }).on('mouseout', (d, i, n)=> {\n         d3.select(n[i]).select('g.y-axis')\n         d3.select(n[i]).select('g.y-axis').remove();\n         d3.selectAll('path.inner-line.'+ d.species).attr('stroke', 'gray');\n         d3.selectAll('path.inner-line.'+ d.species).classed('selected', false);\n         d3.selectAll('.other').attr('fill', 'rgba(189, 195, 199, 0.1)');\n         d3.select(n[i]).selectAll('.win-state').filter(w=> w.shift != true).attr('fill', 'rgba(189, 195, 199, 0.3)');\n     });\n\n    let conGroup = speciesGrp.filter(sp=> {\n         return sp.type === 'continuous';\n     });\n\n    let branchGrpCon = conGroup.selectAll('.branch').data(d=>d.paths).join('g').classed('branch', true);\n\n    branchGrpCon.attr('transform', (d)=> {\n      let x = d3.scaleLinear().domain([0, 1]).range([0, 800]);\n          let distance = x(d.edgeMove);\n          return 'translate('+distance+', 0)';\n      });\n\n      /////AXIS ON HOVER////\n    branchGrpCon.on('mouseover', (d, i, n)=> {\n         let y = d.yScale;\n         y.range([0, (height-5)]);\n         svg.selectAll('path.inner-line.'+ d.species).attr('stroke', 'red');\n         svg.selectAll('path.inner-line.'+ d.species).classed('selected', true);\n         d3.select(n[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(3));\n         d3.select(n[i]).selectAll('.other').style('opacity', 0.7);\n     }).on('mouseout', (d, i, n)=> {\n         d3.select(n[i]).select('g.y-axis')\n         d3.select(n[i]).select('g.y-axis').remove();\n         d3.selectAll('path.inner-line.'+ d.species).attr('stroke', 'gray');\n         d3.selectAll('path.inner-line.'+ d.species).classed('selected', false);\n         d3.selectAll('.other').style('opacity', 0.1);\n     });\n\n     let MeanRect = branchGrpCon.append('rect');\n     MeanRect.attr('width', 10).attr('height', 3);\n     MeanRect.attr('y', (d, i) => {\n         let scale = scales.filter(s=> s.field === d.label)[0];\n         let y = d3.scaleLinear().domain([scale.min, scale.max]).range([height, 0])\n         return y(d.realVal);\n     });\n\n     let confiBars = branchGrpCon.filter(f=> f.leaf != true).append('rect');\n     confiBars.attr('width', 10).attr('height', (d, i)=> {\n         let scale = scales.filter(s=> s.field === d.label)[0];\n         let y = d3.scaleLinear().domain([scale.min, scale.max]).range([height, 0]);\n         return y(d.lowerCI95) - y(d.upperCI95);\n     });\n\n     confiBars.attr('y', (d, i)=> {\n         let scale = scales.filter(s=> s.field === d.label)[0];\n         let y = d3.scaleLinear().domain([scale.min, scale.max]).range([height, 0]);\n         return y(d.upperCI95);\n     });\n     confiBars.style('opacity', 0.1);\n           \n           //drawGroups(stateBins, calculatedScales);\n    }else{\n            console.error('THIS HAS TO BE DISCRETE');\n        }\n        selectedTool.select('#show-drop-div-group').classed('show', false);\n    });\n    /////END SPLIT VIEW//////\n    let svgTest = main.select('#main-path-view');\n    let svg = svgTest.empty() ? main.append('svg').attr('id', 'main-path-view') : svgTest;\n    svg.selectAll('*').remove();\n\n    svg.attr('height', (stateBins.length * (height + 20)));\n    svg.append('g').attr('transform', 'translate(500, 40)').append('text').text(stateBins[0].field)\n\n    let wrappers = svg.selectAll('.grouped').data(stateBins).join('g').classed('grouped', true);\n    wrappers.each((d, i, n)=> {\n        let branchBar = drawBranchPointDistribution(d.data, d3.select(n[i]));\n        branchBar.select('rect').attr('x', -80).attr('fill','gray');\n        branchBar.selectAll('.branch-points').selectAll('circle').attr('fill', 'rgba(255, 255, 255, 0.3)');\n        \n        branchBar.select('.leaf-label').append('text').text((d, i) =>': '+ d.data.length).attr('transform', 'translate(45, 0)');\n        branchBar.selectAll('text').style('font-size', '11.5px').style('fill', '#fff');\n\n        branchBar.select('line').attr('stroke', '#fff');\n    });\n\n    let groupLabels = wrappers.append('g');\n   \n\n     //groupLabels.\n     let pathAdd = groupLabels.append('g').classed(\"fas fa-search-plus\", true);\n     pathAdd.attr('transform', 'translate(20, -5)');\n     pathAdd.append('circle').attr('r', 7).attr('fill', '#fff');\n     pathAdd.append('text').text('+').attr('transform', 'translate(5, 3)').attr('fill', 'gray');\n \n     pathAdd.style('cursor', 'pointer');\n\n     pathAdd.on('click', (d, i, n)=> {\n         let other = d3.selectAll(n).filter((f,j)=> j != i);\n         renderComparison(d, other.data(), d3.select('#selected'), scales);\n     });\n\n     groupLabels.append('text').text((d, i)=> d.state);\n     groupLabels.attr('transform', (d, i)=> 'translate(40, 16)');\n     groupLabels.style('text-anchor', 'end');\n     groupLabels.attr('fill', '#fff');\n\n    let innerGroup = wrappers.append('g').classed('inner-wrap', true);\n    innerGroup.attr('transform', (d,i)=> 'translate(110, 0)');\n\n    let attWraps = innerGroup.selectAll('.att-wrapper').data((d, i)=> {\n        let atts = formatAttributeData(d.data, scales, null);\n        let attDataComb = atts[0].map((att, i)=> {\n            let species = d.data[0].filter(f=> f.leaf === true)[0].label;\n            att[att.length - 1].offset = 0;\n            let attribute = {'label': att[att.length-1].label, 'type':att[att.length-1].type, 'data': [{'species': species, 'paths': att}]}\n            for(let index = 1; index < atts.length; index++ ){\n                let species = d.data[index].filter(f=> f.leaf === true)[0].label;\n                let last = atts[index][i].length - 1;\n                atts[index][i][last].offset = (index * 8);\n                attribute.data.push({'species': species, 'paths': atts[index][i]})\n            }\n            return attribute;\n        });\n\n       let mappedDis = attDataComb.map(dis=> {\n           dis.data = dis.data.map((spec, i)=> {\n               spec.paths = spec.paths.map(m=> {\n                if(dis.type === 'discrete'){\n                    let offset = 5 * i;\n                    let maxProb = m.states? {'realVal': 1.0, 'state': m.winState, 'color':m.color, 'edgeMove': m.edgeMove, 'offset':m.offset, 'leaf': true} : findMaxState(m, offset); \n                    return maxProb;\n                }else{\n                    return m;\n                }\n            });\n            return spec;\n           });\n           return dis;\n       });\n       return mappedDis;\n    }).join('g').classed('att-wrapper', true);\n\n    let innerWrapRect = attWraps.append('rect').attr('width', 800);\n    innerWrapRect.attr('height', height);\n    innerWrapRect.style('fill', '#fff');\n    innerWrapRect.style('stroke', 'gray');\n\n    attWraps.attr('transform', (d, i)=> 'translate(0,'+((i * (height+5))+ 30)+')');\n    wrappers.attr('transform', (d, i)=> 'translate(60,'+(i * (5 * (height+15))+ 50)+')');\n    \n    svg.attr('height', (wrappers.data().length * (5 * (height+15))+ 50));\n\n       //END EXPERIMENT\n    drawLeaves(attWraps, stateBins[0].field);\n\n    let labels = attWraps.append('text')\n    .text(d=> d.label)\n    .style('text-anchor', 'end')\n    .style('font-size', 11)\n    labels.attr('transform', 'translate(-5,'+(50/2)+')');\n\n    let speciesGrp = attWraps.selectAll('g.species').data(d=> {\n        d.data = d.data.map(m=> {\n            m.type = d.type;\n            return m;\n        });\n        return d.data;\n    }).join('g').classed('species', true);\n\n    let lineGenD = d3.line()\n       .x(d=> {\n           let x = d3.scaleLinear().domain([0, 1]).range([0, 800]);\n           let distance = d.edgeMove;\n           return x(distance);\n        })\n       .y(d=> {\n           let y = d3.scaleLinear().domain([0, 1]).range([height-2, 1]);\n           return y(d.realVal);\n       });\n\n       let lineGenC = d3.line()\n       .x(d=> {\n           let x = d3.scaleLinear().domain([0, 1]).range([0, 800]);\n           let distance = d.edgeMove;\n           return x(distance);\n        })\n       .y(d=> {\n           let y = d.yScale;\n           y.range([height-2, 1]);\n           return y(d.realVal) + 2;\n       });\n\n       let innerStatePaths = speciesGrp.append('path')\n       .attr(\"d\", d=> {\n            return (d.type === 'discrete') ? lineGenD(d.paths) : lineGenC(d.paths);\n        })\n       .attr(\"class\", (d, i)=> {\n            return d.species + \" inner-line\"})\n       .style('stroke-width', 0.7)\n       .style('fill', 'none')\n       .style('stroke', 'gray');\n\n       innerStatePaths.on('mouseover', (d, i, n)=> {\n        d3.select(n[i]).classed('selected', true);\n    }).on('mouseout', (d, i, n)=> {\n         d3.select(n[i]).classed('selected', false);\n    });\n\n    let disGroup = speciesGrp.filter(sp=> {\n     return sp.type === 'discrete';\n     });\n\n    let branchGrpDis = disGroup.selectAll('.branch').data(d=>d.paths).join('g').classed('branch', true);\n\n    branchGrpDis.attr('transform', (d)=> {\n        let x = d3.scaleLinear().domain([0, 1]).range([0, 800]);\n            let distance = x(d.edgeMove);\n            return 'translate('+distance+', 0)';\n     });\n\n    let bCirc = branchGrpDis.append('circle').attr('r', 5).attr('cy', (d, i)=> {\n         let y = d3.scaleLinear().domain([0, 1]).range([height - 5, 2]);\n         //return y(d.realVal) + d.offset;\n         return y(d.realVal);\n     }).attr('cx', 5);\n\n     bCirc.classed('win-state', true);\n\n     bCirc.attr('fill', (d, i, n)=> {\n        if(i === 0 || i === n.length - 1){\n            return d.color;\n            /*\n        }else if(i === n.length - 1){\n            if(d.state === d3.select(n[i-1]).data()[0].state){\n                return 'rgba(189, 195, 199, 0.3)';\n            }else{\n                d.shift = true;\n                return d.color;\n            }*/\n        }else{\n            if(d.state === d3.select(n[i+1]).data()[0].state || d.state === d3.select(n[i-1]).data()[0].state){\n                return 'rgba(189, 195, 199, 0.3)';\n            }else{\n                d.shift = true;\n                return d.color;\n            }\n        }\n     });\n\n    let otherCirc = branchGrpDis.filter(f=> f.leaf != true).selectAll('.other').data(d=> d.other).join('circle').classed('other', true);\n    \n    otherCirc.attr('r', 4).attr('cx', 5).attr('cy', (c, i)=> {\n         let y = d3.scaleLinear().domain([1, 0]);\n         y.range([0, (height-5)]);\n             return y(c.realVal);\n         }).attr('fill', 'rgba(189, 195, 199, 0.1)');\n\n    otherCirc.on(\"mouseover\", function(d) {\n         let tool = d3.select('#tooltip');\n         tool.transition()\n           .duration(200)\n           .style(\"opacity\", .9);\n         let f = d3.format(\".3f\");\n         tool.html(d.state + \": \" + f(d.realVal))\n           .style(\"left\", (d3.event.pageX + 10) + \"px\")\n           .style(\"top\", (d3.event.pageY - 28) + \"px\");\n         })\n       .on(\"mouseout\", function(d) {\n         let tool = d3.select('#tooltip');\n         tool.transition()\n           .duration(500)\n           .style(\"opacity\", 0);\n         });\n\n    bCirc.on(\"mouseover\", function(d) {\n         let tool = d3.select('#tooltip');\n         tool.transition()\n           .duration(200)\n           .style(\"opacity\", .9);\n         let f = d3.format(\".3f\");\n         tool.html(d.state + \": \" + f(d.realVal))\n           .style(\"left\", (d3.event.pageX + 10) + \"px\")\n           .style(\"top\", (d3.event.pageY - 28) + \"px\");\n         })\n       .on(\"mouseout\", function(d) {\n         let tool = d3.select('#tooltip');\n         tool.transition()\n           .duration(500)\n           .style(\"opacity\", 0);\n         });\n     \n     /////AXIS ON HOVER////\n    branchGrpDis.on('mouseover', (d, i, n)=> {\n         let y = d3.scaleLinear().domain([1, 0]);\n         y.range([0, (height-5)]);\n         svg.selectAll('path.inner-line.'+ d.species).attr('stroke', 'red');\n         svg.selectAll('path.inner-line.'+ d.species).classed('selected', true);\n         d3.select(n[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(3));\n         d3.select(n[i]).selectAll('.other').style('opacity', 0.7).attr('fill', (d)=> d.color);\n         d3.select(n[i]).selectAll('.win-state').style('opacity', 0.7).attr('fill', (d)=> d.color);\n\n     }).on('mouseout', (d, i, n)=> {\n         d3.select(n[i]).select('g.y-axis')\n         d3.select(n[i]).select('g.y-axis').remove();\n         d3.selectAll('path.inner-line.'+ d.species).attr('stroke', 'gray');\n         d3.selectAll('path.inner-line.'+ d.species).classed('selected', false);\n         d3.selectAll('.other').attr('fill', 'rgba(189, 195, 199, 0.1)');\n         d3.select(n[i]).selectAll('.win-state').filter(w=> w.shift != true).attr('fill', 'rgba(189, 195, 199, 0.3)');\n     });\n\n    let conGroup = speciesGrp.filter(sp=> {\n         return sp.type === 'continuous';\n     });\n\n    let branchGrpCon = conGroup.selectAll('.branch').data(d=>d.paths).join('g').classed('branch', true);\n\n    branchGrpCon.attr('transform', (d)=> {\n      let x = d3.scaleLinear().domain([0, 1]).range([0, 800]);\n          let distance = x(d.edgeMove);\n          return 'translate('+distance+', 0)';\n      });\n\n      /////AXIS ON HOVER////\n     branchGrpCon.on('mouseover', (d, i, n)=> {\n         let y = d.yScale;\n         y.range([0, (height-5)]);\n         svg.selectAll('path.inner-line.'+ d.species).attr('stroke', 'red');\n         svg.selectAll('path.inner-line.'+ d.species).classed('selected', true);\n         d3.select(n[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(3));\n         d3.select(n[i]).selectAll('.other').style('opacity', 0.7);\n\n     }).on('mouseout', (d, i, n)=> {\n         d3.select(n[i]).select('g.y-axis')\n         d3.select(n[i]).select('g.y-axis').remove();\n         d3.selectAll('path.inner-line.'+ d.species).attr('stroke', 'gray');\n         d3.selectAll('path.inner-line.'+ d.species).classed('selected', false);\n         d3.selectAll('.other').style('opacity', 0.1);\n     });\n\n     let MeanRect = branchGrpCon.append('rect');\n     MeanRect.attr('width', 10).attr('height', 3);\n     MeanRect.attr('y', (d, i) => {\n         let scale = scales.filter(s=> s.field === d.label)[0];\n         let y = d3.scaleLinear().domain([scale.min, scale.max]).range([height, 0])\n         return y(d.realVal);\n     });\n\n     let confiBars = branchGrpCon.filter(f=> f.leaf != true).append('rect');\n     confiBars.attr('width', 10).attr('height', (d, i)=> {\n         let scale = scales.filter(s=> s.field === d.label)[0];\n         let y = d3.scaleLinear().domain([scale.min, scale.max]).range([height, 0]);\n         return y(d.lowerCI95) - y(d.upperCI95);\n     });\n\n     confiBars.attr('y', (d, i)=> {\n         let scale = scales.filter(s=> s.field === d.label)[0];\n         let y = d3.scaleLinear().domain([scale.min, scale.max]).range([height, 0]);\n         return y(d.upperCI95);\n     })\n     confiBars.style('opacity', 0.1);\n\n     /////HIGHLIGHTING NODES IN A TREE ON HOVER//////\n     d3.selectAll('.att-wrapper').selectAll('.branch').on('mouseover', (d, i, n)=> {\n         let treeNode  = d3.select('#sidebar').selectAll('.node');\n        treeNode.filter(f=> {\n            return d.node === f.data.node;\n        }).classed('selected', true);\n      \n    }).on('mouseout', (d, i, n)=> {\n       \n        let treeNode  = d3.select('#sidebar').selectAll('.node');\n\n        treeNode.filter(f=> {\n            return d.node === f.data.node;\n        }).classed('selected', false);\n    })\n     \n}\nexport function drawDiscreteAtt(predictedAttrGrps, collapsed, bars){\n\n    let discreteAtt = predictedAttrGrps.filter(d=> {\n        return d[d.length - 1].type === 'discrete';\n    });\n\n    discreteAtt.selectAll('*').remove();\n\n    let attributeHeight = (collapsed === 'true')? 20 : 45;\n\n    let innerTimelineDis = discreteAtt.append('g').classed('attribute-time-line', true);\n\n    innerTimelineDis.append('line').classed('half', true).attr('x1', 0).attr('y1', 22).attr('x2', 1010).attr('y2', 22);\n    \n    let statePath = innerTimelineDis.selectAll('g').data(d=> {\n        let disct = d.map(m=> {\n            let test = (m.leaf == true) ? m.states.map(s=> {\n                s.move = m.move;\n                s.edgeMove = m.edgeMove;\n                s.color = m.color;\n                return s;\n            }) : m;\n            return test;\n        });\n        let keys = disct[0].map(s=> s.state);\n        let lines = keys.map(key=> {\n            return disct.map(m=> m.filter(f=> f.state == key)[0]);\n        });\n        return lines;\n    }).join('g').classed('state-path', true);\n\n    var lineGen = d3.line()\n    .x(d=> {\n        let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n        //let distance = (moveMetric === 'move') ? d.move : x(d.edgeMove);\n        let distance = x(d.edgeMove);\n        return distance + 7;})\n    .y(d=> {\n        let y = d3.scaleLinear().domain([0, 1]).range([attributeHeight-2, 1]);\n        return y(d.realVal);\n    });\n\n    let innerStatePaths = statePath.append('path')\n    .attr(\"d\", lineGen)\n    .attr(\"class\", (d, i)=> d[0].species + \" inner-line\")\n    .style('stroke-width', 0.7)\n    .style('stroke', (d)=> {\n        return d[0].color;\n    });\n\n    let attribRectDisc = innerTimelineDis.append('rect').classed('attribute-rect', true);\n    attribRectDisc.attr('height', attributeHeight);\n    let attributeNodesDisc = innerTimelineDis.selectAll('.attribute-node-discrete').data(d=> {\n        return d;}).join('g');\n\n    attributeNodesDisc.attr('transform', (d)=> {\n        let x = d3.scaleLinear().domain([0, 1]).range([0, 1000]);\n        if(d[0]){\n           // let distance = (moveMetric === 'move') ? d[0].move : x(d[0].edgeMove);\n           let distance = x(d[0].edgeMove);\n            return 'translate('+distance+', 0)';\n        }else{\n           // let distance = (moveMetric === 'move') ? d.move : x(d.edgeMove);\n            let distance = x(d.edgeMove);\n            return 'translate('+distance+', 0)';\n        }\n    });\n\n    attributeNodesDisc.append('rect').attr('width', 20).attr('height', attributeHeight).attr('opacity', 0);\n\n    attributeNodesDisc.append('line').attr('x1', 10).attr('x2', 10).attr('y1', 0).attr('y2', attributeHeight);\n\n        /////AXIS ON HOVER////\n    attributeNodesDisc.on('mouseover', (d, i, n)=> {\n            let y = d3.scaleLinear().domain([1, 0]);\n            y.range([0, attributeHeight]);\n            d3.select(n[i]).append('g').classed('y-axis', true).call(d3.axisLeft(y).ticks(3));\n        }).on('mouseout', (d, i, n)=> {\n            d3.select(n[i]).select('g.y-axis')\n            d3.select(n[i]).select('g.y-axis').remove();\n        })\n\n    attributeNodesDisc.attr('class', (d, i, n)=> {\n        let path = d3.selectAll(n).data();\n        return path[path.length - 1].species;\n    }).classed('attribute-node-discrete', true);\n\n    if(bars === false){\n\n        let stateDots = attributeNodesDisc.filter((att, i)=> att[0] != undefined).selectAll('.dots').data(d=> {\n            \n            return d;\n        }).join('circle').classed('dots', true);\n        \n        stateDots.attr('cx', 10).attr('cy', (d)=> {\n            let y = d3.scaleLinear().domain([0, 1]).range([attributeHeight - 2, 2]);\n            return y(d.realVal);\n        }).attr('r', 2);\n        \n        stateDots.style('fill', (d, i, n)=> {\n           \n            /*\n            let speciesPath = d3.selectAll('.attribute-node-discrete.'+ d.species)//.filter(f=> f.type === 'discrete');\n           \n            let nodeArray = speciesPath.data().map(m=> {\n                return m.node ? m.node : m[0].node;\n            });\n            let index = nodeArray.indexOf(d.node);\n           \n            */\n            //return d.color\n            return 'gray';\n        });\n    \n        stateDots.filter(f=> f.realVal > 0.5).attr('r', 4);\n/*\n        let maxDots = stateDots.filter((f, i, n)=> {\n           \n            return f.realVal === d3.max(d3.selectAll(n).data().map(m=> m.realVal));\n        });\n*/\n        \n\n        ////NEED TO ADD COLOR ON STATE CHANGE////\n    \n        stateDots.on(\"mouseover\", function(d) {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(200)\n              .style(\"opacity\", .9);\n            let f = d3.format(\".3f\");\n            tool.html(d.state + \": \" + f(d.realVal))\n              .style(\"left\", (d3.event.pageX) + \"px\")\n              .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            })\n          .on(\"mouseout\", function(d) {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(500)\n              .style(\"opacity\", 0);\n            });\n    \n        let endStateDot = attributeNodesDisc.filter((att, i)=> {\n            return att[0] === undefined;}).classed('discrete-leaf', true);\n    \n        endStateDot.append('circle').attr('cx', 10).attr('cy', 2).attr('r', 7).style('fill', d=> {\n           return d.color;\n        });\n        ////NEED TO MAKE A FUNCTION TO ASSIGN COLOR OF STATES//////\n    \n        endStateDot.append('text').text(d=> d.winState).attr('transform', 'translate(20, 5)').style('font-size', 10);\n\n    }else{\n        attributeNodesDisc.filter((att, i)=> {\n            return att[0] != undefined;}).append('rect').attr('height', attributeHeight).attr('width', 20).attr('fill', '#fff')\n        let stateBars = attributeNodesDisc.filter((att, i)=> att[0] != undefined).selectAll('.dis-rect').data(d=> {\n            return d;\n        }).join('rect').classed('dis-rect', true);\n\n        stateBars.attr('width', 20).attr('height', (d, i)=> {\n         \n            let y = d3.scaleLinear().domain([0, 1]).range([0, attributeHeight]);\n            return y(d.realVal);\n        });\n\n        stateBars.attr('fill', (d, i)=> d.color);\n        stateBars.attr('opacity', '0.7');\n        stateBars.attr('stroke', '#fff');\n        stateBars.attr('transform', (d, i, n)=> {\n            let y = d3.scaleLinear().domain([0, 1]).range([0, attributeHeight]);\n            let probability = d3.selectAll(n).data().sort((a, b)=> b.realVal - a.realVal);\n            let chosenIn = probability.map(p=> p.state).indexOf(d.state);\n         \n            if(chosenIn === 0){\n                    return 'translate(0,0)';\n            }else{\n                ///need to make this a reduce function///\n                let valueAdd = 0;\n                    for(let step = 0; step < chosenIn; step++){\n                        valueAdd = valueAdd + probability[step].realVal;\n                    }\n                return 'translate(0,'+(y(valueAdd))+')';\n            }\n        });\n\n        stateBars.on(\"mouseover\", function(d) {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(200)\n              .style(\"opacity\", .9);\n            let f = d3.format(\".3f\");\n            tool.html(d.state + \": \" + f(d.realVal))\n              .style(\"left\", (d3.event.pageX) + \"px\")\n              .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            })\n          .on(\"mouseout\", function(d) {\n            let tool = d3.select('#tooltip');\n            tool.transition()\n              .duration(500)\n              .style(\"opacity\", 0);\n            });\n    \n        let endStateDot = attributeNodesDisc.filter((att, i)=> {\n            return att[0] === undefined;}).classed('discrete-leaf', true);\n    \n        endStateDot.append('circle').attr('cx', 10).attr('cy', 2).attr('r', 7).style('fill', d=> {\n           return d.color;\n        });\n\n        endStateDot.append('text').text(d=> d.winState).attr('transform', 'translate(20, 5)').style('font-size', 10);\n\n    }\n\n    return attributeNodesDisc;\n}\n\n","import '../styles/index.scss';\n\nimport * as d3 from \"d3\";\nimport {dataMaster} from './index';\nimport { updateMainView } from './viewControl';\n\nexport let filterMaster = [];\n\nexport function removeFilter(filterId, scales){\n    let dataFilters = filterMaster.filter(f=> f.filterType === 'data-filter');\n    let filterIndex = dataFilters.map(f=> f.filterId).indexOf(filterId);\n\n    if(filterIndex != dataFilters.length - 1){\n   \n        let baseData = filterIndex === 0? dataMaster[0] : dataFilters[filterIndex - 1].data;\n    \n        let testData = [...baseData];\n\n        let filterToolbar = d3.select(\"#toolbar\");\n\n        let badges = filterToolbar.selectAll('.filter-tag').remove();\n  \n        for(let i = filterIndex + 1; i < dataFilters.length; i ++){\n       \n            let fun = dataFilters[i].filterFunction;\n            if(dataFilters[i].attributeType === 'continuous'){\n                let newTestData = fun(testData, dataFilters[i].selectedOption, dataFilters[i].predictedFilter, dataFilters[i].observedFilter);\n                dataFilters[i].data = [...newTestData];\n                dataFilters[i].filterId = 'c-'+ i;\n                //// Re adding in buttons ////\n                addFilterTag(dataFilters[i], scales);\n                testData = newTestData;\n            }else{//discrete\n                let newTestData = fun(testData, dataFilters[i].selectedOption, dataFilters[i].fromState, dataFilters[i].toState);\n                dataFilters[i].data = [...newTestData];\n                dataFilters[i].filterId = 'd-'+ i;\n                //// Re adding in buttons ////\n                addFilterTag(dataFilters[i], scales);\n                testData = newTestData;\n            }\n        }\n    }\n    let newFilterMaster = filterMaster.filter(f=> f.filterId != filterId);\n\n    filterMaster = newFilterMaster;\n}\n\nexport function addFilter(filterType, attType, filterId, filFunction, oldData, newData, extra){\n    let filterOb = {'filterType': filterType, 'attributeType': attType, 'filterId': filterId, 'filterFunction':filFunction, 'before-data': oldData, 'data': newData}\n    if(extra != null){\n        extra.forEach(ex=> {\n            filterOb[ex[0]] = ex[1];\n        });\n    }\n    filterMaster.push(filterOb);\n    return filterOb;\n}\n\nexport function getLatestData(){\n    let data = filterMaster.length > 0 ? filterMaster[filterMaster.length - 1].data : dataMaster[0];\n    return data;\n}\n\n///NEED TO BREAK THESE OUT INTO SEPARATE FILTERS\nexport function toggleFilters(filterButton, main, scales){\n\n    let moveMetric = 'edgeLength';\n\n    let filterDiv = d3.select('#filter-tab');\n    let data = getLatestData();\n\n    if(filterDiv.classed('hidden')){\n        filterButton.text('Hide Filters');\n        filterDiv.classed('hidden', false);\n        main.style('padding-top', '200px');\n\n        //move metric is 'edgeLength'\n\n        renderAttToggles(filterDiv, data, scales);\n        stateFilter(filterDiv, filterButton, data, main, scales);\n        queryFilter(filterDiv, filterButton, data, main, scales);\n\n    }else{\n        filterButton.text('Show Filters');\n        filterDiv.selectAll('*').remove();\n        filterDiv.classed('hidden', true);\n        main.style('padding-top', '0px');\n    }\n}\n\nfunction addFilterTag(data, scales){\n\n    let filterToolbar = d3.select('#toolbar');\n\n    if(data.attributeType === 'continuous'){\n\n        let formater = d3.format(\".2s\");\n        let button = filterToolbar.append('button').classed('btn btn-info filter-tag', true);\n        d3.select(button).datum(data);\n        let span = button.append('span').classed('badge badge-light', true);\n        span.text(data.data.length);\n        let label = button.append('h6').text(data.selectedOption + \"  Predicted: \"+ formater(data.predictedFilter[0]) + \"-\" + formater(data.predictedFilter[1]) + \" Observed: \" + formater(data.observedFilter[0]) + \"-\" + formater(data.observedFilter[1]));\n        let xSpan = label.append('i').classed('close fas fa-times', true);\n        xSpan.on('click', ()=> {\n            let filterLine = filterMaster.filter(f=> f.filterType === 'data-filter').filter(f=> data.attribute != f.attribute);\n            ////YOU NEED TO CHANGE THIS TO REMOVE FILTER FUNCTION\n            removeFilter(data.filterId, scales);\n            updateMainView(scales, null);\n            d3.selectAll('.link-not-there').classed('link-not-there', false);\n            d3.selectAll('.node-not-there').classed('node-not-there', false);\n            button.remove();\n        });\n\n    }else if(data.attributeType === 'discrete'){\n     \n        let button = filterToolbar.append('button').classed('btn btn-info filter-tag', true);\n        let span = button.append('span').classed('badge badge-light', true);\n        span.text(data.data.length);\n        button.append('h6').text(data.state[0]);\n        button.append('i').classed('fas fa-arrow-right', true);\n        button.append('h6').text(data.state[1] + '  ');\n       \n        let xSpan = button.append('i').classed('close fas fa-times', true);\n        xSpan.on('click', ()=> {\n            removeFilter(data.filterId, scales);\n            updateMainView(scales, null);\n            d3.selectAll('.link-not-there').classed('link-not-there', false);\n            d3.selectAll('.node-not-there').classed('node-not-there', false);\n            button.remove();\n        });\n\n    }else if(data.attributeType === 'branch'){\n        let button = filterToolbar.append('button').classed('btn btn-info filter-tag', true);\n        let span = button.append('span').classed('badge badge-light', true);\n        span.text(data.data.length);\n        button.append('h6').text(' At Branch: ' + data.nodeId);\n       \n        let xSpan = button.append('i').classed('close fas fa-times', true);\n        xSpan.on('click', ()=> {\n            removeFilter(data.filterId, scales);\n            updateMainView(scales, null);\n            d3.selectAll('.link-not-there').classed('link-not-there', false);\n            d3.selectAll('.node-not-there').classed('node-not-there', false);\n            button.remove();\n        });\n\n    }\n    \n}\nfunction stateFilter(filterDiv, filterButton, normedPaths, main, moveMetric, scales){\n    let keys = ['Select a Trait'].concat(Object.keys(normedPaths[0][0].attributes));\n        let selectWrapper = filterDiv.append('div').classed('filter-wrap', true);\n        selectWrapper.style('width', '200px');\n        selectWrapper.append('h6').text('State Transition:');\n        let attButton = stateChange(selectWrapper, keys, 'attr-select', '');\n\n        let attProps = selectWrapper.append('div').classed('attribute-properties', true);\n\n        attButton.on(\"change\", function(d) {\n            var selectedOption = d3.select(this).property(\"value\");\n            let options = scales.filter(f=> f.field === selectedOption)[0];\n            attProps.selectAll('*').remove();\n\n            if(options.type === \"discrete\"){\n                let optionArray = ['Any'];\n                let optKeys = options.scales.map(s=> s.scaleName);\n                optionArray = optionArray.concat(optKeys);\n                let button1 = stateChange(attProps, optionArray, 'predicted-state', 'From');\n                let button2 = stateChange(attProps, optionArray, 'observed-state', 'To');\n                let submit = attProps.append('button').classed('btn btn-outline-success', true);\n                submit.text('Filter');\n\n                submit.on('click', ()=> {\n                    let fromState = button1.node().classList[0];\n                    let toState = button2.node().classList[0];\n\n                      ////GOING TO ADD FILTERING HERE//// NEED TO BREAK INTO ITS OWN THING/////\n                      \n                    let lastFilter = filterMaster.filter(f=> f['filterType'] === 'data-filter');\n              \n                    //let data = lastFilter.length > 0 ? lastFilter[lastFilter.length - 1].data : dataMaster[0];\n                    let data = getLatestData();\n              \n                    let test = discreteFilter(data, selectedOption, fromState, toState);\n\n                    let filId = 'd-'+filterMaster.filter(f=> f.attributeType === 'discrete').length;\n                    let filterOb = addFilter('data-filter', 'discrete', filId, discreteFilter, [...data], [...test], [['state', [fromState, toState]], ['selectedOption', selectedOption]]);\n\n                    updateMainView(scales, null);\n\n                    ////Class Tree Links////\n                    let treeLinks  = d3.select('#sidebar').selectAll('.link');\n                    let treeNode  = d3.select('#sidebar').selectAll('.node');\n\n                    let nodeList = test.flatMap(path=> path.map(node => node.node));\n\n                    d3.selectAll('.link-not-there').classed('link-not-there', false);\n                    d3.selectAll('.node-not-there').classed('node-not-there', false);\n\n                    let missingLinks = treeLinks.filter(f=> nodeList.indexOf(f.data.node) === -1);\n                    missingLinks.classed('link-not-there', true);\n\n                    let missingNodes = treeNode.filter(f=> nodeList.indexOf(f.data.node) === -1);\n                    missingNodes.classed('node-not-there', true);\n\n                    ///END NODE DIMMING///////\n\n                    /////ADD THE FILTER TO THE TOOLBAR////\n                    addFilterTag(filterOb, scales);\n\n                    ////HIDE THE FILTER BAR/////\n                    filterButton.text('Show Filters');\n                    filterDiv.selectAll('*').remove();\n                    filterDiv.classed('hidden', true);\n                    main.style('padding-top', '0px');\n                });\n            }else{\n                \n                let yScale = d3.scaleLinear().domain([options.min, options.max]).range([60, 0]);\n               \n                let continRanges = attProps.append('svg');\n                continRanges.attr('width', 200).attr('height', 100);\n                let data = [{'label':'Ancestors', 'type': 'predicted'}, {'label':'Leaves', 'type': 'observed'}];\n                let ranges = continRanges.selectAll('.range').data(data).join('g').classed('range', true);\n\n                ranges.attr('transform', (d, i)=> 'translate('+((i*125)+',20)'));\n\n                let brushBars = ranges.append('g');\n                brushBars.attr('transform', 'translate(10, 10)');\n\n                let labels = ranges.append('text').text((d)=> d.label+ ': ');\n                labels.attr('x', 0).attr('y', 0);\n                let wrapperRect = brushBars.append('rect').attr('width', 20).attr('height', 50);\n                wrapperRect.attr('x', 10);\n\n                brushBars.append(\"g\")\n                .attr(\"class\", \"axis axis--y\")\n                .attr(\"transform\", \"translate(10,0)\")\n                .call(d3.axisLeft(yScale).ticks(3));\n                \n                let brushMoved = function(){\n                    var s = d3.event.selection;\n                    if (s == null) {\n                      handle.attr(\"display\", \"none\");\n                    \n                    } else {\n                      var sx = s.map(yScale.invert);\n                    }\n                };\n                let xBrush = d3.brushY().extent([[10,0], [30, 60]]).on(\"end\", brushMoved);\n                let brushGroup = brushBars.append('g').call(xBrush);\n                brushGroup.call(xBrush.move, [0, 60]);\n\n                let submit = attProps.append('button').classed('btn btn-outline-success', true);\n                submit.text('Filter');\n\n                submit.on('click', ()=> {\n\n                    let selections = brushGroup._groups[0].map(m=> m.__brush.selection.map(s=> s[1]));\n                    let predictedFilter = selections[0].map(yScale.invert).sort();\n                    let observedFilter = selections[1].map(yScale.invert).sort();\n                    let lastFilter = filterMaster.filter(f=> f['filterType'] === 'data-filter');\n\n                    let data = lastFilter.length > 0 ? lastFilter[lastFilter.length - 1].data : dataMaster[0];\n\n                    let test = continuousFilter(data, selectedOption, predictedFilter, observedFilter);\n\n                    let filId = 'c-'+filterMaster.filter(f=> f.attributeType === 'continuous').length;\n                    let filterOb = addFilter('data-filter', 'continuous', filId, continuousFilter, [...data], [...test], [['selectedOption', selectedOption], ['predictedFilter', predictedFilter], ['observedFilter', observedFilter]]);\n\n                    updateMainView(scales, null);\n\n                    /////ADD THE FILTER TO THE TOOLBAR/////\n                    addFilterTag(filterOb, scales);\n\n                    ///DIMMING THE FILTERED OUT NODES//////\n\n                    ////Class Tree Links////\n                    let treeLinks  = d3.select('#sidebar').selectAll('.link');\n                    let treeNode  = d3.select('#sidebar').selectAll('.node');\n\n                    let nodeList = test.flatMap(path=> path.map(node => node.node));\n\n                    d3.selectAll('.link-not-there').classed('link-not-there', false);\n                    d3.selectAll('.node-not-there').classed('node-not-there', false);\n\n                    let missingLinks = treeLinks.filter(f=> nodeList.indexOf(f.data.node) === -1);\n                    missingLinks.classed('link-not-there', true);\n\n                    let missingNodes = treeNode.filter(f=> nodeList.indexOf(f.data.node) === -1);\n                    missingNodes.classed('node-not-there', true);\n\n                    ///END NODE DIMMING///////\n\n                    ////HIDE THE FILTER BAR/////\n                    filterButton.text('Show Filters');\n                    filterDiv.selectAll('*').remove();\n                    filterDiv.classed('hidden', true);\n                    main.style('padding-top', '0px');\n                });\n            }\n         });\n}\nexport function nodeFilter(selectedNode, scales){\n   \n    let data = getLatestData();\n    let dataFilters = filterMaster.filter(f=> f.filterType === 'data-filter');\n \n    let test = data.filter(path => {\n        return path.map(node => node.node).indexOf(selectedNode) > -1;\n    });\n\n    let filId = 'b-'+filterMaster.filter(f=> f.attributeType === 'branch').length;\n    //let filterOb = addFilter('data-filter', 'discrete', filId, discreteFilter, [...data], [...test], [['state', [fromState, toState]], ['selectedOption', selectedOption]]);\n\n    let filterOb = addFilter('data-filter', 'branch', filId, nodeFilter, [...data], [...test], [['nodeId', selectedNode]])\n    addFilterTag(filterOb, scales);\n    updateMainView(scales, null);\n\n   ////Class Tree Links////\n   let treeLinks  = d3.select('#sidebar').selectAll('.link');\n   let treeNode  = d3.select('#sidebar').selectAll('.node');\n\n   let nodeList = test.flatMap(path=> path.map(node => node.node));\n\n   d3.selectAll('.link-not-there').classed('link-not-there', false);\n   d3.selectAll('.node-not-there').classed('node-not-there', false);\n\n   let missingLinks = treeLinks.filter(f=> nodeList.indexOf(f.data.node) === -1);\n   missingLinks.classed('link-not-there', true);\n\n   let missingNodes = treeNode.filter(f=> nodeList.indexOf(f.data.node) === -1);\n   missingNodes.classed('node-not-there', true);    \n  \n}\n\nexport function leafStateFilter(selectedState, scales){\n   \n    let data = getLatestData();\n    let dataFilters = filterMaster.filter(f=> f.filterType === 'data-filter');\n \n    let test = data.filter(path => {\n        return path[path.length - 1].attributes[selectedState.label].winState === selectedState.winState;\n    });\n\n    let filId = 'l-'+filterMaster.filter(f=> f.attributeType === 'leaf').length;\n    //let filterOb = addFilter('data-filter', 'discrete', filId, discreteFilter, [...data], [...test], [['state', [fromState, toState]], ['selectedOption', selectedOption]]);\n\n    let filterOb = addFilter('data-filter', 'leaf', filId, nodeFilter, [...data], [...test], [['leafState', [selectedState.label, selectedState.winState]]])\n    addFilterTag(filterOb, scales);\n    updateMainView(scales, null);\n\n   ////Class Tree Links////\n   let treeLinks  = d3.select('#sidebar').selectAll('.link');\n   let treeNode  = d3.select('#sidebar').selectAll('.node');\n\n   let nodeList = test.flatMap(path=> path.map(node => node.node));\n\n   d3.selectAll('.link-not-there').classed('link-not-there', false);\n   d3.selectAll('.node-not-there').classed('node-not-there', false);\n\n   let missingLinks = treeLinks.filter(f=> nodeList.indexOf(f.data.node) === -1);\n   missingLinks.classed('link-not-there', true);\n\n   let missingNodes = treeNode.filter(f=> nodeList.indexOf(f.data.node) === -1);\n   missingNodes.classed('node-not-there', true);    \n  \n}\n\n\nfunction continuousFilter(data, selectedOption, predicted, observed){\n\n    return data.filter(path=> {\n        let filterArray = path.map(node=> {\n            let numb = node.attributes[selectedOption].realVal;\n            if(node.leaf == true){\n                return numb > observed[0] && numb < observed[1];\n            }else{\n                return numb > predicted[0] && numb < predicted[1];\n            }\n        });\n        return filterArray.indexOf(false) === -1;\n    });\n}\nfunction discreteFilter(data, selectedOption, fromState, toState){\n    if(selectedOption != undefined){\n        return data.filter(path=> {\n            let filterPred = path.filter(f=> f.leaf != true).map(node=> {\n                let states = node.attributes[selectedOption].states;\n                if(fromState === 'Any'){\n                    return true;\n                }else{\n                    return states.filter(st=> st.state === fromState).length > 0 && states.filter(st=> st.state === fromState)[0].realVal > 0.75;\n                }\n            });\n            let filterObs = path.filter(f=> f.leaf === true).map(node=> {\n            let win = node.attributes[selectedOption].winState;\n            if(toState === 'Any'){\n                return true;\n            }else{\n                return win === toState;\n            }\n            });\n            return filterPred.indexOf(true) > -1 && filterObs.indexOf(true) > -1;\n        });\n    }\n}\nfunction queryFilter(filterDiv, filterButton, normedPaths, main, scales){\n\n    let moveMetric = 'edgeLength';\n\n    let searchDiv = filterDiv.append('div').classed('search-bar-div', true);\n        searchDiv.append('h6').text('Query Filter:');\n        let form = searchDiv.append('form').classed('form-inline', true);\n        let input = form.append('input').classed('form-control mr-sm-2', true);\n        input.attr('type', 'search').attr('placeholder', 'Search by Species').attr('aria-label', 'Search');\n        let searchButton = form.append('button').classed('btn btn-outline-success my-2 my-sm-0', true).attr('type', 'button').append('i').classed(\"fas fa-search\", true);\n        searchButton.on('click', ()=> {\n\n            let queryArray = input.node().value.split(' ').map(m=> m.toLowerCase());\n\n            let test = normedPaths.filter(path=> {\n                let species = path.filter(node=> node.leaf === true)[0].label;\n                return queryArray.indexOf(species) > -1;\n            });\n\n             ////DRAW THE PATHS\n         \n             updateMainView(scales, null);\n\n            let filterToolbar = d3.select(\"#toolbar\");\n            let button = filterToolbar.append('button').classed('btn btn-info', true);\n            let span = button.append('span').classed('badge badge-light', true);\n            span.text(test.length);\n            button.append('h6').text('Query Filter');\n            let xSpan = button.append('i').classed('close fas fa-times', true);\n            xSpan.on('click', ()=> {\n                updateMainView(scales, null);\n                button.remove();\n            });\n            d3.select('#main-path-view').style('height', ()=>{\n                return ((test.length * 60) + (Object.keys(test[0][0].attributes).length * 100) + 'px');\n            });\n\n            ////HIDE THE FILTER BAR/////\n            filterButton.text('Show Filters');\n            filterDiv.selectAll('*').remove();\n            filterDiv.classed('hidden', true);\n            main.style('padding-top', '0px');\n        });\n\n}\nfunction renderAttToggles(filterDiv, normedPaths, scales){\n\n    let moveMetric = 'edgeLength';\n\n    ////NEED TO GET RID OF TOGGLE SVG\n    let keys = Object.keys(normedPaths[0][0].attributes);\n    let presentFilters = filterMaster.filter(f=> f.type === 'hide-attribute');\n    let noShow = presentFilters.length > 0 ? presentFilters.map(m=> m.attribute) : [];\n\n    let wrapper = filterDiv.append('div').classed('filter-wrap', true);\n    wrapper.style('width', '150px');\n   \n    let svg = wrapper.append('svg').classed('attr-toggle-svg', true);\n\n   let title = svg.append('text').text('Attributes: ');\n    title.attr('x', 20).attr('y', 10);\n    \n    let labelWrap = svg.append('g').attr('transform', 'translate(20, 25)');\n    let labelGroups = labelWrap.selectAll('g').data(keys).join('g'); \n    \n    labelGroups.attr('transform', (d, i)=> 'translate(0,'+(i* 25)+')');\n\n    let toggle = labelGroups.append('circle').attr('cx', 0).attr('cy', 0);\n    toggle.classed('toggle', true);\n    let shownToggs = toggle.filter(t=> noShow.indexOf(t) === -1);\n   \n    shownToggs.classed('shown', true);\n    shownToggs.style('fill', (d, i)=>{\n        return scales.filter(f=> f.field === d)[0].catColor;\n    });\n\n    toggle.on('click', function(d, i){\n        let togg = d3.select(this);\n        toggleCircle(togg, scales);\n   \n        filterMaster.push({'type':'hide-attribute', 'attribute':d, 'before-data': [...normedPaths]});\n\n        let newKeys = d3.selectAll('.shown');\n        let hideKeys = scales.filter(sc=> newKeys.data().indexOf(sc.field) === -1);\n        let newFilMaster = filterMaster.filter(f=> f.type != 'hide-attribute');\n        hideKeys.forEach(key=> {\n            newFilMaster.push({'type':'hide-attribute', 'attribute':key.field, 'before-data': [...normedPaths], 'data': [...normedPaths]});\n        });\n        filterMaster = newFilMaster;\n        updateMainView(scales, null);\n    });\n    let labelText = labelGroups.append('text').text(d=> d).style('font-size', 10);\n    labelText.attr('transform', 'translate(10, 4)');  \n    \n}\nfunction stateChange(selectorDiv, keys, selectId, label){\n\n    let dropDownWrapper = selectorDiv.append('div').classed('selector', true);\n    let header = dropDownWrapper.append('h6').text(label);\n    \t// create the drop down menu of cities\n\tlet selectOp = dropDownWrapper\n    .append(\"select\")\n    .attr(\"id\", selectId).attr('class', 'Any');\n    \n    let options = selectOp.selectAll(\"option\")\n    .data(keys).join(\"option\");\n\n    options.text(d=> d).attr(\"value\", d=> d);\n\n    d3.select(\"#\"+selectId).on(\"change\", function(d) {\n       var selectedOption = d3.select(this).property(\"value\");\n       d3.select(this).attr('class', selectedOption);\n    });\n\n    return d3.select('#'+ selectId);\n}\nfunction toggleCircle(circle, scales){\n    if(circle.classed('shown')){\n        circle.classed('shown', false);\n        circle.style('fill', '#fff');\n    }else{\n        circle.classed('shown', true);\n        circle.style('fill', (d, i)=> scales.filter(f=> f.field === d)[0].catColor);\n    }\n}","import { pairPaths } from \"./dataFormat\";\nimport { dropDown } from \"./buttonComponents\";\nimport * as d3 from \"d3\";\nimport { renderTree } from \"./sidebarComponent\";\nimport { speciesTest, dataMaster } from \".\";\n\n\nexport function generatePairs(data, main){\n\n        let pairs = pairPaths(data);\n\n        let attKeys = d3.entries(pairs[0].p1[0].attributes)\n                    .filter(f=> f.value.type === 'continuous')\n                    .map(m=> {\n                        return {'field': m.key, 'value': m.key }\n                    });\n        \n        let drop = d3.select('.attr-drop.dropdown').selectAll('a').empty() ? dropDown(d3.select('#toolbar'), attKeys, attKeys[0].field, 'attr-drop') : d3.select('.attr-drop.dropdown').selectAll('a');\n\n        drop.on('click', (d, i, n)=> {\n            updateRanking(pairPaths(data), d.field);\n            renderTree(d3.select('#sidebar'), null, true, d.field);\n            d3.select('.attr-drop.dropdown').select('button').text(d.field);\n        });\n\n        updateRanking([...pairs], attKeys[0].field);\n}\n\nexport function updateRanking(pairs, field){\n    \n    let deltaMax = d3.max([...pairs].map(m=> m.deltas.filter(f=> f.key === field)[0]).map(m=> m.value));\n    let closeMax = d3.max([...pairs].map(m=> m.closeness.filter(f=> f.key === field)[0]).map(m=> m.value));\n    let distMax = d3.max([...pairs].map(d=> d.distance))\n    let deltaScale = d3.scaleLinear().domain([0, deltaMax]).range([0, 1]);\n    let closeScale = d3.scaleLinear().domain([closeMax, 0]).range([0, 1]);\n    let distScale = d3.scaleLinear().domain([0, distMax]).range([0, 1]);\n    let pickedPairs = [...pairs].map(p=> {\n        p.delta = p.deltas.filter(d=> d.key === field)[0];\n        p.closeness = p.closeness.filter(d=> d.key === field)[0];\n        p.deltaRank = deltaScale(p.delta.value);\n        p.closenessRank = closeScale(p.closeness.value);\n        p.distanceRank = distScale(p.distance);\n        p.totalRank = p.deltaRank + p.closenessRank + p.distanceRank;\n        return p;\n    })\n\n    \n    let sortedPairs = pickedPairs.sort((a, b)=> b.totalRank - a.totalRank).slice(0, 40);\n    \n    sortedPairs = sortedPairs.filter((f, i)=> i%2 === 0)\n    drawSorted(sortedPairs, field);\n\n}\n\nfunction drawSorted(pairs, field){\n    console.log('pairs', pairs, field);\n    let width = 600;\n    let height = 100;\n    let xScale = d3.scaleLinear().domain([0, 1]).range([0, width]);\n\n    d3.select('#main').selectAll('*').remove()\n    let svg = d3.select('#main').append('svg');\n    svg.attr('height', pairs.length * 150)\n    let wrap = svg.append('g');\n    wrap.attr('transform', 'translate(20, 70)')\n    let pairWraps = wrap.selectAll('g.pair-wrap').data(pairs).join('g').classed('pair-wrap', true);\n    pairWraps.attr('transform', (d, i)=> `translate(50,${i*150})`);\n    pairWraps.append('rect')\n        .attr('width', (d, i)=> {\n            return width - xScale(d.common.edgeMove);\n        })\n        .attr('height', height)\n        .attr('x', d=> xScale(d.common.edgeMove))\n        .attr('stroke-width', 1).attr('stroke', 'black')\n        .attr('fill', '#fff');\n\n    pairWraps.append('text').text((d, i)=> {\n        return `${d.p1[d.p1.length - 1].label} + ${d.p2[d.p2.length - 1].label}`\n    }).attr('y', -10);\n\n    let scoreWrap = pairWraps.append('g').classed('score-wrap', true);\n    let scoreGroups = scoreWrap.selectAll('g.score').data((d, i)=> {\n        return [{label: 'Distance', value: d.distance, rank: d.distanceRank}, \n         {label: 'Delta', value: d.delta.value, rank: d.deltaRank},\n         {label: 'Closeness', value: d.closeness.value, rank: d.closenessRank}\n        ];\n    }).join('g').classed('score', true);\n\n    let scoreLabel = scoreWrap.append('g').attr('transform', `translate(650, 0)`);\n    scoreLabel.append('text').text('Rank').attr('y', 20).style('text-anchor', 'end').style('font-size', 11);\n    scoreLabel.append('text').text('Value').attr('y', 40).style('text-anchor', 'end').style('font-size', 11);\n\n    scoreGroups.attr('transform', (d, i, n)=> {\n       return  i === 0 ? `translate(${(670)},0)` : \n       `translate(${(660+(d3.sum(d3.selectAll(n).filter((f, j)=> i > j).data().map(m=> m.label.length * 6)))+ (i*30))},0)`;\n    });\n    var zero = d3.format(\".3n\");\n    scoreGroups.append('text').text((d, i)=>  d.label).style('font-size', 10);\n    scoreGroups.append('text').text((d, i)=> zero(d.rank)).style('font-size', 10).attr('y', 20);\n    scoreGroups.append('text').text((d, i)=> zero(d.value)).style('font-size', 10).attr('y', 40);\n\n    let pairGroup = pairWraps.selectAll('g.pair').data(d=> [d.p1, d.p2]).join('g').classed('pair', true);\n\n    var lineGen = d3.line()\n    .x(d=> {\n        let x = d3.scaleLinear().domain([0, 1]).range([0, width]);\n       let distance = x(d.edgeMove);\n        return distance; })\n    .y(d=> {\n        let y = d.attributes[field].yScale;\n        y.range([height, 0]);\n        return y(d.attributes[field].realVal);\n    });\n\n    let innerPaths = pairGroup.append('path')\n    .attr(\"d\", lineGen)\n    .attr(\"class\", \"inner-line\")\n    .style('stroke', 'rgb(165, 185, 198)');\n\n    let branches = pairGroup.selectAll('g.branch').data(d=> d).join('g').classed('branch', true);\n    branches.attr('transform', (d, i)=> `translate(${xScale(d.edgeMove)}, 0)`);\n    branches.filter(f=> f.leaf != true).append('rect').attr('width', 10).attr('height', (d)=> {\n        let y = d.attributes[field].yScale;\n        return y(d.attributes[field].lowerCI95) - y(d.attributes[field].upperCI95)\n    }).attr('fill', 'rgb(165, 185, 198, .5)').attr('y', (d, i)=> {\n        let y = d.attributes[field].yScale;\n        return y(d.attributes[field].upperCI95);\n    });\n\n    branches.append('rect').attr('width', 10).attr('height', 4).attr('y', (d, i)=> {\n        return d.attributes[field].yScale(d.attributes[field].realVal) - 2;\n    });\n\n    pairWraps.append('rect').attr('width', (d, i)=> {\n        return xScale(d.common.edgeMove)})\n        .attr('height', height)\n        .attr('fill', '#fff').style('opacity', 0.7);\n        let yAxisG = pairWraps.append('g').classed('y-axis', true);\n        let xAxisG = pairWraps.append('g').classed('x-axis', true);\n        xAxisG.call(d3.axisBottom(xScale).ticks(10));\n        xAxisG.attr('transform', `translate(0, ${height})`)\n\n    pairWraps.on('mouseover', (d, i)=> {\n        let species = [...d.p1.map(n=> n.node)].concat(d.p2.map(n=> n.node));\n        let labels = [...d.p1.filter(n=> n.leaf === true).map(m=> m.label)].concat(d.p2.filter(n=> n.leaf === true).map(m=> m.label));\n        let neighbors = labels.flatMap(m=> {\n            let start = speciesTest[0].indexOf(m);\n            let ne = speciesTest[0].filter((f, j)=> (j < (+start + 4)) && (j > (+start - 4)));\n            return ne;\n        });\n        \n        let neighNodes = dataMaster[0].filter(f=> neighbors.indexOf(f[f.length -1].label) > -1).flatMap(m=> m.map(f=> f.node))\n       \n        let treeNode  = d3.select('#sidebar').selectAll('.node');\n        let treeLinks  = d3.select('#sidebar').selectAll('.link');\n        treeNode.filter(f=> {\n            return species.indexOf(f.data.node) > -1;\n        }).classed('hover', true);\n        treeLinks.filter(f=> species.indexOf(f.data.node) > -1).classed('hover', true);\n\n        treeNode.filter(f=> neighNodes.indexOf(f.data.node) > -1).classed('hover-neighbor', true);\n        //Hiding Others\n        treeNode.filter(f=> (neighNodes.indexOf(f.data.node) === -1) && (species.indexOf(f.data.node) === -1)).classed('hover-not', true);\n        //Coloring Niehgbors\n        treeLinks.filter(f=> neighNodes.indexOf(f.data.node) > -1).classed('hover-neighbor', true);\n        //Hiding Others\n        treeLinks.filter(f=> (neighNodes.indexOf(f.data.node) === -1) && (species.indexOf(f.data.node) === -1)).classed('hover-not', true);\n\n        return d3.select(this).classed('hover', true);\n    })\n\n    let axisGroup = pairWraps.append('g').classed('y-axis', true);\n  \n    axisGroup.each((d, i, n)=> {\n        let scale = d.p1[0].attributes[field].yScale;\n        d3.select(n[i]).call(d3.axisLeft(scale).ticks(5));\n    });\n\n    let mouseG = pairWraps.append(\"g\")\n    .attr(\"class\", \"mouse-over-effects\");\n\n  mouseG.append(\"path\") // this is the black vertical line to follow mouse\n    .attr(\"class\", \"mouse-line\")\n    .style(\"stroke\", \"black\")\n    .style(\"stroke-width\", \"1px\")\n    .style(\"opacity\", \"0\");\n\n   var mousePerLine = mouseG.selectAll('.mouse-per-line')\n   .data((d, i)=> {\n      // console.log(d)\n    return [d.p1, d.p2]})\n   .join(\"g\")\n   .attr(\"class\", \"mouse-per-line\");\n\n mousePerLine.append(\"circle\")\n   .attr(\"r\", 7)\n   .style(\"stroke\", function(d) {\n     return 'red';\n   })\n   .style(\"fill\", \"none\")\n   .style(\"stroke-width\", \"1px\")\n   .style(\"opacity\", \"0\");\n\n mousePerLine.append(\"text\")\n   .attr(\"transform\", \"translate(10,3)\");\n\n   let lines = pairWraps.selectAll('.pair').selectAll('path')\n\n   mouseG.append('svg:rect') // append a rect to catch mouse movements on canvas\n      .attr('width', width) // can't catch mouse events on a g element\n      .attr('height', height)\n      .attr('fill', 'none')\n      .attr('pointer-events', 'all')\n      .on('mouseout', function() { // on mouse out hide line, circles and text\n        d3.selectAll(\".mouse-line\")\n          .style(\"opacity\", \"0\");\n        d3.selectAll(\".mouse-per-line circle\")\n          .style(\"opacity\", \"0\");\n        d3.selectAll(\".mouse-per-line text\")\n          .style(\"opacity\", \"0\");\n      })\n      .on('mouseover', (d, i, n)=> { // on mouse in show line, circles and text\n\n        d3.select(n[i].parentNode).selectAll('.mouse-line')\n          .style(\"opacity\", \"1\");\n          d3.select(n[i].parentNode).selectAll(\".mouse-per-line circle\")\n          .style(\"opacity\", \"1\");\n          d3.select(n[i].parentNode).selectAll(\".mouse-per-line text\")\n          .style(\"opacity\", \"1\");\n      })\n      .on('mousemove', (dat, i, n)=> { // mouse moving over canvas\n        var mouse = d3.mouse(n[i]);\n        //console.log('this', d3.select(n[i].parentNode).select('.mouse-line'))\n        d3.select(n[i].parentNode).select('.mouse-line')\n          .attr(\"d\", function() {\n            var d = \"M\" + mouse[0] + \",\" + height;\n            d += \" \" + mouse[0] + \",\" + 0;\n            return d;\n          });\n         // console.log('dat??',dat)\n          d3.select(n[i].parentNode).selectAll('.mouse-per-line')\n         // d3.selectAll(\".mouse-per-line\")\n          .attr(\"transform\", function(d, j, node) {\n           // console.log('test',width/mouse[0], d)\n            var xDate = xScale.invert(mouse[0]),\n                bisect = d3.bisector(function(d) { return d.edgeLength; }).right,\n                idx = bisect(d.values, xDate);\n            \n            let line = n[i].parentNode.parentNode.getElementsByClassName('inner-line');\n            console.log('line', line)\n           // console.log('line',line)\n            var beginning = 0,\n                end = line[j].getTotalLength(),\n                target = null\n\n            while (true){\n               target = Math.floor((beginning + end) / 2);\n               var pos = line[j].getPointAtLength(target);\n              if ((target === end || target === beginning) && pos.x !== mouse[0]) {\n                  break;\n              }\n              if (pos.x > mouse[0])      end = target;\n              else if (pos.x < mouse[0]) beginning = target;\n              else break; //position found\n            }\n            let y = dat.p1[0].attributes[field].yScale;\n            \n            d3.select(node[j]).select('text')\n              .text(y.invert(pos.y).toFixed(2))\n              .style('font-size', 11)\n              .attr('y', ()=> {\n                  return j === 0 ? 10 : -10;\n                });\n              \n            return \"translate(\" + mouse[0] + \",\" + pos.y +\")\";\n          });\n      });\n   \n    pairWraps.on('mousemove', function(d, i) {\n        let scale = d.p1[0].attributes[field].yScale;\n        // let axisGroupTest = d3.select(this).select('.y-axis');\n        // let axisGroup = axisGroupTest.empty() ? d3.select(this).append('g').classed('y-axis', true) : axisGroupTest;\n        // if(d3.select('#compare-button').empty() || d3.select('#compare-button').text()==='Normal Mode'){\n        //     axisGroup.attr('transform', (d, i)=> 'translate('+(d3.mouse(this)[0] - 10)+',0)')\n        //     axisGroup.call(d3.axisLeft(scale).ticks(5));\n        // }else{\n        //     let pathD = d3.select(this).select('.path-groups').selectAll('path');\n        //     let maxDiff = pathD.data().map(d=> d[0].maxDiff)[0];\n        //     axisGroup.attr('transform', (d, i)=> 'translate('+(d3.mouse(this)[0] - 10)+',0)');\n        //     let newScale = d3.scaleLinear().domain([maxDiff, 0]).range([0, 60]);\n        //     axisGroup.call(d3.axisLeft(newScale).ticks(5));\n        // }\n        let valueGroupTest = d3.select(this).select('.data-axis');\n        let valueGroup = valueGroupTest.empty() ? d3.select(this).append('g').classed('data-axis', true) : valueGroupTest;\n        //console.log('this data',d)\n\n    }).on('mouseleave', function(){\n        // let axisGroup = d3.select(this).select('.y-axis');\n        // axisGroup.remove();\n        let treeNode  = d3.select('#sidebar').selectAll('.node').classed('hover', false).classed('hover-neighbor', false).classed('hover-not', false);\n        let treeLinks  = d3.select('#sidebar').selectAll('.link').classed('hover', false).classed('hover-neighbor', false).classed('hover-not', false);\n        return d3.select(this).classed('hover', false);\n    });\n    \n\n\n\n\n}","import * as d3 from \"d3\";\nimport { renderDistibutions, groupDistributions } from './distributionView';\nimport {drawPathsAndAttributes} from './renderPathView';\nimport { getLatestData } from \"./filterComponent\";\nimport { generatePairs } from \"./pairView\";\n\nexport let groupedView = false;\n\nexport function updateMainView(scales, d){\n\n    let main = d3.select('#main');\n    let data = getLatestData();\n    let moveMetric = 'edgeLength';\n\n    main.selectAll('*').remove();\n  \n    if(d.field === 'View Paths'){\n        drawPathsAndAttributes(data, main, scales, moveMetric);\n        document.getElementById(\"scrunch\").disabled = false;\n    }else if(d.field === 'View Summary'){\n        renderDistibutions(data, main, scales, moveMetric);\n        document.getElementById(\"scrunch\").disabled = true;\n    }else if(d.field === 'View Pairs'){\n        generatePairs(data, main);\n    }else{\n        console.error('field not found');\n    }\n\n\n}\n\nexport function initialViewLoad(scales){\n\n    let main = d3.select('#main');\n    let data = getLatestData();\n\n    main.selectAll('*').remove();\n\n    if(data.length > 50){\n        groupDistributions(data, main, scales);\n        d3.select('#view-toggle').text('View Paths');\n        document.getElementById(\"scrunch\").disabled = true;\n    }else{\n        drawPathsAndAttributes(data, main, scales);\n        d3.select('#view-toggle').text('View Summary');\n        document.getElementById(\"scrunch\").disabled = false;\n    }\n\n}","import '../styles/index.scss';\nimport * as d3 from \"d3\";\n\nimport {dataMaster, nestedData, collapsed} from './index';\nimport {filterMaster, removeFilter, addFilter} from './filterComponent';\nimport { updateMainView, groupedView } from './viewControl';\nimport {getNested} from './pathCalc';\nimport { dropDown } from './buttonComponents';\nimport { updateRanking } from './pairView';\nimport { pairPaths } from './dataFormat';\n\n\nexport function buildTreeStructure(paths, edges){\n    let root = paths[0][0];\n    let nestedData = getNested(root, edges.rows);\n  \n    return nestedData;\n}\n\nfunction updateBrush(treeBrush, scales){\n    \n    let sidebar = d3.select('#sidebar');\n    let toolbarDiv = d3.select('#toolbar');\n\n    let data = filterMaster.length === 0 ? dataMaster[0] : dataMaster[0];\n    let nodes = sidebar.select('svg').select('g').selectAll('.node');\n    let selectedNodes = nodes.filter(n=> (n.y > d3.event.selection[0][0]) && (n.y < d3.event.selection[1][0]) && (n.x > d3.event.selection[0][1]) && (n.x < d3.event.selection[1][1])).classed('selected', true);\n    let filterArray = selectedNodes.data().map(n=> n.data.node);\n    let test = treeFilter(data, filterArray);\n    let brushId = 'brush-'+ filterMaster.filter(f=> f.attributType === 'topology').length;\n    let filterOb = addFilter('data-filter', 'topology', brushId, treeFilter, [...data], [...test], null);\n\n    updateMainView(scales, 'edgeLength');\n   \n    ///DIMMING THE FILTERED OUT NODES//////\n\n    ////Class Tree Links////\n    let treeLinks  = d3.select('#sidebar').selectAll('.link');\n    let treeNode  = d3.select('#sidebar').selectAll('.node');\n\n    let nodeList = test.flatMap(path=> path.map(node => node.node));\n\n    d3.selectAll('.link-not-there').classed('link-not-there', false);\n    d3.selectAll('.node-not-there').classed('node-not-there', false);\n\n    let missingLinks = treeLinks.filter(f=> nodeList.indexOf(f.data.node) === -1);\n    missingLinks.classed('link-not-there', true);\n\n    let missingNodes = treeNode.filter(f=> nodeList.indexOf(f.data.node) === -1);\n    missingNodes.classed('node-not-there', true);\n\n    ///END NODE DIMMING///////\n\n    let button = toolbarDiv.append('button').classed('btn btn-info', true);\n    let span = button.append('span').classed('badge badge-light', true);\n    span.text(test.length);\n    let label = button.append('h6').text('Tree Filter');\n\n    let xSpan = label.append('i').classed('close fas fa-times', true);\n    xSpan.on('click', async (d, i, n)=> {\n        removeFilter(brushId);\n        await updateMainView(scales, 'edgeLength');\n        d3.selectAll('.selected').classed('selected', false);\n        d3.selectAll('.link-not-there').classed('link-not-there', false);\n        d3.selectAll('.node-not-there').classed('node-not-there', false);\n        button.remove();\n        d3.select(this).call(treeBrush.move, null);\n        d3.select('.tree-brush').remove();\n    });\n}\n\nexport function renderTreeButtons(normedPaths, calculatedScales, sidebar){\n    \n    ///SIDBAR STUFF\n    sidebar = sidebar.append('div').classed('button-wrap', true);\n    // let treeButton = sidebar.append('button').text('Filter by Tree').classed('btn btn-outline-secondary', true);  \n    // let treeBrush = d3.brush().extent([[0, 0], [400, 600]]).on('end', (d, i, n) => updateBrush(treeBrush, calculatedScales));\n    // treeButton.on('click', ()=> {\n    //     renderTree(sidebar, true, null, true);\n    //     let treeBrushG = sidebar.select('svg').append('g').classed('tree-brush', true).call(treeBrush);\n    // });\n\n        ///SIDBAR STUFF\n    let treeViewButton = sidebar.append('button').text('Hide Lengths').attr('id', 'length').classed('btn btn-outline-secondary', true);  \n\n    treeViewButton.on('click', ()=> {\n       sidebar.select('svg').remove();\n       if(treeViewButton.text() === 'Show Lengths'){\n            renderTree(sidebar, null, true);\n            treeViewButton.text('Hide Lengths');\n       }else{\n            renderTree(sidebar, null, false);\n            treeViewButton.text('Show Lengths');\n       }\n    });\n\n    treeViewButton.style('opacity', 0).style('width', 0).style('padding', 0).style('margin', 0);\n\n    let optionArray = [{'field':'None'}];\n\n    calculatedScales.map(m=> optionArray.push(m));\n\n    let dropOptions = dropDown(sidebar, optionArray, 'See Values','show-drop-div-sidebar');\n    dropOptions.on('click', (d, i, n)=> {\n        if(d.type === 'discrete'){\n            renderTree(sidebar, d, true);\n            //updateTree(tree, dimensions, treeSvg, g, d, lengthBool);\n        }else if(d.type === 'continuous'){\n            renderTree(sidebar, null, false);\n            //updateTree(tree, dimensions, treeSvg, g, null, lengthBool);\n        }else{\n            renderTree(sidebar, null, false);\n           // updateTree(tree, dimensions, treeSvg, g, null, lengthBool);\n        }\n       sidebar.select('#show-drop-div-sidebar').classed('show', false);\n    });\n\n      ///BUTTON FOR PHENOGRAM VIEW. MAYBE MOVE THIS TO SIDEBAR\n      let phenogramButton = d3.select('#sidebar').select('.button-wrap').append('button').text('Phenogram');\n      phenogramButton.classed('btn btn-outline-secondary', true); \n      phenogramButton.on('click', ()=> {\n          if(phenogramButton.text() === 'Phenogram'){\n            if(d3.select('.attr-drop.dropdown').select('button').empty()){\n                let drop = dropDown(d3.select('#toolbar'), optionArray, optionArray[1].field, 'attr-drop');\n                drop.on('click', (d, i, n)=> {\n                    if(d3.select('.dropdown.change-view').select('button').node().value === \"View Pairs\"){\n                        updateRanking(pairPaths(normedPaths), d.field);\n                    }\n                    renderTree(d3.select('#sidebar'), null, true, d.field);\n                    d3.select('.attr-drop.dropdown').select('button').text(d.field);\n                });\n    \n                renderTree(d3.select('#sidebar'), null, true, d3.select('.attr-drop.dropdown').select('button').text())\n              }else{\n    \n                renderTree(d3.select('#sidebar'), null, true, d3.select('.attr-drop.dropdown').select('button').text())\n              }\n              phenogramButton.text('Phylogeny');\n          }else{\n\n            renderTree(d3.select('#sidebar'), null, false);\n            phenogramButton.text('Phenogram');\n\n          }\n          \n          \n      })\n}\n\nfunction treeFilter(data, selectedNodes){\n    return data.filter(path=> {\n        let nodeNames = path.map(no=> no.node);\n        let booArray = nodeNames.map(id=> selectedNodes.indexOf(id) > -1);\n        return booArray.indexOf(true) > -1\n    });\n}\n\nfunction uncollapseSub(d){\n    d.children = d._children;\n    d._children = null;\n    if(d.children){\n        d.children.map(c=> uncollapseSub(c));\n    }    \n}\n\nfunction collapseSub(d){\n    if(d.children) {\n        d._children = d.children\n        d._children.forEach(collapseSub)\n        d.children = null\n    }  \n}\n\nfunction collapseTree(treeData){\n\n    let leaves = getLeaves(treeData, []);\n    //GOING TO CHANGE ALL BLANK TO ANOLIS FOR THIS SITUATION///\n    leaves.forEach(l=> l.data.clade === \"Norops\" ? l.data.clade = \"Norops\" : l.data.clade = \"Anolis\");\n\n    return stepDown(treeData);\n\n    function stepDown(node){\n        let leaves = getLeaves(node, []);\n        let ids = new Set(leaves.map(m=> m.data.clade));\n        if(ids.size > 1){\n            node.children.map(n=> stepDown(n))\n        }else{\n            node.branchPoint = true;\n            node.clade = Array.from(ids)[0]\n            collapseSub(node);\n            return node;\n        }\n        return node;\n    }\n    \n    function getLeaves(node, array){\n        if(node.children != undefined ){\n            node.children.map(n=> getLeaves(n, array))\n        }else{\n            array.push(node);\n        };\n        return array;\n    }\n}\n\nfunction assignPosition(node, position) {\n    if (node.children === undefined || node.children === null){\n        \n        position = position + 1.5;\n        node.position = position;\n        return position;\n    }else{\n        let positionArray = []\n        node.children.forEach((child) => {\n            position = assignPosition(child, position);\n            positionArray.push(position);\n        });\n        node.options = positionArray;\n        node.position = d3.max(positionArray);\n        return position;\n    }\n}\n\nfunction addingEdgeLength(edge, data){\n    data.combEdge = data.edgeLength + edge;\n    if(data.children){\n        data.children.forEach(chil=> {\n            addingEdgeLength(data.combEdge, chil);\n        });\n    }\n}\n\nexport function renderTree(sidebar, att, uncollapse, pheno){\n    // set the dimensions and margins of the diagram\n    let dimensions = {\n        margin : {top: 10, right: 90, bottom: 50, left: 20},\n        width : 290,\n        height : 520\n    }\n\n    // declares a tree layout and assigns the size\n    var treemap = d3.tree()\n    .size([dimensions.height, dimensions.width]);\n\n    addingEdgeLength(0, nestedData[0]);\n\n    console.log('neeested', pheno ? nestedData[0].attributes[pheno].yScale.domain() : null)\n\n    //  assigns the data to a hierarchy using parent-child relationships\n    var treenodes = d3.hierarchy(nestedData[0]);\n\n    // maps the node data to the tree layout\n    treenodes = treemap(treenodes);\n\n    let groupedBool = d3.select('#show-drop-div-group').attr('value');\n    let lengthBool = d3.select('button#length').text() === 'Hide Lengths';\n\n    let sidebarTest = sidebar.select('svg');\n    let treeSvg = sidebarTest.empty() ? sidebar.append(\"svg\") : sidebarTest;\n    treeSvg.attr(\"width\", dimensions.width + dimensions.margin.left + dimensions.margin.right)\n    .attr(\"height\", dimensions.height + dimensions.margin.top + dimensions.margin.bottom);\n\n    let gTest = treeSvg.select('g.tree-g');\n    let g = gTest.empty() ? treeSvg.append(\"g\").classed('tree-g', true) : gTest;\n    g.attr(\"transform\",\n      \"translate(\" + dimensions.margin.left + \",\" + dimensions.margin.top + \")\");\n\n    if(groupedBool === \"ungrouped\" && uncollapse === false){\n        let newNodes = collapseTree(treenodes);\n        updateTree(newNodes, dimensions, treeSvg, g, att, lengthBool);\n    }else{\n        ////Break this out into other nodes////\n        console.log('pheno',pheno)\n        updateTree(treenodes, dimensions, treeSvg, g, att, lengthBool, pheno);\n    }\n    /////END TREE STUFF\n    ///////////\n}\n\nfunction findDepth(node, array){\n\n    function stepDown(n){\n        if(n.children != null){\n            n.children.forEach(child=> {\n                stepDown(child);\n            })\n        }else{\n            array.push(n);\n        }\n    }\n    stepDown(node);\n\n    return array;\n    \n}\n\nfunction updateTree(treenodes, dimensions, treeSvg, g, attrDraw, length, pheno){\n    \n    assignPosition(treenodes, 0);\n\n   // console.log('PHENOO', pheno ? treenodes.data.attributes[pheno].yScale.domain() : null)\n\n    //console.log('length in tree', pheno, d3.select('.attr-drop.dropdown').empty() ? 'nope': d3.select('.attr-drop.dropdown').select('button').text())\n\n    let branchCount = findDepth(treenodes, []);\n    let xScale = d3.scaleLinear().domain([0, 1]).range([0, dimensions.width]).clamp(true);\n    let yScale = d3.scaleLinear().range([dimensions.height, 0]).domain([0, 1])\n\n    if(length){   \n        g.attr('transform', 'translate(20, 265)');\n        treeSvg.attr('height', 800);\n        yScale.range([500, 0]).domain([0, branchCount.length])\n        xScale.range([0, dimensions.width + 10]);\n    } \n    if(pheno){\n        g.attr('transform', 'translate(20, 50)');\n        treeSvg.attr('height', 800);\n        xScale.domain(treenodes.data.attributes[pheno].yScale.domain())\n        yScale.domain([0, 1]).range([0, 500])\n    }\n\n// adds the links between the nodes\n    let link = g.selectAll(\".link\")\n    .data( treenodes.descendants().slice(1))\n    .join(\"path\")\n    .attr(\"class\", \"link\");\n\n    link.transition()\n    .duration(500)\n    .attr(\"d\", function(d) {\n        if(length && pheno === undefined){\n           return \"M\" + xScale(d.data.combEdge) + \",\" + yScale(d.position)\n           + \"C\" + (xScale(d.data.combEdge) + xScale(d.parent.data.combEdge)) / 2 + \",\" + yScale(d.position)\n           + \" \" + (xScale(d.parent.data.combEdge)) + \",\" + yScale(d.position)\n           + \" \" + xScale(d.parent.data.combEdge) + \",\" + yScale(d.parent.position);\n        }else{\n            return \"M\" + xScale(d.data.attributes[pheno].realVal) + \",\" + yScale(d.data.combEdge)\n            + \" \" + xScale(d.parent.data.attributes[pheno].realVal) + \",\" + yScale(d.parent.data.combEdge);\n            /*\n            return \"M\" + d.y + \",\" + d.x\n            + \"C\" + (d.y + d.parent.y) / 2 + \",\" + d.x\n            + \" \" + (d.y + d.parent.y) / 2 + \",\" + d.parent.x\n            + \" \" + d.parent.y + \",\" + d.parent.x;\n            */\n        }       \n    });\n\n    if(pheno){\n        link.style('opacity', 0.3)\n    }\n\n    // adds each node as a group\n    var node = g.selectAll(\".node\")\n    .data(treenodes.descendants(), d => d.data.node)\n    .join(\"g\")\n    .attr(\"class\", function(d) { \n    return \"node\" + \n    (d.children ? \" node--internal\" : \" node--leaf\"); });\n\n    // adds the circle to the node\n    node.selectAll('circle').data(d=> [d]).join(\"circle\")\n      .attr(\"r\", 3);\n\n    node.transition()\n    .duration(500)\n    .attr(\"transform\", function(d) { \n        if(length && pheno === undefined){\n            return \"translate(\" + xScale(d.data.combEdge) + \",\" + yScale(d.position) + \")\"; \n        }else{\n           // return \"translate(\" + d.y + \",\" + d.x + \")\"; \n           return \"translate(\" + xScale(d.data.attributes[pheno].realVal) + \",\" + yScale(d.data.combEdge) + \")\"; \n        }\n    });\n\n    if(attrDraw != null){\n        let leaves = node.filter(n=> n.data.leaf === true);\n        let notleaves = node.filter(n=> n.data.leaf != true);\n        \n        attrDraw.stateColors.forEach(att=> {\n            let circ = leaves.filter(f=> {\n                return f.data.attributes[attrDraw.field].winState === att.state;\n            }).select('circle');\n            circ.attr('fill', att.color);\n            circ.attr('r', 4)\n            notleaves.selectAll('circle').attr('fill', 'gray');\n        });\n    }else{\n        node.selectAll('circle').attr('fill', 'gray');\n    }\n\n    node.on('mouseover', (d, i, n)=> {\n        let paths = d3.select('#main-path-view').selectAll('.paths');\n        let points = d3.select('#main-summary-view').selectAll('.branch-points');\n        points.filter(f=> f.node === d.data.node).classed('selected', true);\n\n        let selectedPaths = paths.filter(path=> {\n            let nodes = path.map(m=> m.node);\n            return nodes.indexOf(d.data.node) > -1;\n        }).classed('hover', true);\n        selectedPaths.selectAll('g').filter(g=> g.node === d.data.node).classed('selected', true);\n        d3.select(n[i]).classed('selected-branch', true);\n\n        if(d.data.label){\n            let tool = d3.select('#tooltip');\n            tool.transition()\n            .duration(200)\n            .style(\"opacity\", .9);\n          \n            tool.html(`${d.data.label.charAt(0).toUpperCase() + d.data.label.slice(1)}`)\n            .style(\"left\", (d3.event.pageX - 40) + \"px\")\n            .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            tool.style('height', 'auto');\n        }\n\n    }).on('mouseout', (d, i, n)=> {\n        d3.selectAll('.paths.hover').classed('hover', false);\n        d3.selectAll('g.selected').classed('selected', false);\n        d3.select(n[i]).classed('selected-branch', false);\n\n        let tool = d3.select('#tooltip');\n        tool.transition()\n          .duration(500)\n          .style(\"opacity\", 0);\n    });\n    let leaves = node.filter(f=> f.data.children.length == 0);\n\n    node.selectAll('text').remove();\n    node.selectAll('.triangle').remove();\n\n    let branchNodes = node.filter(n=> n.branchPoint === true);\n    branchNodes.each((b, i, n)=> {\n        if(b.children === null){\n            let triangle = d3.select(n[i]).append('path').classed('triangle', true).attr('d', d3.symbol().type(d3.symbolTriangle).size('400'))\n            triangle.attr('transform', `rotate(-90) translate(0, 65) scale(.9 4)`);\n            triangle.attr('fill', 'gray').style('opacity', 0.3);\n            let text = d3.select(n[i]).selectAll('text').data(d=> [d]).join('text').text(b.clade);\n            text.attr('transform', 'translate(55, 5)');\n        }\n    })\n    branchNodes.select('circle').attr('fill', 'red').attr('r', 4.5);\n    branchNodes.on('click', (d, i, n)=> {\n        if(d.children == null){\n            uncollapseSub(d);\n        }else{\n            collapseSub(d);\n        }\n        let lengthBool = d3.select('button#length').text() === 'Hide Lengths';\n        updateTree(treenodes, dimensions, treeSvg, g, attrDraw, lengthBool);\n      \n    });\n\n    node.raise();\n    node.selectAll('circle').raise();\n\n    return node;\n}","import '../styles/index.scss';\nimport * as d3 from \"d3\";\nimport {drawPathsAndAttributes, drawDiscreteAtt, drawGroups} from './renderPathView';\nimport {toggleFilters, getLatestData} from './filterComponent';\nimport { updateMainView } from './viewControl';\nimport { collapsed } from '.';\nimport { dropDown } from './buttonComponents';\n\nexport function toolbarControl(toolbar, normedPaths, main, calculatedScales, pathView){\n\n    let viewDrop = dropDown(toolbar, [{'field':'View Summary'},{'field':'View Paths'},{'field':'View Pairs'}], 'Change View', 'change-view');\n\n    viewDrop.on('click', (d, i, n)=> {\n        updateMainView(calculatedScales, d);\n        d3.select('.dropdown.change-view').select('button').node().value = d.field;\n        d3.select('#change-view').classed('show', false);\n    });\n    \n    let filterButton = toolbar.append('button').attr('id', 'view-filter');\n    filterButton.attr('class', 'btn btn-outline-secondary').text('Show Filters');\n    filterButton.on('click', ()=> toggleFilters(filterButton, main, calculatedScales));\n    ///LENGTH BUTTON CODE\n\n    let scrunchButton = toolbar.append('button').attr('id', 'scrunch');\n    scrunchButton.attr('class', 'btn btn-outline-secondary').text('Collapse Attributes');\n    scrunchButton.attr('value', false);\n    scrunchButton.on('click', ()=> toggleScrunch(scrunchButton, main, calculatedScales));\n\n    let discreteViewButton = toolbar.append('button').attr('id', 'discrete-view');\n    discreteViewButton.attr('class', 'btn btn-outline-secondary').text('Switch to Discrete Bars');\n    discreteViewButton.attr('value', false);\n    discreteViewButton.on('click', ()=> {\n        let discretePredictedGroups = d3.selectAll('.predicated-attr-groups');\n        if(discreteViewButton.text() === 'Switch to Discrete Bars'){\n            discreteViewButton.text('Switch to Discrete Dots');\n            drawDiscreteAtt(discretePredictedGroups, collapsed, true);\n        }else{\n            discreteViewButton.text('Switch to Discrete Bars');\n            drawDiscreteAtt(discretePredictedGroups, collapsed, false);\n        }\n    });\n\n    let optionArray = [{'field':'None'}];\n\n    calculatedScales.map(m=> {\n        if(m.type === 'discrete'){\n            optionArray.push(m);\n        }\n    });\n\n    let dropOptions = dropDown(toolbar, optionArray, 'Group By','show-drop-div-group');\n    toolbar.select('#show-drop-div-group').attr('value', 'ungrouped');\n\n    dropOptions.on('click', (d, i, n)=> {\n        if(d.type === 'discrete'){\n            let data = getLatestData();\n            let stateBins = d.scales.map(m=> {\n                return {'field': m.field, 'state': m.scaleName, 'data': []}});\n           \n            stateBins.map(state=> {\n               state.data = data.filter(paths=> {\n                    let node = paths.filter(no=> no.leaf === true);\n                        return node[0].attributes[state.field].winState === state.state;\n                });\n            });\n           d3.select('#main').selectAll('*').remove();\n           drawGroups(stateBins, calculatedScales);\n        }else{\n            console.error('THIS HAS TO BE DISCRETE');\n        }\n        toolbar.select('#show-drop-div-group').classed('show', false);\n    });\n}\n\n////COLLAPSES THE NODES DOWN\nfunction toggleScrunch(button, main, calculatedScales){\n\n    let data = getLatestData();\n   \n    if(button.text() === 'Collapse Attributes'){\n        button.text('Expand Attributes');\n        main.selectAll('*').remove();\n        button.attr('value', true);\n        drawPathsAndAttributes(data, main, calculatedScales);\n    }else{\n        button.text('Collapse Attributes');\n        main.selectAll('*').remove();\n        button.attr('value', false);\n        drawPathsAndAttributes(data, main, calculatedScales);\n    }\n}","import '../styles/index.scss';\nimport * as d3 from \"d3\";\nimport {loadData} from './dataLoad';\nimport {calculateScales, matchLeaves, matchEdges, normPaths, filterKeeper, pairPaths} from './dataFormat';\nimport {allPaths, pullPath, getPath} from './pathCalc';\nimport {renderTree, buildTreeStructure, renderTreeButtons} from './sidebarComponent';\nimport {toolbarControl} from './toolbarComponent';\nimport { initialViewLoad } from './viewControl';\n\nexport const dataMaster = [];\nexport const savedSelected = [];\nexport const collapsed = false;\nexport const nestedData = [];\nexport const speciesTest = [];\n\nexport const colorKeeper = [\n    ['#0dc1d1', '#c8f7fd'],\n    ['#3AD701', '#2a9b01'],\n    ['#fec303', '#d3a001'],\n    ['#fe4ecb', '#d30197'],\n    ['#f36b2c'],\n    ['#1abc9c'],\n    ['#493267'],\n    ['#a40b0b'],\n    ['#0095b6'],\n]\n\nlet wrap = d3.select('#wrapper');\nlet main = wrap.select('#main');\nlet selectedPaths = wrap.select('#selected');\nlet sidebar = wrap.select('#sidebar');\n\n//hiding this for dev\n//sidebar.style('opacity', 0)\n\nlet toolbarDiv = wrap.select('#toolbar');\n//WF produce rich tree containing the full ASR matrix tree_attributed\n//loadData(d3.json, './public/data/body-length-res.json', '').then(d=> console.log('new data!', d))\nloadData(d3.json, './public/data/anolis_Losis_asr_tree.json', '').then(data=> {\n    let pathArray = pullPath([], [data], [], [], 0);\n    let pathTest = pathArray.map(m=> d3.sum(m.map(e=> e.edge_data.weight)))\n    console.log('NEW NEW',pathArray);\n});\nloadData(d3.json, './public/data/asr-test.json', '').then(data=> {\n    let pathArray = pullPath([], [data], [], [], 0);\n    let pathTest = pathArray.map(m=> d3.sum(m.map(e=> e.edge_data.weight)))\n    console.log('NEW NEW ASR',pathArray);\n});\n\nloadData(d3.json, './public/data/anolis-edges.json', 'edge').then(async edges => {\n\n    //helper function to create array of unique elements\n    Array.prototype.unique = function() {\n        return this.filter(function (value, index, self) { \n            return self.indexOf(value) === index;\n        });\n    }\n\n    let edgeLen = await loadData(d3.json, './public/data/anolis-edge-length.json', 'edge');\n\n    //Mapping data together/////\n    let edgeSource = edges.rows.map(d=> d.V1);\n    let leaves = edges.rows.filter(f=> edgeSource.indexOf(f.V2) == -1 );\n    let leafChar = await loadData(d3.json, './public/data/anolisLeafChar.json', '');\n    let leafChar2 = await loadData(d3.csv, './public/data/anolisDataNew.csv', '');\n    let labels = await loadData(d3.json, './public/data/anolis-labels.json', '');\n\n// console.log('new attribute data',leafChar, leafChar2)\n  //  console.log(Object.entries(leafChar2).filter(en=> en[0] != 'columns' && en[0] != 'type'));\n    let rows = Object.entries(leafChar2).filter(en=> en[0] != 'columns' && en[0] != 'type');\n    \n //   let leafChar = {'rows': rows.map(m=> m[1]), 'type': leafChar2.type, 'fields': leafChar2.columns};\n\n    ///MAKE A ESTIMATED SCALES THING\n    let calculatedAtt = {\n        'awesomeness' : await loadData(d3.json, './public/data/anolis-awesomeness-res.json', 'continuous'),\n        'island' : await loadData(d3.json, './public/data/anolis-island-res.json', 'discrete'),\n        'SVL' : await loadData(d3.json, './public/data/anolis-svl-res.json', 'continuous'),\n        'ecomorph': await loadData(d3.json, './public/data/anolis-ecomorph-res.json', 'discrete'),\n        'PCIII_padwidth_vs_tail': await loadData(d3.json, './public/data/padwidth-vs-tail-res.json', 'continuous'),\n    }\n\n    ////CALCULATE THE SCALES FOR EACH ATTRIBUTE////////\n    let calculatedScales = calculateScales(calculatedAtt, colorKeeper);\n\n    ///MATCH LEAF CHARACTERS AND LABELS TO LEAVES///\n    let matchedLeaves = matchLeaves(labels, leaves, leafChar, calculatedScales);\n\n    //MATCH CALC ATTRIBUTES TO EDGES///\n    let matchedEdges = matchEdges(edges, edgeLen, calculatedAtt, calculatedScales);\n\n    ///CALCULATES PATHS FROM THE DATA////\n    let paths = allPaths(matchedEdges, matchedLeaves, \"V1\", \"V2\");\n\n    let normedPaths = normPaths(paths, calculatedAtt, calculatedScales);\n    dataMaster.push(normedPaths);\n//console.log(normedPaths.flatMap(m=> m.filter(f=> f.leaf === true)).map(l=> l.label))\n  //  console.log(normedPaths.filter(f=> f.label));\n\n    speciesTest.push(normedPaths.flatMap(m=> m.filter(f=> f.leaf === true)).map(l=> l.label));\n   \n    toolbarControl(toolbarDiv, normedPaths, main, calculatedScales, 'paths');\n    \n    let filterDiv = wrap.select('#filter-tab').classed('hidden', true);\n\n    ////////TREE RENDER IN SIDEBAR////////\n    \n    nestedData.push(buildTreeStructure(paths, edges));\n    renderTreeButtons(normedPaths, calculatedScales, sidebar, false);\n    let tree = renderTree(sidebar, null, false);\n    \n    /// LOWER ATTRIBUTE VISUALIZATION ///\n    initialViewLoad(calculatedScales, 'edgeLength');\n});\n\nlet tooltip = wrap.append(\"div\")\n.attr(\"id\", \"tooltip\")\n.style(\"opacity\", 0);\n/*\nloadData(d3.json, './public/data/geospiza_with_attributes.json').then(data=> {\n    let pathArray = pullPath([], [data], [], [], 0);\n\n    //console.log('pa',pathArray);\n});*/\n/*\nloadData(d3.json, './public/data/geospiza_loop_all_asr_features.json').then(data=> {\n    let pathArray = pullPath([], [data], [], [], 0);\n\n    console.log('pa RICH',pathArray);\n});*/\n/*\nloadData(d3.json, './public/data/anolis_rich_ASR_pad_vs_tail.json').then(data=> {\n    let pathArray = pullPath([], [data], [], [], 0);\n\n    console.log('anolis RICH',pathArray);\n});*/\n\n\n\n\n"],"sourceRoot":""}